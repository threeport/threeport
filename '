package helmworkload

import (
	"bytes"
	"fmt"

	"helm.sh/helm/v3/pkg/releaseutil"
)

// ThreeportPostRenderer implements the postrender.PostRenderer interface for
// Threeport purposes.
type ThreeportPostRenderer struct{}

// Run modifies the provided manifests and returns the modified version
func (p *ThreeportPostRenderer) Run(renderedManifests *bytes.Buffer) (modifiedManifests *bytes.Buffer, err error) {
	//// Example: Add a comment to the manifests
	//modified := []byte("# Post-rendered manifests\n" + renderedManifests.String())

	splitManifests := releaseutil.SplitManifests(renderedManifests.String())
	var postRenderedManifests string
	for _, manifest := range splitManifests {
		modifiedManifest := "\n# modified manifest\n" + manifest
		postRenderedManifests += "\n---"
		postRenderedManifests += modifiedManifest
	}

	fmt.Println("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
	fmt.Println(postRenderedManifests)

	return bytes.NewBuffer([]byte(postRenderedManifests)), nil
}
