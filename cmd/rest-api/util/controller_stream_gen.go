// generated by 'threeport-sdk gen' for nats jetstream boilerplate - do not edit

package util

import (
	"fmt"
	nats "github.com/nats-io/nats.go"
	v0 "github.com/threeport/threeport/pkg/api/v0"
)

// Initialize the NATS Jet stream context with controller streams
func InitJetStream(nc *nats.Conn) (*nats.JetStreamContext, error) {
	js, err := nc.JetStream(nats.PublishAsyncMaxPending(256))
	if err != nil {
		return nil, fmt.Errorf("failed to create jetstream context: %w", err)
	}
	// add controller streams

	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.AwsStreamName,
		Subjects: v0.GetAwsSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.AwsStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.ControlPlaneStreamName,
		Subjects: v0.GetControlPlaneSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.ControlPlaneStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.GatewayStreamName,
		Subjects: v0.GetGatewaySubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.GatewayStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.HelmWorkloadStreamName,
		Subjects: v0.GetHelmWorkloadSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.HelmWorkloadStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.KubernetesRuntimeStreamName,
		Subjects: v0.GetKubernetesRuntimeSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.KubernetesRuntimeStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.ObservabilityStreamName,
		Subjects: v0.GetObservabilitySubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.ObservabilityStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.SecretStreamName,
		Subjects: v0.GetSecretSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.SecretStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.TerraformStreamName,
		Subjects: v0.GetTerraformSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.TerraformStreamName, err)
	}
	_, err = js.AddStream(&nats.StreamConfig{
		Name:     v0.WorkloadStreamName,
		Subjects: v0.GetWorkloadSubjects(),
	})
	if err != nil {
		return nil, fmt.Errorf("could not add stream %s: %w", v0.WorkloadStreamName, err)
	}

	return &js, nil
}
