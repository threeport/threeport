apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3-client
---
apiVersion: v1
kind: Secret
metadata:
  name: getting-started-wordpress
  namespace: "default"
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.2
    app.kubernetes.io/instance: getting-started
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  wordpress-password: "VFFvU0RJaUs2V3dzeXJtWAo="
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: wordpress-db-connection
#  namespace: "default"
#  labels:
#    app.kubernetes.io/instance: getting-started
#    app.kubernetes.io/managed-by: threeport
#type: Opaque
#data:
#  db-endpoint: "wordpress-db.cyijmd0g5rqi.us-east-1.rds.amazonaws.com"
#  db-port: "3306"
#  db-name: "wordpress"
#  db-user: "wordpress"
#  db-password: "SmE5Rlp2dkg2b1diSWhkcg=="
---
apiVersion: v1
kind: Service
metadata:
  name: getting-started-wordpress
  namespace: "default"
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.2
    app.kubernetes.io/instance: getting-started
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: wordpress
    app.kubernetes.io/instance: getting-started
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: getting-started-wordpress
  namespace: "default"
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.2
    app.kubernetes.io/instance: getting-started
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: gp2
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: getting-started-wordpress
  namespace: "default"
  labels:
    app.kubernetes.io/name: wordpress
    helm.sh/chart: wordpress-16.1.2
    app.kubernetes.io/instance: getting-started
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: wordpress
      app.kubernetes.io/instance: getting-started
  strategy:
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wordpress
        helm.sh/chart: wordpress-16.1.2
        app.kubernetes.io/instance: getting-started
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: s3-client

      # yamllint disable rule:indentation
      hostAliases:
        - hostnames:
          - status.localhost
          ip: 127.0.0.1
      # yamllint enable rule:indentation
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: wordpress
                    app.kubernetes.io/instance: getting-started
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      securityContext:
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: s3-client
          image: cimg/aws:2023.09
          command: ["sleep", "3600"]  # will run for 1 hour
        - name: wordpress
          image: docker.io/bitnami/wordpress:6.2.0-debian-11-r22
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: MARIADB_HOST
              valueFrom:
                secretKeyRef:
                  name: wordpress-db-conn
                  key: db-endpoint
            - name: MARIADB_PORT_NUMBER
              valueFrom:
                secretKeyRef:
                  name: wordpress-db-conn
                  key: db-port
            - name: WORDPRESS_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-db-conn
                  key: db-name
            - name: WORDPRESS_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-db-conn
                  key: db-user
            - name: WORDPRESS_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-db-conn
                  key: db-password
            - name: WORDPRESS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: WORDPRESS_PASSWORD
            - name: WORDPRESS_SMTP_PASSOWRD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secret
                  key: WORDPRESS_SMTP_PASSWORD
            - name: WORDPRESS_USERNAME
              value: "user"
            - name: WORDPRESS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: getting-started-wordpress
                  key: wordpress-password
            - name: WORDPRESS_EMAIL
              value: "user@example.com"
            - name: WORDPRESS_FIRST_NAME
              value: "FirstName"
            - name: WORDPRESS_LAST_NAME
              value: "LastName"
            - name: WORDPRESS_HTACCESS_OVERRIDE_NONE
              value: "no"
            - name: WORDPRESS_ENABLE_HTACCESS_PERSISTENCE
              value: "no"
            - name: WORDPRESS_BLOG_NAME
              value: "User's Blog!"
            - name: WORDPRESS_SKIP_BOOTSTRAP
              value: "no"
            - name: WORDPRESS_TABLE_PREFIX
              value: "wp_"
            - name: WORDPRESS_SCHEME
              value: "http"
            - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
              value: ""
            - name: WORDPRESS_PLUGINS
              value: "none"
            - name: APACHE_HTTP_PORT_NUMBER
              value: "8080"
            - name: APACHE_HTTPS_PORT_NUMBER
              value: "8443"
          envFrom:
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-admin/install.php
              port: 'http'
              scheme: 'HTTP'
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              httpHeaders: []
              path: /wp-login.php
              port: 'http'
              scheme: 'HTTP'
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - mountPath: /bitnami/wordpress
              name: wordpress-data
              subPath: wordpress
      volumes:
        - name: wordpress-data
          persistentVolumeClaim:
            claimName: getting-started-wordpress

