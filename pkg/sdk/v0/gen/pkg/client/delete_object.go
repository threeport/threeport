package client

import (
	"fmt"
	"path/filepath"
	"slices"

	. "github.com/dave/jennifer/jen"

	cli "github.com/threeport/threeport/pkg/cli/v0"
	sdk "github.com/threeport/threeport/pkg/sdk/v0"
	"github.com/threeport/threeport/pkg/sdk/v0/gen"
	"github.com/threeport/threeport/pkg/sdk/v0/util"
)

// GenDeleteObjByTypeAndId generates a custom function to delete object by type
// and ID for threeport/threeport only.  Not generated for extensions.
func GenDeleteObjByTypeAndId(gen *gen.Generator, sdkConfig *sdk.SdkConfig) error {
	for _, apiVersion := range gen.GlobalVersionConfig.Versions {
		f := NewFile(apiVersion.VersionName)
		f.HeaderComment("generated by 'threeport-sdk gen' - do not edit")

		f.Comment("DeleteObjectByTypeAndID deletes an instance given a string representation of its type and ID.")
		f.Func().Id("DeleteObjectByTypeAndID").Params(
			Id("apiClient").Op("*").Qual("net/http", "Client"),
			Id("apiAddr").Id("string"),
			Id("objectType").Id("string"),
			Id("id").Id("uint"),
		).Id("error").Block(
			Line(),
			Switch(Id("objectType")).BlockFunc(func(g *Group) {
				for _, name := range apiVersion.RouteNames {
					g.Case(Lit(fmt.Sprintf("%s.%s", apiVersion.VersionName, name))).Block(
						If(Id("_").Op(",").Id("err")).Op(":=").Id(
							fmt.Sprintf("Delete%s", name),
						).Call(List(Id("apiClient"), Id("apiAddr"), Id("id"))).Op(";").Err().Op("!=").Nil().Block(
							Return().Qual(
								"fmt", "Errorf",
							).Call(Lit(fmt.Sprintf("failed to delete %s: %%w", name)).Op(",").Id("err")),
						),
					)
					g.Line()
				}
			}),
			Line(),
			Return().Nil(),
		)
		f.Line()

		// write code to file if not excluded by SDK config
		genFilepath := filepath.Join(
			"pkg",
			"client",
			apiVersion.VersionName,
			"delete_object_gen.go",
		)
		if slices.Contains(sdkConfig.ExcludeFiles, genFilepath) {
			cli.Info(fmt.Sprintf("source code generation skipped for %s", genFilepath))
		} else {
			_, err := util.WriteCodeToFile(f, genFilepath, true)
			if err != nil {
				return fmt.Errorf("failed to write generated code to file %s: %w", genFilepath, err)
			}
			cli.Info(fmt.Sprintf("source code to custom delete object function written to %s", genFilepath))
		}
	}

	return nil
}
