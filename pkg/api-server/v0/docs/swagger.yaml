basePath: /
definitions:
  api.RESTAPIVersions:
    properties:
      API:
        description: Required.  REST API resource name.
        type: string
      Versions:
        description: Required.  REST API resource versions.
        items:
          type: string
        type: array
    required:
    - API
    - Versions
    type: object
  v0.AttachedObjectReference:
    properties:
      ObjectID:
        type: integer
      Type:
        type: string
      WorkloadInstanceID:
        description: The workload definition this resource belongs to.
        type: integer
    required:
    - WorkloadInstanceID
    type: object
  v0.AwsAccount:
    properties:
      AccessKeyID:
        description: The access key ID credentials for the AWS account.
        type: string
      AccountID:
        description: The account ID for the AWS account.
        type: string
      AwsEksKubernetesRuntimeDefinitions:
        description: The cluster instances deployed in this AWS account.
        items:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeDefinition'
        type: array
      DefaultAccount:
        description: If true is the AWS Account used if none specified in a definition.
        type: boolean
      DefaultRegion:
        description: The region to use for AWS managed services if not specified.
        type: string
      ExternalId:
        description: |-
          The ExternalId to use when assuming a RoleArn for the AWS account. This is
          automatically generated by the API server if RoleArn is set.
        type: string
      Name:
        description: The unique name of an AWS account.
        type: string
      RoleArn:
        description: The RoleArn to assume for the AWS account.
        type: string
      SecretAccessKey:
        description: The secret key credentials for the AWS account.
        type: string
    required:
    - AccountID
    - DefaultRegion
    - Name
    type: object
  v0.AwsEksKubernetesRuntimeDefinition:
    properties:
      AWSAccountID:
        description: The AWS account in which the EKS cluster is provisioned.
        type: integer
      AwsEksKubernetesRuntimeInstances:
        description: The AWS EKS kubernetes runtime instances derived from this definition.
        items:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeInstance'
        type: array
      DefaultNodeGroupInitialSize:
        description: The number of nodes in the default initial node group.
        type: integer
      DefaultNodeGroupInstanceType:
        description: The AWS instance type for the default initial node group.
        type: string
      DefaultNodeGroupMaximumSize:
        description: The maximum number of nodes the default initial node group should
          have.
        type: integer
      DefaultNodeGroupMinimumSize:
        description: The minimum number of nodes the default initial node group should
          have.
        type: integer
      KubernetesRuntimeDefinitionID:
        description: The kubernetes runtime definition for an EKS cluster in AWS.
        type: integer
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      ZoneCount:
        description: The number of zones the cluster should span for availability.
        type: integer
    required:
    - AWSAccountID
    - DefaultNodeGroupInitialSize
    - DefaultNodeGroupInstanceType
    - DefaultNodeGroupMaximumSize
    - DefaultNodeGroupMinimumSize
    - KubernetesRuntimeDefinitionID
    - Name
    - ZoneCount
    type: object
  v0.AwsEksKubernetesRuntimeInstance:
    properties:
      AwsEksKubernetesRuntimeDefinitionID:
        description: The definition that configures this instance.
        type: integer
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstanceID:
        description: The kubernetes runtime instance associated with the AWS EKS cluster.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Region:
        description: |-
          The AWS Region in which the cluster is provisioned.  This field is
          stored in the instance (as well as definition) since a change to the
          definition will not move a cluster.
        type: string
      ResourceInventory:
        description: An inventory of all AWS resources for the EKS cluster.
        items:
          type: integer
        type: array
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
    required:
    - AwsEksKubernetesRuntimeDefinitionID
    - KubernetesRuntimeInstanceID
    - Name
    type: object
  v0.AwsObjectStorageBucketDefinition:
    properties:
      AwsAccountID:
        description: The AWS account in which the RDS instance will be provisioned.
        type: integer
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      PublicReadAccess:
        description: |-
          When true, objects in the bucket are publicly readable by anyone - for use
          cases such as storing static assets for public websites.  When false,
          only the workload attached to an AWSObjectStorageBucketInstance and the AWS users
          on the account may access the bucket for read or write.
        type: boolean
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      WorkloadBucketEnvVar:
        description: |-
          The environment variable key that the workload is expecting to reference
          for the name of the S3 bucket managed by threeport.
        type: string
      WorkloadServiceAccountName:
        description: |-
          The name of the Kubernetes service account for the workload that will
          access the S3 bucket.  Used to provide secure access using IAM roles for
          service accounts (IRSA).
        type: string
    required:
    - AwsAccountID
    - Name
    - WorkloadBucketEnvVar
    - WorkloadServiceAccountName
    type: object
  v0.AwsObjectStorageBucketInstance:
    properties:
      AwsObjectStorageBucketDefinitionID:
        description: The definition that configures this instance.
        type: integer
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      ResourceInventory:
        description: An inventory of all AWS resources for the S3 bucket.
        items:
          type: integer
        type: array
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      WorkloadInstanceID:
        description: The ID of the workload instance that uses the S3 bucket.
        type: integer
    required:
    - AwsObjectStorageBucketDefinitionID
    - Name
    - WorkloadInstanceID
    type: object
  v0.AwsRelationalDatabaseDefinition:
    properties:
      AwsAccountID:
        description: The AWS account in which the RDS instance will be provisioned.
        type: integer
      BackupDays:
        description: The number of days to retain database backups for.
        type: integer
      DatabaseName:
        description: The name of the database that will be used by the client workload.
        type: string
      DatabasePort:
        description: The port to use to connect to the database.
        type: integer
      Engine:
        description: |-
          The database engine for the instance.  One of:
          * mysql
          * postgres
          * mariadb
        type: string
      EngineVersion:
        description: The version of the database engine for the instance.
        type: string
      MachineSize:
        description: The amount of compute capacity to use for the database virtual
          machine.
        type: string
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      StorageGb:
        description: The amount of storage in Gb to allocate for the database.
        type: integer
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      WorkloadSecretName:
        description: |-
          The name of the Kubernetes secret that will be attached to the
          running workload from which database connection configuration will be
          supplied.  This secret name must be referred to in the Kubernetes
          manifest, .e.g Deployment, for the workload.
        type: string
    required:
    - AwsAccountID
    - DatabaseName
    - DatabasePort
    - Engine
    - EngineVersion
    - MachineSize
    - Name
    - StorageGb
    - WorkloadSecretName
    type: object
  v0.AwsRelationalDatabaseInstance:
    properties:
      AwsRelationalDatabaseDefinitionID:
        description: The definition that configures this instance.
        type: integer
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      ResourceInventory:
        description: An inventory of all AWS resources for the EKS cluster.
        items:
          type: integer
        type: array
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      WorkloadInstanceID:
        description: The ID of the workload instance that the database instance serves.
        type: integer
    required:
    - AwsRelationalDatabaseDefinitionID
    - Name
    - WorkloadInstanceID
    type: object
  v0.ControlPlaneComponent:
    properties:
      BinaryName:
        description: The binary name of the component
        type: string
      ControlPlaneInstanceID:
        description: The control plane instance ID that this component belongs to
        type: integer
      Enabled:
        description: Indicate whether the component is enabled to be deployed. Currently
          only respected by controllers
        type: boolean
      ImageName:
        description: The image name of the component
        type: string
      ImagePullSecretName:
        description: The name of the secret with credentials to pull a private container
          image
        type: string
      ImageRepo:
        description: The image repo of the component
        type: string
      ImageTag:
        description: The image tag of the component
        type: string
      Name:
        description: The name of the component
        type: string
      ServiceAccountName:
        description: The service account name to use when deploying
        type: string
      ServiceResourceName:
        description: The service resource name to use when deploying
        type: string
    required:
    - ControlPlaneInstanceID
    - Name
    type: object
  v0.ControlPlaneDefinition:
    properties:
      AuthEnabled:
        description: Used to indicate whether the control plane is deployed with auth
          settings
        type: boolean
      ControlPlaneInstances:
        description: The associated control plane instances that are deployed from
          this definition.
        items:
          $ref: '#/definitions/v0.ControlPlaneInstance'
        type: array
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name for the definition.
        type: string
      OnboardParent:
        description: |-
          When instances of this control plane are deployed, Object representing control plane and its parent are
          onboarded as part of deployment, using this we can disable that process and simply spin a new instance with
          a clean DB.
        type: boolean
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
    required:
    - Name
    type: object
  v0.ControlPlaneInstance:
    properties:
      ApiServerEndpoint:
        description: Information for connecting to the rest api for the control plane
        type: string
      CACert:
        description: The CA Cert that is associated with the control plane
        type: string
      Children:
        items:
          $ref: '#/definitions/v0.ControlPlaneInstance'
        type: array
      ClientCert:
        description: The client cert that is associated with the control plane
        type: string
      ClientKey:
        description: The client Key that is associated with the control plane
        type: string
      ControlPlaneDefinitionID:
        description: The definition used to configure the control plane instance.
        type: integer
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      CustomComponentInfo:
        description: |-
          Passed in information for the different components of the control plane i.e. controller etc
          When not provided, the default values will be used. If provided, they will override the default values.
          Despite being a reference to another database entry, we dont validate association.
          This allows a user to provide CustomComponentInfo at instance creation time so the reconciler has the info it needs
        items:
          $ref: '#/definitions/v0.ControlPlaneComponent'
        type: array
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      Genesis:
        description: Indicates whether this is was the first control plane that was
          spun up in a control plane group
        type: boolean
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      IsSelf:
        description: When true, indicates the control plane instance represents the
          control plane in which it's stored
        type: boolean
      KubernetesRuntimeInstanceID:
        description: the kubernetes runtime instance the control plane is running
          on
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Namespace:
        description: The namespace to deploy the control plane in
        type: string
      Parent:
        $ref: '#/definitions/v0.ControlPlaneInstance'
      ParentControlPlaneInstanceID:
        description: |-
          These are pointers to the parent and children of the current control plane
          This is useful to map out the topology between control planes being managed by one another
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
    required:
    - ControlPlaneDefinitionID
    - KubernetesRuntimeInstanceID
    - Name
    - Namespace
    type: object
  v0.DomainNameDefinition:
    properties:
      AdminEmail:
        description: The email address of the domain administrator.
        type: string
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      Domain:
        description: |-
          The base domain upon which the subdomain will be added to give a workload
          a unique domain name.
        type: string
      DomainNameInstances:
        description: The associated domain name instances that are deployed from this
          definition.
        items:
          $ref: '#/definitions/v0.DomainNameInstance'
        type: array
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      Zone:
        description: The name of the zone in which the domain is managed.
        type: string
    required:
    - AdminEmail
    - Domain
    - Name
    - Zone
    type: object
  v0.DomainNameInstance:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      DomainNameDefinitionID:
        description: The definition used to define the instance.
        type: integer
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstanceID:
        description: The cluster where the workload that is using the domain name
          is running.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      WorkloadInstanceID:
        description: The workload instance this gateway belongs to.
        type: integer
    required:
    - DomainNameDefinitionID
    - KubernetesRuntimeInstanceID
    - Name
    - WorkloadInstanceID
    type: object
  v0.ForwardProxyDefinition:
    properties:
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      UpstreamHost:
        description: The hostname of the upstream service.
        type: string
      UpstreamPath:
        description: The path for the upstream service.
        type: string
    required:
    - Name
    - UpstreamHost
    - UpstreamPath
    type: object
  v0.ForwardProxyInstance:
    properties:
      ForwardProxyDefinitionID:
        description: The definition used to define the instance.
        type: integer
      KubernetesRuntimeInstanceID:
        description: The kubernetes runtime where the forward proxy is deployed.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
    required:
    - Name
    type: object
  v0.GatewayDefinition:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      DomainNameDefinitionID:
        description: The domain name to serve requests for.
        type: integer
      GatewayInstances:
        description: The associated gateway instances that are deployed from this
          definition.
        items:
          $ref: '#/definitions/v0.GatewayInstance'
        type: array
      HttpPorts:
        description: HttpPorts is a list of HTTP ports to expose to the outside network.
        items:
          $ref: '#/definitions/v0.GatewayHttpPort'
        type: array
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      ServiceName:
        description: The kubernetes service to route requests to.
        type: string
      SubDomain:
        description: An optional subdomain to add to the domain name.
        type: string
      TcpPorts:
        description: TcpPorts is a list of TCP ports to expose to the outside network.
        items:
          $ref: '#/definitions/v0.GatewayTcpPort'
        type: array
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      WorkloadDefinitionID:
        description: The workload definition that belongs to this resource.
        type: integer
    required:
    - Name
    type: object
  v0.GatewayHttpPort:
    properties:
      GatewayDefinitionID:
        description: GatewayDefinitionID is the definition used to configure the gateway
          http port.
        type: integer
      HTTPSRedirect:
        description: Redirect all requests to HTTP port to HTTPS.
        type: boolean
      Path:
        description: The request path to serve requests for.
        type: string
      Port:
        description: The HTTP port to expose.
        type: integer
      TLSEnabled:
        description: Indicates if TLS is enabled.
        type: boolean
    required:
    - GatewayDefinitionID
    - Port
    type: object
  v0.GatewayInstance:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      GatewayDefinitionID:
        description: GatewayDefinitionID is the definition used to configure the workload
          instance.
        type: integer
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstanceID:
        description: The kubernetes runtime where the ingress layer is installed.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      WorkloadInstanceID:
        description: The workload instance this gateway belongs to.
        type: integer
    required:
    - GatewayDefinitionID
    - KubernetesRuntimeInstanceID
    - Name
    - WorkloadInstanceID
    type: object
  v0.GatewayTcpPort:
    properties:
      GatewayDefinitionID:
        description: GatewayDefinitionID is the definition used to configure the gateway
          tcp port.
        type: integer
      Port:
        description: The TCP port to expose.
        type: integer
      TLSEnabled:
        description: Indicates if TLS is enabled.
        type: boolean
    required:
    - GatewayDefinitionID
    - Port
    type: object
  v0.HelmWorkloadDefinition:
    properties:
      Chart:
        description: The name of the helm chart to use from the helm repo, e.g. wordpress
        type: string
      ChartVersion:
        description: The version of the helm chart to use from the helm repo, e.g.
          1.2.3
        type: string
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      HelmWorkloadInstances:
        description: The associated helm workload instances that are deployed from
          this definition.
        items:
          $ref: '#/definitions/v0.HelmWorkloadInstance'
        type: array
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Repo:
        description: |-
          The helm repo URL to pull the helm workload's chart from
          e.g. oci://registry-1.docker.io/bitnamicharts
          e.g. https://grafana.github.io/helm-charts
        type: string
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      ValuesDocument:
        description: |-
          The helm values that override the defaults from the helm chart.  These
          will be inherited by each helm workload instance derived from this
          definition.  The helm values defined here can be further overridden by
          values defined on the helm workload instance.
        type: string
    required:
    - Chart
    - Name
    - Repo
    type: object
  v0.HelmWorkloadInstance:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      HelmWorkloadDefinitionID:
        description: The definition used to configure the helm workload instance.
        type: integer
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstanceID:
        description: The kubernetes runtime to which the helm workload is deployed.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      ValuesDocument:
        description: |-
          Filepath to the helm values YAML file that provides runtime parameters to
          the helm chart.
        type: string
    required:
    - HelmWorkloadDefinitionID
    - KubernetesRuntimeInstanceID
    - Name
    type: object
  v0.KubernetesRuntimeDefinition:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      HighAvailability:
        description: |-
          If true, will be deployed in a highly available configuration across
          multiple zones within a region and with multiple replicas of Kubernetes
          control plane components.
        type: boolean
      InfraProvider:
        description: |-
          The infrastructure provider running the compute infrastructure for the
          cluster.
        type: string
      InfraProviderAccountName:
        description: |-
          The infra provider account name.  Determines which account the infra is
          deployed on.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstances:
        description: |-
          The associated kubernetes runtime instances that are deployed from this
          definition.
        items:
          $ref: '#/definitions/v0.KubernetesRuntimeInstance'
        type: array
      Name:
        description: An arbitrary name for the definition.
        type: string
      NodeMaximum:
        description: Sets the maximum number of nodes for the default node group.
        type: integer
      NodeProfile:
        description: |-
          Sets the CPU:memory ration of the machine type for the default node
          group.
        type: string
      NodeSize:
        description: Sets the compute capacity of the machine type for the default
          node group.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
    required:
    - InfraProvider
    - Name
    type: object
  v0.KubernetesRuntimeInstance:
    properties:
      APIEndpoint:
        description: The network endpoint at which to reach the kube-api.
        type: string
      CACertificate:
        description: |-
          The CA certificate used to generate the cert and key if
          self-signed.
        type: string
      Certificate:
        description: The client certificate to use for auth to the kube-api.
        type: string
      CertificateKey:
        description: The client certificate key to use for auth to the kube-api.
        type: string
      ConnectionToken:
        description: |-
          Used to authenticate with a OIDC provider that implements auth for a
          Kubernetes cluster.  It is an alternative to client cert authenticaion.
        type: string
      ConnectionTokenExpiration:
        description: |-
          ConnectionTokenExpiration is the time when a ConnectionToken will expire.
          Used to ensure a token will not expire before it can be used.
        type: string
      ControlPlaneInstance:
        description: The associated control plane instances running on this kubernetes
          runtime instance.
        items:
          $ref: '#/definitions/v0.ControlPlaneInstance'
        type: array
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DefaultRuntime:
        description: |-
          If true, this Kubernetes cluster will be used for all workloads if not
          otherwise assigned.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      DnsControllerInstanceId:
        description: The WorkloadInstanceID of the gateway support service
        type: integer
      ForceDelete:
        description: If true, delete the runtime even if there are workloads present.
        type: boolean
      GatewayWorkloadInstanceID:
        description: The WorkloadInstanceID of the gateway support service
        type: integer
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeDefinitionID:
        description: The kubernetes runtime definition for this instance.
        type: integer
      Location:
        description: |-
          The geographical location for the runtime cluster.  This is an
          abstraction for the cloud provider regions that is mapped into the
          regions used by providers.
        type: string
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
      ThreeportAgentImage:
        description: |-
          An alternate threeport image to use when deploying threeport agent to
          managed Kubernetes runtime clusters.  If not supplied, the official image
          with the correct version will be used.
        type: string
      ThreeportControlPlaneHost:
        description: |-
          If true, the Kubernetes cluster is hosting a threeport control plane and
          any controllers that connect to the kube API will use internal cluster
          DNS rather than the external APIEndpoint.
        type: boolean
      WorkloadInstance:
        description: The associated workload instances running on this kubernetes
          runtime.
        items:
          $ref: '#/definitions/v0.WorkloadInstance'
        type: array
    required:
    - KubernetesRuntimeDefinitionID
    - Location
    - Name
    type: object
  v0.LogBackend:
    properties:
      Destination:
        description: The network address to connect to for storing log messages.
        type: string
      LogStorageDefinitions:
        description: The storage definitions using the log backend for log storage.
        items:
          $ref: '#/definitions/v0.LogStorageDefinition'
        type: array
      Name:
        description: The unique name of a logging back end.
        type: string
    required:
    - Destination
    - Name
    type: object
  v0.LogStorageDefinition:
    properties:
      LogBackends:
        description: The backend storage mechanisms for retaining logs.
        items:
          $ref: '#/definitions/v0.LogBackend'
        type: array
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
    required:
    - Name
    type: object
  v0.LogStorageInstance:
    properties:
      ClusterID:
        description: |-
          The cluster from which log messages are being aggregated to send to a log
          back end.
        type: integer
      LogStorageDefinitionID:
        description: The definition used to define the instance.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Status:
        description: |-
          The status of the instance.
          TODO: use a custom type
        type: string
    required:
    - Name
    type: object
  v0.Meta:
    properties:
      Page:
        description: current Page
        example: 1
        type: integer
      Size:
        description: Size of the current page (number of returned Object elements)
        example: 1
        type: integer
      TotalCount:
        description: TotalCount of returned Object elements
        example: 1
        type: integer
    type: object
  v0.ObjectType:
    enum:
    - Profile
    - Tier
    - KubernetesRuntimeDefinition
    - KubernetesRuntimeInstance
    - ForwardProxyDefinition
    - ForwardProxyInstance
    - LogBackend
    - LogStorageDefinition
    - LogStorageInstance
    - WorkloadDefinition
    - WorkloadResourceDefinition
    - WorkloadInstance
    - AttachedObjectReference
    - WorkloadResourceInstance
    - WorkloadEvent
    - ControlPlaneDefinition
    - ControlPlaneInstance
    - GatewayDefinition
    - GatewayInstance
    - GatewayHttpPort
    - GatewayTcpPort
    - DomainNameDefinition
    - DomainNameInstance
    - AwsAccount
    - AwsEksKubernetesRuntimeDefinition
    - AwsEksKubernetesRuntimeInstance
    - AwsRelationalDatabaseDefinition
    - AwsRelationalDatabaseInstance
    - AwsObjectStorageBucketDefinition
    - AwsObjectStorageBucketInstance
    - HelmWorkloadDefinition
    - HelmWorkloadInstance
    type: string
    x-enum-varnames:
    - ObjectTypeProfile
    - ObjectTypeTier
    - ObjectTypeKubernetesRuntimeDefinition
    - ObjectTypeKubernetesRuntimeInstance
    - ObjectTypeForwardProxyDefinition
    - ObjectTypeForwardProxyInstance
    - ObjectTypeLogBackend
    - ObjectTypeLogStorageDefinition
    - ObjectTypeLogStorageInstance
    - ObjectTypeWorkloadDefinition
    - ObjectTypeWorkloadResourceDefinition
    - ObjectTypeWorkloadInstance
    - ObjectTypeAttachedObjectReference
    - ObjectTypeWorkloadResourceInstance
    - ObjectTypeWorkloadEvent
    - ObjectTypeControlPlaneDefinition
    - ObjectTypeControlPlaneInstance
    - ObjectTypeGatewayDefinition
    - ObjectTypeGatewayInstance
    - ObjectTypeGatewayHttpPort
    - ObjectTypeGatewayTcpPort
    - ObjectTypeDomainNameDefinition
    - ObjectTypeDomainNameInstance
    - ObjectTypeAwsAccount
    - ObjectTypeAwsEksKubernetesRuntimeDefinition
    - ObjectTypeAwsEksKubernetesRuntimeInstance
    - ObjectTypeAwsRelationalDatabaseDefinition
    - ObjectTypeAwsRelationalDatabaseInstance
    - ObjectTypeAwsObjectStorageBucketDefinition
    - ObjectTypeAwsObjectStorageBucketInstance
    - ObjectTypeHelmWorkloadDefinition
    - ObjectTypeHelmWorkloadInstance
  v0.Profile:
    properties:
      Name:
        description: The unique name of a profile
        type: string
    required:
    - Name
    type: object
  v0.Response:
    description: Meta info with ObjectType array of Data of Object
    properties:
      Data:
        description: Data contains array of returned Object elements
        items: {}
        type: array
      Meta:
        allOf:
        - $ref: '#/definitions/v0.Meta'
        description: Meta contains PageRequestParams (current page and size of current
          page) and TotalCount (number of returned Object elements)
      Status:
        allOf:
        - $ref: '#/definitions/v0.Status'
        description: Status represents an error that occurred while handling a request
      Type:
        allOf:
        - $ref: '#/definitions/v0.ObjectType'
        description: Type contains ObjectType of returned Data elements
        example: Transfer
    type: object
  v0.Status:
    properties:
      code:
        description: The HTTP response status code, e.g. 200 | 201 | 500
        example: 200
        type: integer
      error:
        description: The response error message if applicable, defaults to ""
        example: ""
        type: string
      message:
        description: The HTTP response status code message, e.g. OK | Created | Internal
          Server Error
        example: OK
        type: string
    type: object
  v0.Tier:
    properties:
      Criticality:
        description: |-
          The relative rank of criticality between tiers.  The higher the number,
          the greater the criticality.  For example, a development tier could have
          a criticality value of 10 while production could be 100.  Access control
          can then use this criticality value to determine user access.
        type: integer
      Name:
        description: The unique name of a tier.
        type: string
    required:
    - Criticality
    - Name
    type: object
  v0.WorkloadDefinition:
    properties:
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      Name:
        description: An arbitrary name for the definition.
        type: string
      ProfileID:
        description: |-
          The profile to associate with the definition.  Profile is a named
          standard configuration for a definition object.
        type: integer
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      TierID:
        description: |-
          The tier to associate with the definition.  Tier is a level of
          criticality for access control.
        type: integer
      WorkloadInstances:
        description: The associated workload instances that are deployed from this
          definition.
        items:
          $ref: '#/definitions/v0.WorkloadInstance'
        type: array
      WorkloadResourceDefinitions:
        description: The associated workload resource definitions that are derived.
        items:
          $ref: '#/definitions/v0.WorkloadResourceDefinition'
        type: array
      YAMLDocument:
        description: The yaml manifests that define the workload configuration.
        type: string
    required:
    - Name
    - YAMLDocument
    type: object
  v0.WorkloadEvent:
    properties:
      Message:
        description: The message associated with the event.
        type: string
      Reason:
        description: The reason for the event.
        type: string
      RuntimeEventUID:
        description: |-
          A unique ID for de-duplicating purposes.  It is one of two thing:
          * The Kubernetes Event resource UID: when the WorkloadEvent is derived
          directly from a Kubernetes Event.
          * The workload controller ID: when the WorkloadEvent is emitted by the
          workload controller.
        type: string
      Timestamp:
        description: The timestamp for the event in the kubernetes runtime.
        type: string
      Type:
        description: The type of event that occurred in Kubernetes.
        type: string
      WorkloadInstanceID:
        description: The related workload instance.
        type: integer
      WorkloadResourceInstanceID:
        description: The related workload resource instance.
        type: integer
    required:
    - Message
    - Reason
    - RuntimeEventUID
    - Timestamp
    - Type
    type: object
  v0.WorkloadInstance:
    properties:
      AttachedObjectReferences:
        description: The threeport objects that are deployed to support the workload
          instance.
        items:
          $ref: '#/definitions/v0.AttachedObjectReference'
        type: array
      CreationAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      CreationConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      CreationFailed:
        description: Gets set to true if creation process fails.
        type: boolean
      DeletionAcknowledged:
        description: |-
          Used by controllers to acknowledge deletion and indicate that deletion
          reconciliation has begun so that subsequent reconciliation attempts can
          act accordingly.
        type: string
      DeletionConfirmed:
        description: Used by controllers to confirm deletion of an object.
        type: string
      DeletionScheduled:
        description: |-
          Used to inform reconcilers that an object is being deleted so they may
          complete delete reconciliation before actually deleting the object from the database.
        type: string
      Events:
        description: |-
          All events generated for the workload instance that aren't related to a
          particular workload resource instance.
        items:
          $ref: '#/definitions/v0.WorkloadEvent'
        type: array
      InterruptReconciliation:
        description: |-
          InterruptReconciliation is used by the controller to indicated that future
          reconcilation should be interrupted.  Useful in cases where there is a
          situation where future reconciliation could be descructive such as
          spinning up more infrastructure when there is a unresolved problem.
        type: boolean
      KubernetesRuntimeInstanceID:
        description: The kubernetes runtime to which the workload is deployed.
        type: integer
      Name:
        description: An arbitrary name the instance
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by the object's
          controller.
        type: boolean
      Status:
        description: The latest status of a workload instance.
        type: string
      WorkloadDefinitionID:
        description: The definition used to configure the workload instance.
        type: integer
      WorkloadResourceInstances:
        description: The associated workload resource definitions that are derived.
        items:
          $ref: '#/definitions/v0.WorkloadResourceInstance'
        type: array
    required:
    - KubernetesRuntimeInstanceID
    - Name
    - WorkloadDefinitionID
    type: object
  v0.WorkloadResourceDefinition:
    properties:
      JSONDefinition:
        description: The individual manifest in JSON format.
        items:
          type: integer
        type: array
      WorkloadDefinitionID:
        description: The workload definition this resource belongs to.
        type: integer
    required:
    - JSONDefinition
    - WorkloadDefinitionID
    type: object
  v0.WorkloadResourceInstance:
    properties:
      Events:
        description: All events that have occured related to this object.
        items:
          $ref: '#/definitions/v0.WorkloadEvent'
        type: array
      JSONDefinition:
        description: |-
          The individual manifest in JSON format.  This field is a superset of
          WorkloadResourceDefinition.JSONDefinition in that it has namespace
          management and other configuration - such as resource allocation
          management - added.
        items:
          type: integer
        type: array
      LastOperation:
        description: |-
          The most recent operation performed on a Kubernete resource in the
          kubernetes runtime.
        type: string
      Reconciled:
        description: Indicates if object is considered to be reconciled by workload
          controller.
        type: boolean
      RuntimeDefinition:
        description: |-
          The JSON definition of a Kubernetes resource as stored in etcd in the
          kubernetes runtime.
        items:
          type: integer
        type: array
      ScheduledForDeletion:
        description: Whether another controller has scheduled this resource for deletion
        type: string
      WorkloadInstanceID:
        description: The workload definition this resource belongs to.
        type: integer
    required:
    - JSONDefinition
    - WorkloadInstanceID
    type: object
  version.RESTAPIVersion:
    properties:
      Version:
        type: string
    required:
    - Version
    type: object
host: rest-api.threeport.io
info:
  contact:
    email: support@threeport.io
    name: Threeport Admin
    url: https://threeport.io/support
  description: Threeport RESTful API.
  termsOfService: https://threeport.io/api-tos/
  title: Threeport RESTful API
  version: v0.4.0-rc.2
paths:
  /attached-object-references/versions:
    get:
      description: Get the supported API versions for attached object references.
      operationId: attachedObjectReference-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAttachedObjectReferenceVersions gets the supported versions for
        the attached object reference API.
  /aws-accounts/versions:
    get:
      description: Get the supported API versions for aws accounts.
      operationId: awsAccount-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsAccountVersions gets the supported versions for the aws account
        API.
  /aws-eks-kubernetes-runtime-definitions/versions:
    get:
      description: Get the supported API versions for aws eks kubernetes runtime definitions.
      operationId: awsEksKubernetesRuntimeDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsEksKubernetesRuntimeDefinitionVersions gets the supported versions
        for the aws eks kubernetes runtime definition API.
  /aws-eks-kubernetes-runtime-instances/versions:
    get:
      description: Get the supported API versions for aws eks kubernetes runtime instances.
      operationId: awsEksKubernetesRuntimeInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsEksKubernetesRuntimeInstanceVersions gets the supported versions
        for the aws eks kubernetes runtime instance API.
  /aws-object-storage-bucket-definitions/versions:
    get:
      description: Get the supported API versions for aws object storage bucket definitions.
      operationId: awsObjectStorageBucketDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsObjectStorageBucketDefinitionVersions gets the supported versions
        for the aws object storage bucket definition API.
  /aws-object-storage-bucket-instances/versions:
    get:
      description: Get the supported API versions for aws object storage bucket instances.
      operationId: awsObjectStorageBucketInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsObjectStorageBucketInstanceVersions gets the supported versions
        for the aws object storage bucket instance API.
  /aws-relational-database-definitions/versions:
    get:
      description: Get the supported API versions for aws relational database definitions.
      operationId: awsRelationalDatabaseDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsRelationalDatabaseDefinitionVersions gets the supported versions
        for the aws relational database definition API.
  /aws-relational-database-instances/versions:
    get:
      description: Get the supported API versions for aws relational database instances.
      operationId: awsRelationalDatabaseInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetAwsRelationalDatabaseInstanceVersions gets the supported versions
        for the aws relational database instance API.
  /control-plane-definitions/versions:
    get:
      description: Get the supported API versions for control plane definitions.
      operationId: controlPlaneDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetControlPlaneDefinitionVersions gets the supported versions for the
        control plane definition API.
  /control-plane-instances/versions:
    get:
      description: Get the supported API versions for control plane instances.
      operationId: controlPlaneInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetControlPlaneInstanceVersions gets the supported versions for the
        control plane instance API.
  /domain-name-definitions/versions:
    get:
      description: Get the supported API versions for domain name definitions.
      operationId: domainNameDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetDomainNameDefinitionVersions gets the supported versions for the
        domain name definition API.
  /domain-name-instances/versions:
    get:
      description: Get the supported API versions for domain name instances.
      operationId: domainNameInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetDomainNameInstanceVersions gets the supported versions for the domain
        name instance API.
  /forward-proxy-definitions/versions:
    get:
      description: Get the supported API versions for forward proxy definitions.
      operationId: forwardProxyDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetForwardProxyDefinitionVersions gets the supported versions for the
        forward proxy definition API.
  /forward-proxy-instances/versions:
    get:
      description: Get the supported API versions for forward proxy instances.
      operationId: forwardProxyInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetForwardProxyInstanceVersions gets the supported versions for the
        forward proxy instance API.
  /gateway-definitions/versions:
    get:
      description: Get the supported API versions for gateway definitions.
      operationId: gatewayDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetGatewayDefinitionVersions gets the supported versions for the gateway
        definition API.
  /gateway-http-ports/versions:
    get:
      description: Get the supported API versions for gateway http ports.
      operationId: gatewayHttpPort-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetGatewayHttpPortVersions gets the supported versions for the gateway
        http port API.
  /gateway-instances/versions:
    get:
      description: Get the supported API versions for gateway instances.
      operationId: gatewayInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetGatewayInstanceVersions gets the supported versions for the gateway
        instance API.
  /gateway-tcp-ports/versions:
    get:
      description: Get the supported API versions for gateway tcp ports.
      operationId: gatewayTcpPort-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetGatewayTcpPortVersions gets the supported versions for the gateway
        tcp port API.
  /helm-workload-definitions/versions:
    get:
      description: Get the supported API versions for helm workload definitions.
      operationId: helmWorkloadDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetHelmWorkloadDefinitionVersions gets the supported versions for the
        helm workload definition API.
  /helm-workload-instances/versions:
    get:
      description: Get the supported API versions for helm workload instances.
      operationId: helmWorkloadInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetHelmWorkloadInstanceVersions gets the supported versions for the
        helm workload instance API.
  /kubernetes-runtime-definitions/versions:
    get:
      description: Get the supported API versions for kubernetes runtime definitions.
      operationId: kubernetesRuntimeDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetKubernetesRuntimeDefinitionVersions gets the supported versions
        for the kubernetes runtime definition API.
  /kubernetes-runtime-instances/versions:
    get:
      description: Get the supported API versions for kubernetes runtime instances.
      operationId: kubernetesRuntimeInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetKubernetesRuntimeInstanceVersions gets the supported versions for
        the kubernetes runtime instance API.
  /log-backends/versions:
    get:
      description: Get the supported API versions for log backends.
      operationId: logBackend-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetLogBackendVersions gets the supported versions for the log backend
        API.
  /log-storage-definitions/versions:
    get:
      description: Get the supported API versions for log storage definitions.
      operationId: logStorageDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetLogStorageDefinitionVersions gets the supported versions for the
        log storage definition API.
  /log-storage-instances/versions:
    get:
      description: Get the supported API versions for log storage instances.
      operationId: logStorageInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetLogStorageInstanceVersions gets the supported versions for the log
        storage instance API.
  /profiles/versions:
    get:
      description: Get the supported API versions for profiles.
      operationId: profile-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetProfileVersions gets the supported versions for the profile API.
  /tiers/versions:
    get:
      description: Get the supported API versions for tiers.
      operationId: tier-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetTierVersions gets the supported versions for the tier API.
  /v0/attached-object-references:
    get:
      consumes:
      - application/json
      description: Get all attached object references from the Threeport database.
      operationId: get-attachedObjectReferences
      parameters:
      - description: attached object reference search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all attached object references.
    post:
      consumes:
      - application/json
      description: Add a new attached object reference to the Threeport database.
      operationId: add-attachedObjectReference
      parameters:
      - description: AttachedObjectReference object
        in: body
        name: attachedObjectReference
        required: true
        schema:
          $ref: '#/definitions/v0.AttachedObjectReference'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new attached object reference.
  /v0/attached-object-references/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a attached object reference by ID from the database.
      operationId: delete-attachedObjectReference
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a attached object reference.
    get:
      consumes:
      - application/json
      description: Get a particular attached object reference from the database.
      operationId: get-attachedObjectReference
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a attached object reference.
    patch:
      consumes:
      - application/json
      description: |-
        Update a attached object reference in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating attached object reference objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-attachedObjectReference
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AttachedObjectReference object
        in: body
        name: attachedObjectReference
        required: true
        schema:
          $ref: '#/definitions/v0.AttachedObjectReference'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing attached object reference.
    put:
      consumes:
      - application/json
      description: |-
        Replace a attached object reference in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating attached object reference objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-attachedObjectReference
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AttachedObjectReference object
        in: body
        name: attachedObjectReference
        required: true
        schema:
          $ref: '#/definitions/v0.AttachedObjectReference'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing attached object reference by replacing the entire
        object.
  /v0/aws-accounts:
    get:
      consumes:
      - application/json
      description: Get all aws accounts from the Threeport database.
      operationId: get-awsAccounts
      parameters:
      - description: aws account search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws accounts.
    post:
      consumes:
      - application/json
      description: Add a new aws account to the Threeport database.
      operationId: add-awsAccount
      parameters:
      - description: AwsAccount object
        in: body
        name: awsAccount
        required: true
        schema:
          $ref: '#/definitions/v0.AwsAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws account.
  /v0/aws-accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws account by ID from the database.
      operationId: delete-awsAccount
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws account.
    get:
      consumes:
      - application/json
      description: Get a particular aws account from the database.
      operationId: get-awsAccount
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws account.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws account in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws account objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsAccount
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsAccount object
        in: body
        name: awsAccount
        required: true
        schema:
          $ref: '#/definitions/v0.AwsAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws account.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws account in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws account objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsAccount
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsAccount object
        in: body
        name: awsAccount
        required: true
        schema:
          $ref: '#/definitions/v0.AwsAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws account by replacing the entire object.
  /v0/aws-eks-kubernetes-runtime-definitions:
    get:
      consumes:
      - application/json
      description: Get all aws eks kubernetes runtime definitions from the Threeport
        database.
      operationId: get-awsEksKubernetesRuntimeDefinitions
      parameters:
      - description: aws eks kubernetes runtime definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws eks kubernetes runtime definitions.
    post:
      consumes:
      - application/json
      description: Add a new aws eks kubernetes runtime definition to the Threeport
        database.
      operationId: add-awsEksKubernetesRuntimeDefinition
      parameters:
      - description: AwsEksKubernetesRuntimeDefinition object
        in: body
        name: awsEksKubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws eks kubernetes runtime definition.
  /v0/aws-eks-kubernetes-runtime-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws eks kubernetes runtime definition by ID from the database.
      operationId: delete-awsEksKubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws eks kubernetes runtime definition.
    get:
      consumes:
      - application/json
      description: Get a particular aws eks kubernetes runtime definition from the
        database.
      operationId: get-awsEksKubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws eks kubernetes runtime definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws eks kubernetes runtime definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws eks kubernetes runtime definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsEksKubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsEksKubernetesRuntimeDefinition object
        in: body
        name: awsEksKubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws eks kubernetes runtime
        definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws eks kubernetes runtime definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws eks kubernetes runtime definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsEksKubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsEksKubernetesRuntimeDefinition object
        in: body
        name: awsEksKubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws eks kubernetes runtime definition by replacing
        the entire object.
  /v0/aws-eks-kubernetes-runtime-instances:
    get:
      consumes:
      - application/json
      description: Get all aws eks kubernetes runtime instances from the Threeport
        database.
      operationId: get-awsEksKubernetesRuntimeInstances
      parameters:
      - description: aws eks kubernetes runtime instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws eks kubernetes runtime instances.
    post:
      consumes:
      - application/json
      description: Add a new aws eks kubernetes runtime instance to the Threeport
        database.
      operationId: add-awsEksKubernetesRuntimeInstance
      parameters:
      - description: AwsEksKubernetesRuntimeInstance object
        in: body
        name: awsEksKubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws eks kubernetes runtime instance.
  /v0/aws-eks-kubernetes-runtime-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws eks kubernetes runtime instance by ID from the database.
      operationId: delete-awsEksKubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws eks kubernetes runtime instance.
    get:
      consumes:
      - application/json
      description: Get a particular aws eks kubernetes runtime instance from the database.
      operationId: get-awsEksKubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws eks kubernetes runtime instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws eks kubernetes runtime instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws eks kubernetes runtime instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsEksKubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsEksKubernetesRuntimeInstance object
        in: body
        name: awsEksKubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws eks kubernetes runtime
        instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws eks kubernetes runtime instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws eks kubernetes runtime instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsEksKubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsEksKubernetesRuntimeInstance object
        in: body
        name: awsEksKubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsEksKubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws eks kubernetes runtime instance by replacing
        the entire object.
  /v0/aws-object-storage-bucket-definitions:
    get:
      consumes:
      - application/json
      description: Get all aws object storage bucket definitions from the Threeport
        database.
      operationId: get-awsObjectStorageBucketDefinitions
      parameters:
      - description: aws object storage bucket definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws object storage bucket definitions.
    post:
      consumes:
      - application/json
      description: Add a new aws object storage bucket definition to the Threeport
        database.
      operationId: add-awsObjectStorageBucketDefinition
      parameters:
      - description: AwsObjectStorageBucketDefinition object
        in: body
        name: awsObjectStorageBucketDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws object storage bucket definition.
  /v0/aws-object-storage-bucket-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws object storage bucket definition by ID from the database.
      operationId: delete-awsObjectStorageBucketDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws object storage bucket definition.
    get:
      consumes:
      - application/json
      description: Get a particular aws object storage bucket definition from the
        database.
      operationId: get-awsObjectStorageBucketDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws object storage bucket definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws object storage bucket definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws object storage bucket definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsObjectStorageBucketDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsObjectStorageBucketDefinition object
        in: body
        name: awsObjectStorageBucketDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws object storage bucket definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws object storage bucket definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws object storage bucket definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsObjectStorageBucketDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsObjectStorageBucketDefinition object
        in: body
        name: awsObjectStorageBucketDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws object storage bucket definition by replacing
        the entire object.
  /v0/aws-object-storage-bucket-instances:
    get:
      consumes:
      - application/json
      description: Get all aws object storage bucket instances from the Threeport
        database.
      operationId: get-awsObjectStorageBucketInstances
      parameters:
      - description: aws object storage bucket instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws object storage bucket instances.
    post:
      consumes:
      - application/json
      description: Add a new aws object storage bucket instance to the Threeport database.
      operationId: add-awsObjectStorageBucketInstance
      parameters:
      - description: AwsObjectStorageBucketInstance object
        in: body
        name: awsObjectStorageBucketInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws object storage bucket instance.
  /v0/aws-object-storage-bucket-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws object storage bucket instance by ID from the database.
      operationId: delete-awsObjectStorageBucketInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws object storage bucket instance.
    get:
      consumes:
      - application/json
      description: Get a particular aws object storage bucket instance from the database.
      operationId: get-awsObjectStorageBucketInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws object storage bucket instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws object storage bucket instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws object storage bucket instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsObjectStorageBucketInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsObjectStorageBucketInstance object
        in: body
        name: awsObjectStorageBucketInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws object storage bucket instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws object storage bucket instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws object storage bucket instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsObjectStorageBucketInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsObjectStorageBucketInstance object
        in: body
        name: awsObjectStorageBucketInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsObjectStorageBucketInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws object storage bucket instance by replacing
        the entire object.
  /v0/aws-relational-database-definitions:
    get:
      consumes:
      - application/json
      description: Get all aws relational database definitions from the Threeport
        database.
      operationId: get-awsRelationalDatabaseDefinitions
      parameters:
      - description: aws relational database definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws relational database definitions.
    post:
      consumes:
      - application/json
      description: Add a new aws relational database definition to the Threeport database.
      operationId: add-awsRelationalDatabaseDefinition
      parameters:
      - description: AwsRelationalDatabaseDefinition object
        in: body
        name: awsRelationalDatabaseDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws relational database definition.
  /v0/aws-relational-database-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws relational database definition by ID from the database.
      operationId: delete-awsRelationalDatabaseDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws relational database definition.
    get:
      consumes:
      - application/json
      description: Get a particular aws relational database definition from the database.
      operationId: get-awsRelationalDatabaseDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws relational database definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws relational database definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws relational database definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsRelationalDatabaseDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsRelationalDatabaseDefinition object
        in: body
        name: awsRelationalDatabaseDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws relational database definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws relational database definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws relational database definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsRelationalDatabaseDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsRelationalDatabaseDefinition object
        in: body
        name: awsRelationalDatabaseDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws relational database definition by replacing
        the entire object.
  /v0/aws-relational-database-instances:
    get:
      consumes:
      - application/json
      description: Get all aws relational database instances from the Threeport database.
      operationId: get-awsRelationalDatabaseInstances
      parameters:
      - description: aws relational database instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all aws relational database instances.
    post:
      consumes:
      - application/json
      description: Add a new aws relational database instance to the Threeport database.
      operationId: add-awsRelationalDatabaseInstance
      parameters:
      - description: AwsRelationalDatabaseInstance object
        in: body
        name: awsRelationalDatabaseInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new aws relational database instance.
  /v0/aws-relational-database-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a aws relational database instance by ID from the database.
      operationId: delete-awsRelationalDatabaseInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a aws relational database instance.
    get:
      consumes:
      - application/json
      description: Get a particular aws relational database instance from the database.
      operationId: get-awsRelationalDatabaseInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a aws relational database instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a aws relational database instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating aws relational database instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-awsRelationalDatabaseInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsRelationalDatabaseInstance object
        in: body
        name: awsRelationalDatabaseInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing aws relational database instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a aws relational database instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating aws relational database instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-awsRelationalDatabaseInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: AwsRelationalDatabaseInstance object
        in: body
        name: awsRelationalDatabaseInstance
        required: true
        schema:
          $ref: '#/definitions/v0.AwsRelationalDatabaseInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing aws relational database instance by replacing the
        entire object.
  /v0/control-plane-definitions:
    get:
      consumes:
      - application/json
      description: Get all control plane definitions from the Threeport database.
      operationId: get-controlPlaneDefinitions
      parameters:
      - description: control plane definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all control plane definitions.
    post:
      consumes:
      - application/json
      description: Add a new control plane definition to the Threeport database.
      operationId: add-controlPlaneDefinition
      parameters:
      - description: ControlPlaneDefinition object
        in: body
        name: controlPlaneDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new control plane definition.
  /v0/control-plane-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a control plane definition by ID from the database.
      operationId: delete-controlPlaneDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a control plane definition.
    get:
      consumes:
      - application/json
      description: Get a particular control plane definition from the database.
      operationId: get-controlPlaneDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a control plane definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a control plane definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating control plane definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-controlPlaneDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ControlPlaneDefinition object
        in: body
        name: controlPlaneDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing control plane definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a control plane definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating control plane definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-controlPlaneDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ControlPlaneDefinition object
        in: body
        name: controlPlaneDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing control plane definition by replacing the entire
        object.
  /v0/control-plane-instances:
    get:
      consumes:
      - application/json
      description: Get all control plane instances from the Threeport database.
      operationId: get-controlPlaneInstances
      parameters:
      - description: control plane instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all control plane instances.
    post:
      consumes:
      - application/json
      description: Add a new control plane instance to the Threeport database.
      operationId: add-controlPlaneInstance
      parameters:
      - description: ControlPlaneInstance object
        in: body
        name: controlPlaneInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new control plane instance.
  /v0/control-plane-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a control plane instance by ID from the database.
      operationId: delete-controlPlaneInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a control plane instance.
    get:
      consumes:
      - application/json
      description: Get a particular control plane instance from the database.
      operationId: get-controlPlaneInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a control plane instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a control plane instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating control plane instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-controlPlaneInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ControlPlaneInstance object
        in: body
        name: controlPlaneInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing control plane instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a control plane instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating control plane instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-controlPlaneInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ControlPlaneInstance object
        in: body
        name: controlPlaneInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ControlPlaneInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing control plane instance by replacing the entire
        object.
  /v0/domain-name-definitions:
    get:
      consumes:
      - application/json
      description: Get all domain name definitions from the Threeport database.
      operationId: get-domainNameDefinitions
      parameters:
      - description: domain name definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all domain name definitions.
    post:
      consumes:
      - application/json
      description: Add a new domain name definition to the Threeport database.
      operationId: add-domainNameDefinition
      parameters:
      - description: DomainNameDefinition object
        in: body
        name: domainNameDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new domain name definition.
  /v0/domain-name-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a domain name definition by ID from the database.
      operationId: delete-domainNameDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a domain name definition.
    get:
      consumes:
      - application/json
      description: Get a particular domain name definition from the database.
      operationId: get-domainNameDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a domain name definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a domain name definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating domain name definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-domainNameDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: DomainNameDefinition object
        in: body
        name: domainNameDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing domain name definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a domain name definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating domain name definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-domainNameDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: DomainNameDefinition object
        in: body
        name: domainNameDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing domain name definition by replacing the entire
        object.
  /v0/domain-name-instances:
    get:
      consumes:
      - application/json
      description: Get all domain name instances from the Threeport database.
      operationId: get-domainNameInstances
      parameters:
      - description: domain name instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all domain name instances.
    post:
      consumes:
      - application/json
      description: Add a new domain name instance to the Threeport database.
      operationId: add-domainNameInstance
      parameters:
      - description: DomainNameInstance object
        in: body
        name: domainNameInstance
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new domain name instance.
  /v0/domain-name-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a domain name instance by ID from the database.
      operationId: delete-domainNameInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a domain name instance.
    get:
      consumes:
      - application/json
      description: Get a particular domain name instance from the database.
      operationId: get-domainNameInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a domain name instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a domain name instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating domain name instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-domainNameInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: DomainNameInstance object
        in: body
        name: domainNameInstance
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing domain name instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a domain name instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating domain name instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-domainNameInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: DomainNameInstance object
        in: body
        name: domainNameInstance
        required: true
        schema:
          $ref: '#/definitions/v0.DomainNameInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing domain name instance by replacing the entire object.
  /v0/forward-proxy-definitions:
    get:
      consumes:
      - application/json
      description: Get all forward proxy definitions from the Threeport database.
      operationId: get-forwardProxyDefinitions
      parameters:
      - description: forward proxy definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all forward proxy definitions.
    post:
      consumes:
      - application/json
      description: Add a new forward proxy definition to the Threeport database.
      operationId: add-forwardProxyDefinition
      parameters:
      - description: ForwardProxyDefinition object
        in: body
        name: forwardProxyDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new forward proxy definition.
  /v0/forward-proxy-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a forward proxy definition by ID from the database.
      operationId: delete-forwardProxyDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a forward proxy definition.
    get:
      consumes:
      - application/json
      description: Get a particular forward proxy definition from the database.
      operationId: get-forwardProxyDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a forward proxy definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a forward proxy definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating forward proxy definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-forwardProxyDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ForwardProxyDefinition object
        in: body
        name: forwardProxyDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing forward proxy definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a forward proxy definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating forward proxy definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-forwardProxyDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ForwardProxyDefinition object
        in: body
        name: forwardProxyDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing forward proxy definition by replacing the entire
        object.
  /v0/forward-proxy-instances:
    get:
      consumes:
      - application/json
      description: Get all forward proxy instances from the Threeport database.
      operationId: get-forwardProxyInstances
      parameters:
      - description: forward proxy instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all forward proxy instances.
    post:
      consumes:
      - application/json
      description: Add a new forward proxy instance to the Threeport database.
      operationId: add-forwardProxyInstance
      parameters:
      - description: ForwardProxyInstance object
        in: body
        name: forwardProxyInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new forward proxy instance.
  /v0/forward-proxy-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a forward proxy instance by ID from the database.
      operationId: delete-forwardProxyInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a forward proxy instance.
    get:
      consumes:
      - application/json
      description: Get a particular forward proxy instance from the database.
      operationId: get-forwardProxyInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a forward proxy instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a forward proxy instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating forward proxy instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-forwardProxyInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ForwardProxyInstance object
        in: body
        name: forwardProxyInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing forward proxy instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a forward proxy instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating forward proxy instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-forwardProxyInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: ForwardProxyInstance object
        in: body
        name: forwardProxyInstance
        required: true
        schema:
          $ref: '#/definitions/v0.ForwardProxyInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing forward proxy instance by replacing the entire
        object.
  /v0/gateway-definitions:
    get:
      consumes:
      - application/json
      description: Get all gateway definitions from the Threeport database.
      operationId: get-gatewayDefinitions
      parameters:
      - description: gateway definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all gateway definitions.
    post:
      consumes:
      - application/json
      description: Add a new gateway definition to the Threeport database.
      operationId: add-gatewayDefinition
      parameters:
      - description: GatewayDefinition object
        in: body
        name: gatewayDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new gateway definition.
  /v0/gateway-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a gateway definition by ID from the database.
      operationId: delete-gatewayDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a gateway definition.
    get:
      consumes:
      - application/json
      description: Get a particular gateway definition from the database.
      operationId: get-gatewayDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a gateway definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a gateway definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating gateway definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-gatewayDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayDefinition object
        in: body
        name: gatewayDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing gateway definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a gateway definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating gateway definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-gatewayDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayDefinition object
        in: body
        name: gatewayDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing gateway definition by replacing the entire object.
  /v0/gateway-http-ports:
    get:
      consumes:
      - application/json
      description: Get all gateway http ports from the Threeport database.
      operationId: get-gatewayHttpPorts
      parameters:
      - description: gateway http port search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all gateway http ports.
    post:
      consumes:
      - application/json
      description: Add a new gateway http port to the Threeport database.
      operationId: add-gatewayHttpPort
      parameters:
      - description: GatewayHttpPort object
        in: body
        name: gatewayHttpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayHttpPort'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new gateway http port.
  /v0/gateway-http-ports/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a gateway http port by ID from the database.
      operationId: delete-gatewayHttpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a gateway http port.
    get:
      consumes:
      - application/json
      description: Get a particular gateway http port from the database.
      operationId: get-gatewayHttpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a gateway http port.
    patch:
      consumes:
      - application/json
      description: |-
        Update a gateway http port in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating gateway http port objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-gatewayHttpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayHttpPort object
        in: body
        name: gatewayHttpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayHttpPort'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing gateway http port.
    put:
      consumes:
      - application/json
      description: |-
        Replace a gateway http port in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating gateway http port objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-gatewayHttpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayHttpPort object
        in: body
        name: gatewayHttpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayHttpPort'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing gateway http port by replacing the entire object.
  /v0/gateway-instances:
    get:
      consumes:
      - application/json
      description: Get all gateway instances from the Threeport database.
      operationId: get-gatewayInstances
      parameters:
      - description: gateway instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all gateway instances.
    post:
      consumes:
      - application/json
      description: Add a new gateway instance to the Threeport database.
      operationId: add-gatewayInstance
      parameters:
      - description: GatewayInstance object
        in: body
        name: gatewayInstance
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new gateway instance.
  /v0/gateway-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a gateway instance by ID from the database.
      operationId: delete-gatewayInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a gateway instance.
    get:
      consumes:
      - application/json
      description: Get a particular gateway instance from the database.
      operationId: get-gatewayInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a gateway instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a gateway instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating gateway instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-gatewayInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayInstance object
        in: body
        name: gatewayInstance
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing gateway instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a gateway instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating gateway instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-gatewayInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayInstance object
        in: body
        name: gatewayInstance
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing gateway instance by replacing the entire object.
  /v0/gateway-tcp-ports:
    get:
      consumes:
      - application/json
      description: Get all gateway tcp ports from the Threeport database.
      operationId: get-gatewayTcpPorts
      parameters:
      - description: gateway tcp port search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all gateway tcp ports.
    post:
      consumes:
      - application/json
      description: Add a new gateway tcp port to the Threeport database.
      operationId: add-gatewayTcpPort
      parameters:
      - description: GatewayTcpPort object
        in: body
        name: gatewayTcpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayTcpPort'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new gateway tcp port.
  /v0/gateway-tcp-ports/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a gateway tcp port by ID from the database.
      operationId: delete-gatewayTcpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a gateway tcp port.
    get:
      consumes:
      - application/json
      description: Get a particular gateway tcp port from the database.
      operationId: get-gatewayTcpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a gateway tcp port.
    patch:
      consumes:
      - application/json
      description: |-
        Update a gateway tcp port in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating gateway tcp port objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-gatewayTcpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayTcpPort object
        in: body
        name: gatewayTcpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayTcpPort'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing gateway tcp port.
    put:
      consumes:
      - application/json
      description: |-
        Replace a gateway tcp port in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating gateway tcp port objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-gatewayTcpPort
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: GatewayTcpPort object
        in: body
        name: gatewayTcpPort
        required: true
        schema:
          $ref: '#/definitions/v0.GatewayTcpPort'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing gateway tcp port by replacing the entire object.
  /v0/helm-workload-definitions:
    get:
      consumes:
      - application/json
      description: Get all helm workload definitions from the Threeport database.
      operationId: get-helmWorkloadDefinitions
      parameters:
      - description: helm workload definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all helm workload definitions.
    post:
      consumes:
      - application/json
      description: Add a new helm workload definition to the Threeport database.
      operationId: add-helmWorkloadDefinition
      parameters:
      - description: HelmWorkloadDefinition object
        in: body
        name: helmWorkloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new helm workload definition.
  /v0/helm-workload-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a helm workload definition by ID from the database.
      operationId: delete-helmWorkloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a helm workload definition.
    get:
      consumes:
      - application/json
      description: Get a particular helm workload definition from the database.
      operationId: get-helmWorkloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a helm workload definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a helm workload definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating helm workload definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-helmWorkloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: HelmWorkloadDefinition object
        in: body
        name: helmWorkloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing helm workload definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a helm workload definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating helm workload definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-helmWorkloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: HelmWorkloadDefinition object
        in: body
        name: helmWorkloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing helm workload definition by replacing the entire
        object.
  /v0/helm-workload-instances:
    get:
      consumes:
      - application/json
      description: Get all helm workload instances from the Threeport database.
      operationId: get-helmWorkloadInstances
      parameters:
      - description: helm workload instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all helm workload instances.
    post:
      consumes:
      - application/json
      description: Add a new helm workload instance to the Threeport database.
      operationId: add-helmWorkloadInstance
      parameters:
      - description: HelmWorkloadInstance object
        in: body
        name: helmWorkloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new helm workload instance.
  /v0/helm-workload-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a helm workload instance by ID from the database.
      operationId: delete-helmWorkloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a helm workload instance.
    get:
      consumes:
      - application/json
      description: Get a particular helm workload instance from the database.
      operationId: get-helmWorkloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a helm workload instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a helm workload instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating helm workload instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-helmWorkloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: HelmWorkloadInstance object
        in: body
        name: helmWorkloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing helm workload instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a helm workload instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating helm workload instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-helmWorkloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: HelmWorkloadInstance object
        in: body
        name: helmWorkloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.HelmWorkloadInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing helm workload instance by replacing the entire
        object.
  /v0/kubernetes-runtime-definitions:
    get:
      consumes:
      - application/json
      description: Get all kubernetes runtime definitions from the Threeport database.
      operationId: get-kubernetesRuntimeDefinitions
      parameters:
      - description: kubernetes runtime definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all kubernetes runtime definitions.
    post:
      consumes:
      - application/json
      description: Add a new kubernetes runtime definition to the Threeport database.
      operationId: add-kubernetesRuntimeDefinition
      parameters:
      - description: KubernetesRuntimeDefinition object
        in: body
        name: kubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new kubernetes runtime definition.
  /v0/kubernetes-runtime-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a kubernetes runtime definition by ID from the database.
      operationId: delete-kubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a kubernetes runtime definition.
    get:
      consumes:
      - application/json
      description: Get a particular kubernetes runtime definition from the database.
      operationId: get-kubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a kubernetes runtime definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a kubernetes runtime definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating kubernetes runtime definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-kubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: KubernetesRuntimeDefinition object
        in: body
        name: kubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing kubernetes runtime definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a kubernetes runtime definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating kubernetes runtime definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-kubernetesRuntimeDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: KubernetesRuntimeDefinition object
        in: body
        name: kubernetesRuntimeDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing kubernetes runtime definition by replacing the
        entire object.
  /v0/kubernetes-runtime-instances:
    get:
      consumes:
      - application/json
      description: Get all kubernetes runtime instances from the Threeport database.
      operationId: get-kubernetesRuntimeInstances
      parameters:
      - description: kubernetes runtime instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all kubernetes runtime instances.
    post:
      consumes:
      - application/json
      description: Add a new kubernetes runtime instance to the Threeport database.
      operationId: add-kubernetesRuntimeInstance
      parameters:
      - description: KubernetesRuntimeInstance object
        in: body
        name: kubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new kubernetes runtime instance.
  /v0/kubernetes-runtime-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a kubernetes runtime instance by ID from the database.
      operationId: delete-kubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a kubernetes runtime instance.
    get:
      consumes:
      - application/json
      description: Get a particular kubernetes runtime instance from the database.
      operationId: get-kubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a kubernetes runtime instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a kubernetes runtime instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating kubernetes runtime instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-kubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: KubernetesRuntimeInstance object
        in: body
        name: kubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing kubernetes runtime instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a kubernetes runtime instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating kubernetes runtime instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-kubernetesRuntimeInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: KubernetesRuntimeInstance object
        in: body
        name: kubernetesRuntimeInstance
        required: true
        schema:
          $ref: '#/definitions/v0.KubernetesRuntimeInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing kubernetes runtime instance by replacing the entire
        object.
  /v0/log-backends:
    get:
      consumes:
      - application/json
      description: Get all log backends from the Threeport database.
      operationId: get-logBackends
      parameters:
      - description: log backend search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all log backends.
    post:
      consumes:
      - application/json
      description: Add a new log backend to the Threeport database.
      operationId: add-logBackend
      parameters:
      - description: LogBackend object
        in: body
        name: logBackend
        required: true
        schema:
          $ref: '#/definitions/v0.LogBackend'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new log backend.
  /v0/log-backends/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a log backend by ID from the database.
      operationId: delete-logBackend
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a log backend.
    get:
      consumes:
      - application/json
      description: Get a particular log backend from the database.
      operationId: get-logBackend
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a log backend.
    patch:
      consumes:
      - application/json
      description: |-
        Update a log backend in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating log backend objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-logBackend
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogBackend object
        in: body
        name: logBackend
        required: true
        schema:
          $ref: '#/definitions/v0.LogBackend'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing log backend.
    put:
      consumes:
      - application/json
      description: |-
        Replace a log backend in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating log backend objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-logBackend
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogBackend object
        in: body
        name: logBackend
        required: true
        schema:
          $ref: '#/definitions/v0.LogBackend'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing log backend by replacing the entire object.
  /v0/log-storage-definitions:
    get:
      consumes:
      - application/json
      description: Get all log storage definitions from the Threeport database.
      operationId: get-logStorageDefinitions
      parameters:
      - description: log storage definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all log storage definitions.
    post:
      consumes:
      - application/json
      description: Add a new log storage definition to the Threeport database.
      operationId: add-logStorageDefinition
      parameters:
      - description: LogStorageDefinition object
        in: body
        name: logStorageDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new log storage definition.
  /v0/log-storage-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a log storage definition by ID from the database.
      operationId: delete-logStorageDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a log storage definition.
    get:
      consumes:
      - application/json
      description: Get a particular log storage definition from the database.
      operationId: get-logStorageDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a log storage definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a log storage definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating log storage definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-logStorageDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogStorageDefinition object
        in: body
        name: logStorageDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing log storage definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a log storage definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating log storage definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-logStorageDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogStorageDefinition object
        in: body
        name: logStorageDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing log storage definition by replacing the entire
        object.
  /v0/log-storage-instances:
    get:
      consumes:
      - application/json
      description: Get all log storage instances from the Threeport database.
      operationId: get-logStorageInstances
      parameters:
      - description: log storage instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all log storage instances.
    post:
      consumes:
      - application/json
      description: Add a new log storage instance to the Threeport database.
      operationId: add-logStorageInstance
      parameters:
      - description: LogStorageInstance object
        in: body
        name: logStorageInstance
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new log storage instance.
  /v0/log-storage-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a log storage instance by ID from the database.
      operationId: delete-logStorageInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a log storage instance.
    get:
      consumes:
      - application/json
      description: Get a particular log storage instance from the database.
      operationId: get-logStorageInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a log storage instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a log storage instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating log storage instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-logStorageInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogStorageInstance object
        in: body
        name: logStorageInstance
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing log storage instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a log storage instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating log storage instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-logStorageInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: LogStorageInstance object
        in: body
        name: logStorageInstance
        required: true
        schema:
          $ref: '#/definitions/v0.LogStorageInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing log storage instance by replacing the entire object.
  /v0/profiles:
    get:
      consumes:
      - application/json
      description: Get all profiles from the Threeport database.
      operationId: get-profiles
      parameters:
      - description: profile search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all profiles.
    post:
      consumes:
      - application/json
      description: Add a new profile to the Threeport database.
      operationId: add-profile
      parameters:
      - description: Profile object
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/v0.Profile'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new profile.
  /v0/profiles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a profile by ID from the database.
      operationId: delete-profile
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a profile.
    get:
      consumes:
      - application/json
      description: Get a particular profile from the database.
      operationId: get-profile
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a profile.
    patch:
      consumes:
      - application/json
      description: |-
        Update a profile in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating profile objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-profile
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Profile object
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/v0.Profile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing profile.
    put:
      consumes:
      - application/json
      description: |-
        Replace a profile in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating profile objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-profile
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Profile object
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/v0.Profile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing profile by replacing the entire object.
  /v0/tiers:
    get:
      consumes:
      - application/json
      description: Get all tiers from the Threeport database.
      operationId: get-tiers
      parameters:
      - description: tier search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all tiers.
    post:
      consumes:
      - application/json
      description: Add a new tier to the Threeport database.
      operationId: add-tier
      parameters:
      - description: Tier object
        in: body
        name: tier
        required: true
        schema:
          $ref: '#/definitions/v0.Tier'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new tier.
  /v0/tiers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a tier by ID from the database.
      operationId: delete-tier
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a tier.
    get:
      consumes:
      - application/json
      description: Get a particular tier from the database.
      operationId: get-tier
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a tier.
    patch:
      consumes:
      - application/json
      description: |-
        Update a tier in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating tier objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-tier
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tier object
        in: body
        name: tier
        required: true
        schema:
          $ref: '#/definitions/v0.Tier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing tier.
    put:
      consumes:
      - application/json
      description: |-
        Replace a tier in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating tier objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-tier
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tier object
        in: body
        name: tier
        required: true
        schema:
          $ref: '#/definitions/v0.Tier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing tier by replacing the entire object.
  /v0/workload-definitions:
    get:
      consumes:
      - application/json
      description: Get all workload definitions from the Threeport database.
      operationId: get-workloadDefinitions
      parameters:
      - description: workload definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all workload definitions.
    post:
      consumes:
      - application/json
      description: Add a new workload definition to the Threeport database.
      operationId: add-workloadDefinition
      parameters:
      - description: WorkloadDefinition object
        in: body
        name: workloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new workload definition.
  /v0/workload-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workload definition by ID from the database.
      operationId: delete-workloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload definition.
    get:
      consumes:
      - application/json
      description: Get a particular workload definition from the database.
      operationId: get-workloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a workload definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating workload definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-workloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadDefinition object
        in: body
        name: workloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing workload definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a workload definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating workload definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-workloadDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadDefinition object
        in: body
        name: workloadDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing workload definition by replacing the entire object.
  /v0/workload-event-sets/{workloadInstanceID}:
    delete:
      consumes:
      - application/json
      description: Deletes a set of workload events by workload instance ID from the
        database.
      operationId: delete-workloadEventSet
      parameters:
      - description: workloadInstanceID
        in: path
        name: workloadInstanceID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload event set by workload instance ID.
    get:
      consumes:
      - application/json
      description: Gets a set of workload events by workload instance ID from the
        database.
      operationId: get-workloadEventSet
      parameters:
      - description: workloadInstanceID
        in: path
        name: workloadInstanceID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload event set by workload instance ID.
  /v0/workload-events:
    get:
      consumes:
      - application/json
      description: Get all workload events from the Threeport database.
      operationId: get-workloadEvents
      parameters:
      - description: workload event search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all workload events.
    post:
      consumes:
      - application/json
      description: Add a new workload event to the Threeport database.
      operationId: add-workloadEvent
      parameters:
      - description: WorkloadEvent object
        in: body
        name: workloadEvent
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadEvent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new workload event.
  /v0/workload-events/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workload event by ID from the database.
      operationId: delete-workloadEvent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload event.
    get:
      consumes:
      - application/json
      description: Get a particular workload event from the database.
      operationId: get-workloadEvent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload event.
    patch:
      consumes:
      - application/json
      description: |-
        Update a workload event in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating workload event objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-workloadEvent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadEvent object
        in: body
        name: workloadEvent
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing workload event.
    put:
      consumes:
      - application/json
      description: |-
        Replace a workload event in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating workload event objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-workloadEvent
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadEvent object
        in: body
        name: workloadEvent
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadEvent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing workload event by replacing the entire object.
  /v0/workload-instances:
    get:
      consumes:
      - application/json
      description: Get all workload instances from the Threeport database.
      operationId: get-workloadInstances
      parameters:
      - description: workload instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all workload instances.
    post:
      consumes:
      - application/json
      description: Add a new workload instance to the Threeport database.
      operationId: add-workloadInstance
      parameters:
      - description: WorkloadInstance object
        in: body
        name: workloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new workload instance.
  /v0/workload-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workload instance by ID from the database.
      operationId: delete-workloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload instance.
    get:
      consumes:
      - application/json
      description: Get a particular workload instance from the database.
      operationId: get-workloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a workload instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating workload instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-workloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadInstance object
        in: body
        name: workloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing workload instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a workload instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating workload instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-workloadInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadInstance object
        in: body
        name: workloadInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing workload instance by replacing the entire object.
  /v0/workload-resource-definition-sets:
    post:
      consumes:
      - application/json
      description: Add a set of new workload resource definition to the Threeport
        database.
      operationId: add-workloadResourceDefinitions
      parameters:
      - description: WorkloadResourceDefinition object array
        in: body
        name: workloadResourceDefinitions
        required: true
        schema:
          items:
            $ref: '#/definitions/v0.WorkloadResourceDefinition'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new set of workload resource definitions.
  /v0/workload-resource-definitions:
    get:
      consumes:
      - application/json
      description: Get all workload resource definitions from the Threeport database.
      operationId: get-workloadResourceDefinitions
      parameters:
      - description: workload resource definition search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all workload resource definitions.
    post:
      consumes:
      - application/json
      description: Add a new workload resource definition to the Threeport database.
      operationId: add-workloadResourceDefinition
      parameters:
      - description: WorkloadResourceDefinition object
        in: body
        name: workloadResourceDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceDefinition'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new workload resource definition.
  /v0/workload-resource-definitions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workload resource definition by ID from the database.
      operationId: delete-workloadResourceDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload resource definition.
    get:
      consumes:
      - application/json
      description: Get a particular workload resource definition from the database.
      operationId: get-workloadResourceDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload resource definition.
    patch:
      consumes:
      - application/json
      description: |-
        Update a workload resource definition in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating workload resource definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-workloadResourceDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadResourceDefinition object
        in: body
        name: workloadResourceDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing workload resource definition.
    put:
      consumes:
      - application/json
      description: |-
        Replace a workload resource definition in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating workload resource definition objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-workloadResourceDefinition
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadResourceDefinition object
        in: body
        name: workloadResourceDefinition
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceDefinition'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing workload resource definition by replacing the entire
        object.
  /v0/workload-resource-instances:
    get:
      consumes:
      - application/json
      description: Get all workload resource instances from the Threeport database.
      operationId: get-workloadResourceInstances
      parameters:
      - description: workload resource instance search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets all workload resource instances.
    post:
      consumes:
      - application/json
      description: Add a new workload resource instance to the Threeport database.
      operationId: add-workloadResourceInstance
      parameters:
      - description: WorkloadResourceInstance object
        in: body
        name: workloadResourceInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceInstance'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: adds a new workload resource instance.
  /v0/workload-resource-instances/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a workload resource instance by ID from the database.
      operationId: delete-workloadResourceInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: deletes a workload resource instance.
    get:
      consumes:
      - application/json
      description: Get a particular workload resource instance from the database.
      operationId: get-workloadResourceInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: gets a workload resource instance.
    patch:
      consumes:
      - application/json
      description: |-
        Update a workload resource instance in the database.  Provide one or more fields to update.
        Note: This API endpint is for updating workload resource instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: update-workloadResourceInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadResourceInstance object
        in: body
        name: workloadResourceInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates specific fields for an existing workload resource instance.
    put:
      consumes:
      - application/json
      description: |-
        Replace a workload resource instance in the database.  All required fields must be provided.
        If any optional fields are not provided, they will be null post-update.
        Note: This API endpint is for updating workload resource instance objects only.
        Request bodies that include related objects will be accepted, however
        the related objects will not be changed.  Call the patch or put method for
        each particular existing object to change them.
      operationId: replace-workloadResourceInstance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: WorkloadResourceInstance object
        in: body
        name: workloadResourceInstance
        required: true
        schema:
          $ref: '#/definitions/v0.WorkloadResourceInstance'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v0.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v0.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v0.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v0.Response'
      summary: updates an existing workload resource instance by replacing the entire
        object.
  /version:
    get:
      description: Get a version of REST API.
      operationId: get-api-version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/version.RESTAPIVersion'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/version.RESTAPIVersion'
      summary: gets an REST API version.
  /workload-definitions/versions:
    get:
      description: Get the supported API versions for workload definitions.
      operationId: workloadDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetWorkloadDefinitionVersions gets the supported versions for the workload
        definition API.
  /workload-events/versions:
    get:
      description: Get the supported API versions for workload events.
      operationId: workloadEvent-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetWorkloadEventVersions gets the supported versions for the workload
        event API.
  /workload-instances/versions:
    get:
      description: Get the supported API versions for workload instances.
      operationId: workloadInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetWorkloadInstanceVersions gets the supported versions for the workload
        instance API.
  /workload-resource-definitions/versions:
    get:
      description: Get the supported API versions for workload resource definitions.
      operationId: workloadResourceDefinition-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetWorkloadResourceDefinitionVersions gets the supported versions for
        the workload resource definition API.
  /workload-resource-instances/versions:
    get:
      description: Get the supported API versions for workload resource instances.
      operationId: workloadResourceInstance-get-versions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RESTAPIVersions'
      summary: GetWorkloadResourceInstanceVersions gets the supported versions for
        the workload resource instance API.
swagger: "2.0"
