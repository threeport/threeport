// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "https://threerport.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attached-object-references/versions": {
            "get": {
                "description": "Get the supported API versions for attached object references.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAttachedObjectReferenceVersions gets the supported versions for the attached object reference API.",
                "operationId": "attachedObjectReference-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-accounts/versions": {
            "get": {
                "description": "Get the supported API versions for aws accounts.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsAccountVersions gets the supported versions for the aws account API.",
                "operationId": "awsAccount-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-kubernetes-runtime-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks kubernetes runtime definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksKubernetesRuntimeDefinitionVersions gets the supported versions for the aws eks kubernetes runtime definition API.",
                "operationId": "awsEksKubernetesRuntimeDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-kubernetes-runtime-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks kubernetes runtime instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksKubernetesRuntimeInstanceVersions gets the supported versions for the aws eks kubernetes runtime instance API.",
                "operationId": "awsEksKubernetesRuntimeInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-object-storage-bucket-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws object storage bucket definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsObjectStorageBucketDefinitionVersions gets the supported versions for the aws object storage bucket definition API.",
                "operationId": "awsObjectStorageBucketDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-object-storage-bucket-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws object storage bucket instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsObjectStorageBucketInstanceVersions gets the supported versions for the aws object storage bucket instance API.",
                "operationId": "awsObjectStorageBucketInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseDefinitionVersions gets the supported versions for the aws relational database definition API.",
                "operationId": "awsRelationalDatabaseDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseInstanceVersions gets the supported versions for the aws relational database instance API.",
                "operationId": "awsRelationalDatabaseInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/control-plane-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for control plane definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetControlPlaneDefinitionVersions gets the supported versions for the control plane definition API.",
                "operationId": "controlPlaneDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/control-plane-instances/versions": {
            "get": {
                "description": "Get the supported API versions for control plane instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetControlPlaneInstanceVersions gets the supported versions for the control plane instance API.",
                "operationId": "controlPlaneInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for domain name definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameDefinitionVersions gets the supported versions for the domain name definition API.",
                "operationId": "domainNameDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-instances/versions": {
            "get": {
                "description": "Get the supported API versions for domain name instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameInstanceVersions gets the supported versions for the domain name instance API.",
                "operationId": "domainNameInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/events/versions": {
            "get": {
                "description": "Get the supported API versions for events.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetEventVersions gets the supported versions for the event API.",
                "operationId": "event-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/gateway-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for gateway definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayDefinitionVersions gets the supported versions for the gateway definition API.",
                "operationId": "gatewayDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/gateway-http-ports/versions": {
            "get": {
                "description": "Get the supported API versions for gateway http ports.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayHttpPortVersions gets the supported versions for the gateway http port API.",
                "operationId": "gatewayHttpPort-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/gateway-instances/versions": {
            "get": {
                "description": "Get the supported API versions for gateway instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayInstanceVersions gets the supported versions for the gateway instance API.",
                "operationId": "gatewayInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/gateway-tcp-ports/versions": {
            "get": {
                "description": "Get the supported API versions for gateway tcp ports.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayTcpPortVersions gets the supported versions for the gateway tcp port API.",
                "operationId": "gatewayTcpPort-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/helm-workload-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for helm workload definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetHelmWorkloadDefinitionVersions gets the supported versions for the helm workload definition API.",
                "operationId": "helmWorkloadDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/helm-workload-instances/versions": {
            "get": {
                "description": "Get the supported API versions for helm workload instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetHelmWorkloadInstanceVersions gets the supported versions for the helm workload instance API.",
                "operationId": "helmWorkloadInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/kubernetes-runtime-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for kubernetes runtime definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetKubernetesRuntimeDefinitionVersions gets the supported versions for the kubernetes runtime definition API.",
                "operationId": "kubernetesRuntimeDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/kubernetes-runtime-instances/versions": {
            "get": {
                "description": "Get the supported API versions for kubernetes runtime instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetKubernetesRuntimeInstanceVersions gets the supported versions for the kubernetes runtime instance API.",
                "operationId": "kubernetesRuntimeInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/log-backends/versions": {
            "get": {
                "description": "Get the supported API versions for log backends.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogBackendVersions gets the supported versions for the log backend API.",
                "operationId": "logBackend-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for log storage definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageDefinitionVersions gets the supported versions for the log storage definition API.",
                "operationId": "logStorageDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-instances/versions": {
            "get": {
                "description": "Get the supported API versions for log storage instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageInstanceVersions gets the supported versions for the log storage instance API.",
                "operationId": "logStorageInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/logging-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for logging definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLoggingDefinitionVersions gets the supported versions for the logging definition API.",
                "operationId": "loggingDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/logging-instances/versions": {
            "get": {
                "description": "Get the supported API versions for logging instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLoggingInstanceVersions gets the supported versions for the logging instance API.",
                "operationId": "loggingInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/metrics-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for metrics definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetMetricsDefinitionVersions gets the supported versions for the metrics definition API.",
                "operationId": "metricsDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/metrics-instances/versions": {
            "get": {
                "description": "Get the supported API versions for metrics instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetMetricsInstanceVersions gets the supported versions for the metrics instance API.",
                "operationId": "metricsInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/observability-dashboard-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for observability dashboard definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetObservabilityDashboardDefinitionVersions gets the supported versions for the observability dashboard definition API.",
                "operationId": "observabilityDashboardDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/observability-dashboard-instances/versions": {
            "get": {
                "description": "Get the supported API versions for observability dashboard instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetObservabilityDashboardInstanceVersions gets the supported versions for the observability dashboard instance API.",
                "operationId": "observabilityDashboardInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/observability-stack-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for observability stack definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetObservabilityStackDefinitionVersions gets the supported versions for the observability stack definition API.",
                "operationId": "observabilityStackDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/observability-stack-instances/versions": {
            "get": {
                "description": "Get the supported API versions for observability stack instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetObservabilityStackInstanceVersions gets the supported versions for the observability stack instance API.",
                "operationId": "observabilityStackInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/profiles/versions": {
            "get": {
                "description": "Get the supported API versions for profiles.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetProfileVersions gets the supported versions for the profile API.",
                "operationId": "profile-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/secret-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for secret definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetSecretDefinitionVersions gets the supported versions for the secret definition API.",
                "operationId": "secretDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/secret-instances/versions": {
            "get": {
                "description": "Get the supported API versions for secret instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetSecretInstanceVersions gets the supported versions for the secret instance API.",
                "operationId": "secretInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/terraform-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for terraform definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTerraformDefinitionVersions gets the supported versions for the terraform definition API.",
                "operationId": "terraformDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/terraform-instances/versions": {
            "get": {
                "description": "Get the supported API versions for terraform instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTerraformInstanceVersions gets the supported versions for the terraform instance API.",
                "operationId": "terraformInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/tiers/versions": {
            "get": {
                "description": "Get the supported API versions for tiers.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTierVersions gets the supported versions for the tier API.",
                "operationId": "tier-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/v0/attached-object-references": {
            "get": {
                "description": "Get all attached object references from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all attached object references.",
                "operationId": "get-v0-attachedObjectReferences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "attached object reference search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new attached object reference to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new attached object reference.",
                "operationId": "add-v0-attachedObjectReference",
                "parameters": [
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/attached-object-references/{id}": {
            "get": {
                "description": "Get a particular attached object reference from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a attached object reference.",
                "operationId": "get-v0-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a attached object reference in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating attached object reference objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing attached object reference by replacing the entire object.",
                "operationId": "replace-v0-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a attached object reference by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a attached object reference.",
                "operationId": "delete-v0-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a attached object reference in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating attached object reference objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing attached object reference.",
                "operationId": "update-v0-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts": {
            "get": {
                "description": "Get all aws accounts from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws accounts.",
                "operationId": "get-v0-awsAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws account search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws account to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws account.",
                "operationId": "add-v0-awsAccount",
                "parameters": [
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts/{id}": {
            "get": {
                "description": "Get a particular aws account from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws account.",
                "operationId": "get-v0-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws account in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws account by replacing the entire object.",
                "operationId": "replace-v0-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws account by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws account.",
                "operationId": "delete-v0-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws account in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws account.",
                "operationId": "update-v0-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-definitions": {
            "get": {
                "description": "Get all aws eks kubernetes runtime definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks kubernetes runtime definitions.",
                "operationId": "get-v0-awsEksKubernetesRuntimeDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks kubernetes runtime definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks kubernetes runtime definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks kubernetes runtime definition.",
                "operationId": "add-v0-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-definitions/{id}": {
            "get": {
                "description": "Get a particular aws eks kubernetes runtime definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks kubernetes runtime definition.",
                "operationId": "get-v0-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks kubernetes runtime definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks kubernetes runtime definition by replacing the entire object.",
                "operationId": "replace-v0-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks kubernetes runtime definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks kubernetes runtime definition.",
                "operationId": "delete-v0-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks kubernetes runtime definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks kubernetes runtime definition.",
                "operationId": "update-v0-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-instances": {
            "get": {
                "description": "Get all aws eks kubernetes runtime instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks kubernetes runtime instances.",
                "operationId": "get-v0-awsEksKubernetesRuntimeInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks kubernetes runtime instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks kubernetes runtime instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks kubernetes runtime instance.",
                "operationId": "add-v0-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-instances/{id}": {
            "get": {
                "description": "Get a particular aws eks kubernetes runtime instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks kubernetes runtime instance.",
                "operationId": "get-v0-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks kubernetes runtime instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks kubernetes runtime instance by replacing the entire object.",
                "operationId": "replace-v0-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks kubernetes runtime instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks kubernetes runtime instance.",
                "operationId": "delete-v0-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks kubernetes runtime instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks kubernetes runtime instance.",
                "operationId": "update-v0-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-definitions": {
            "get": {
                "description": "Get all aws object storage bucket definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws object storage bucket definitions.",
                "operationId": "get-v0-awsObjectStorageBucketDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws object storage bucket definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws object storage bucket definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws object storage bucket definition.",
                "operationId": "add-v0-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-definitions/{id}": {
            "get": {
                "description": "Get a particular aws object storage bucket definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws object storage bucket definition.",
                "operationId": "get-v0-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws object storage bucket definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws object storage bucket definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws object storage bucket definition by replacing the entire object.",
                "operationId": "replace-v0-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws object storage bucket definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws object storage bucket definition.",
                "operationId": "delete-v0-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws object storage bucket definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws object storage bucket definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws object storage bucket definition.",
                "operationId": "update-v0-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-instances": {
            "get": {
                "description": "Get all aws object storage bucket instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws object storage bucket instances.",
                "operationId": "get-v0-awsObjectStorageBucketInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws object storage bucket instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws object storage bucket instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws object storage bucket instance.",
                "operationId": "add-v0-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-instances/{id}": {
            "get": {
                "description": "Get a particular aws object storage bucket instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws object storage bucket instance.",
                "operationId": "get-v0-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws object storage bucket instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws object storage bucket instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws object storage bucket instance by replacing the entire object.",
                "operationId": "replace-v0-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws object storage bucket instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws object storage bucket instance.",
                "operationId": "delete-v0-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws object storage bucket instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws object storage bucket instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws object storage bucket instance.",
                "operationId": "update-v0-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions": {
            "get": {
                "description": "Get all aws relational database definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database definitions.",
                "operationId": "get-v0-awsRelationalDatabaseDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database definition.",
                "operationId": "add-v0-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions/{id}": {
            "get": {
                "description": "Get a particular aws relational database definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database definition.",
                "operationId": "get-v0-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database definition by replacing the entire object.",
                "operationId": "replace-v0-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database definition.",
                "operationId": "delete-v0-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database definition.",
                "operationId": "update-v0-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances": {
            "get": {
                "description": "Get all aws relational database instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database instances.",
                "operationId": "get-v0-awsRelationalDatabaseInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database instance.",
                "operationId": "add-v0-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances/{id}": {
            "get": {
                "description": "Get a particular aws relational database instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database instance.",
                "operationId": "get-v0-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database instance by replacing the entire object.",
                "operationId": "replace-v0-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database instance.",
                "operationId": "delete-v0-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database instance.",
                "operationId": "update-v0-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-definitions": {
            "get": {
                "description": "Get all control plane definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all control plane definitions.",
                "operationId": "get-v0-controlPlaneDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "control plane definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new control plane definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new control plane definition.",
                "operationId": "add-v0-controlPlaneDefinition",
                "parameters": [
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-definitions/{id}": {
            "get": {
                "description": "Get a particular control plane definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a control plane definition.",
                "operationId": "get-v0-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a control plane definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating control plane definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing control plane definition by replacing the entire object.",
                "operationId": "replace-v0-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a control plane definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a control plane definition.",
                "operationId": "delete-v0-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a control plane definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating control plane definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing control plane definition.",
                "operationId": "update-v0-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-instances": {
            "get": {
                "description": "Get all control plane instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all control plane instances.",
                "operationId": "get-v0-controlPlaneInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "control plane instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new control plane instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new control plane instance.",
                "operationId": "add-v0-controlPlaneInstance",
                "parameters": [
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-instances/{id}": {
            "get": {
                "description": "Get a particular control plane instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a control plane instance.",
                "operationId": "get-v0-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a control plane instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating control plane instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing control plane instance by replacing the entire object.",
                "operationId": "replace-v0-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a control plane instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a control plane instance.",
                "operationId": "delete-v0-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a control plane instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating control plane instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing control plane instance.",
                "operationId": "update-v0-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions": {
            "get": {
                "description": "Get all domain name definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name definitions.",
                "operationId": "get-v0-domainNameDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name definition.",
                "operationId": "add-v0-domainNameDefinition",
                "parameters": [
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions/{id}": {
            "get": {
                "description": "Get a particular domain name definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name definition.",
                "operationId": "get-v0-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name definition by replacing the entire object.",
                "operationId": "replace-v0-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name definition.",
                "operationId": "delete-v0-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name definition.",
                "operationId": "update-v0-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances": {
            "get": {
                "description": "Get all domain name instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name instances.",
                "operationId": "get-v0-domainNameInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name instance.",
                "operationId": "add-v0-domainNameInstance",
                "parameters": [
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances/{id}": {
            "get": {
                "description": "Get a particular domain name instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name instance.",
                "operationId": "get-v0-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name instance by replacing the entire object.",
                "operationId": "replace-v0-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name instance.",
                "operationId": "delete-v0-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name instance.",
                "operationId": "update-v0-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/events": {
            "get": {
                "description": "Get all events from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all events.",
                "operationId": "get-v0-events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "event search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new event to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new event.",
                "operationId": "add-v0-event",
                "parameters": [
                    {
                        "description": "Event object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/events-join-attached-object-references": {
            "get": {
                "description": "Get all events joined with attached object references",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all events joined with attached object references.",
                "operationId": "get-v0-events-join-attached-object-references",
                "parameters": [
                    {
                        "type": "string",
                        "description": "events joined with attached object references search by objectId",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/events/{id}": {
            "get": {
                "description": "Get a particular event from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a event.",
                "operationId": "get-v0-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a event in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing event by replacing the entire object.",
                "operationId": "replace-v0-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a event by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a event.",
                "operationId": "delete-v0-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a event in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing event.",
                "operationId": "update-v0-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-definitions": {
            "get": {
                "description": "Get all gateway definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway definitions.",
                "operationId": "get-v0-gatewayDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway definition.",
                "operationId": "add-v0-gatewayDefinition",
                "parameters": [
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-definitions/{id}": {
            "get": {
                "description": "Get a particular gateway definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway definition.",
                "operationId": "get-v0-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway definition by replacing the entire object.",
                "operationId": "replace-v0-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway definition.",
                "operationId": "delete-v0-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway definition.",
                "operationId": "update-v0-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-http-ports": {
            "get": {
                "description": "Get all gateway http ports from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway http ports.",
                "operationId": "get-v0-gatewayHttpPorts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway http port search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway http port to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway http port.",
                "operationId": "add-v0-gatewayHttpPort",
                "parameters": [
                    {
                        "description": "GatewayHttpPort object",
                        "name": "gatewayHttpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayHttpPort"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-http-ports/{id}": {
            "get": {
                "description": "Get a particular gateway http port from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway http port.",
                "operationId": "get-v0-gatewayHttpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway http port in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway http port objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway http port by replacing the entire object.",
                "operationId": "replace-v0-gatewayHttpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayHttpPort object",
                        "name": "gatewayHttpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayHttpPort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway http port by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway http port.",
                "operationId": "delete-v0-gatewayHttpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway http port in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway http port objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway http port.",
                "operationId": "update-v0-gatewayHttpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayHttpPort object",
                        "name": "gatewayHttpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayHttpPort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-instances": {
            "get": {
                "description": "Get all gateway instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway instances.",
                "operationId": "get-v0-gatewayInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway instance.",
                "operationId": "add-v0-gatewayInstance",
                "parameters": [
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-instances/{id}": {
            "get": {
                "description": "Get a particular gateway instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway instance.",
                "operationId": "get-v0-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway instance by replacing the entire object.",
                "operationId": "replace-v0-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway instance.",
                "operationId": "delete-v0-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway instance.",
                "operationId": "update-v0-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-tcp-ports": {
            "get": {
                "description": "Get all gateway tcp ports from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway tcp ports.",
                "operationId": "get-v0-gatewayTcpPorts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway tcp port search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway tcp port to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway tcp port.",
                "operationId": "add-v0-gatewayTcpPort",
                "parameters": [
                    {
                        "description": "GatewayTcpPort object",
                        "name": "gatewayTcpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayTcpPort"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-tcp-ports/{id}": {
            "get": {
                "description": "Get a particular gateway tcp port from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway tcp port.",
                "operationId": "get-v0-gatewayTcpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway tcp port in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway tcp port objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway tcp port by replacing the entire object.",
                "operationId": "replace-v0-gatewayTcpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayTcpPort object",
                        "name": "gatewayTcpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayTcpPort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway tcp port by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway tcp port.",
                "operationId": "delete-v0-gatewayTcpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway tcp port in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway tcp port objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway tcp port.",
                "operationId": "update-v0-gatewayTcpPort",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayTcpPort object",
                        "name": "gatewayTcpPort",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayTcpPort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/helm-workload-definitions": {
            "get": {
                "description": "Get all helm workload definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all helm workload definitions.",
                "operationId": "get-v0-helmWorkloadDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "helm workload definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new helm workload definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new helm workload definition.",
                "operationId": "add-v0-helmWorkloadDefinition",
                "parameters": [
                    {
                        "description": "HelmWorkloadDefinition object",
                        "name": "helmWorkloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/helm-workload-definitions/{id}": {
            "get": {
                "description": "Get a particular helm workload definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a helm workload definition.",
                "operationId": "get-v0-helmWorkloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a helm workload definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating helm workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing helm workload definition by replacing the entire object.",
                "operationId": "replace-v0-helmWorkloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HelmWorkloadDefinition object",
                        "name": "helmWorkloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a helm workload definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a helm workload definition.",
                "operationId": "delete-v0-helmWorkloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a helm workload definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating helm workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing helm workload definition.",
                "operationId": "update-v0-helmWorkloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HelmWorkloadDefinition object",
                        "name": "helmWorkloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/helm-workload-instances": {
            "get": {
                "description": "Get all helm workload instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all helm workload instances.",
                "operationId": "get-v0-helmWorkloadInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "helm workload instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new helm workload instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new helm workload instance.",
                "operationId": "add-v0-helmWorkloadInstance",
                "parameters": [
                    {
                        "description": "HelmWorkloadInstance object",
                        "name": "helmWorkloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/helm-workload-instances/{id}": {
            "get": {
                "description": "Get a particular helm workload instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a helm workload instance.",
                "operationId": "get-v0-helmWorkloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a helm workload instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating helm workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing helm workload instance by replacing the entire object.",
                "operationId": "replace-v0-helmWorkloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HelmWorkloadInstance object",
                        "name": "helmWorkloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a helm workload instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a helm workload instance.",
                "operationId": "delete-v0-helmWorkloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a helm workload instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating helm workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing helm workload instance.",
                "operationId": "update-v0-helmWorkloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "HelmWorkloadInstance object",
                        "name": "helmWorkloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.HelmWorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-definitions": {
            "get": {
                "description": "Get all kubernetes runtime definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all kubernetes runtime definitions.",
                "operationId": "get-v0-kubernetesRuntimeDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kubernetes runtime definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new kubernetes runtime definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new kubernetes runtime definition.",
                "operationId": "add-v0-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-definitions/{id}": {
            "get": {
                "description": "Get a particular kubernetes runtime definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a kubernetes runtime definition.",
                "operationId": "get-v0-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a kubernetes runtime definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing kubernetes runtime definition by replacing the entire object.",
                "operationId": "replace-v0-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a kubernetes runtime definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a kubernetes runtime definition.",
                "operationId": "delete-v0-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a kubernetes runtime definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing kubernetes runtime definition.",
                "operationId": "update-v0-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-instances": {
            "get": {
                "description": "Get all kubernetes runtime instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all kubernetes runtime instances.",
                "operationId": "get-v0-kubernetesRuntimeInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kubernetes runtime instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new kubernetes runtime instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new kubernetes runtime instance.",
                "operationId": "add-v0-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-instances/{id}": {
            "get": {
                "description": "Get a particular kubernetes runtime instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a kubernetes runtime instance.",
                "operationId": "get-v0-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a kubernetes runtime instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing kubernetes runtime instance by replacing the entire object.",
                "operationId": "replace-v0-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a kubernetes runtime instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a kubernetes runtime instance.",
                "operationId": "delete-v0-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a kubernetes runtime instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing kubernetes runtime instance.",
                "operationId": "update-v0-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends": {
            "get": {
                "description": "Get all log backends from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log backends.",
                "operationId": "get-v0-logBackends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log backend search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log backend to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log backend.",
                "operationId": "add-v0-logBackend",
                "parameters": [
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends/{id}": {
            "get": {
                "description": "Get a particular log backend from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log backend.",
                "operationId": "get-v0-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log backend in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log backend by replacing the entire object.",
                "operationId": "replace-v0-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log backend by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log backend.",
                "operationId": "delete-v0-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log backend in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log backend.",
                "operationId": "update-v0-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions": {
            "get": {
                "description": "Get all log storage definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage definitions.",
                "operationId": "get-v0-logStorageDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage definition.",
                "operationId": "add-v0-logStorageDefinition",
                "parameters": [
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions/{id}": {
            "get": {
                "description": "Get a particular log storage definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage definition.",
                "operationId": "get-v0-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage definition by replacing the entire object.",
                "operationId": "replace-v0-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage definition.",
                "operationId": "delete-v0-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage definition.",
                "operationId": "update-v0-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances": {
            "get": {
                "description": "Get all log storage instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage instances.",
                "operationId": "get-v0-logStorageInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage instance.",
                "operationId": "add-v0-logStorageInstance",
                "parameters": [
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances/{id}": {
            "get": {
                "description": "Get a particular log storage instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage instance.",
                "operationId": "get-v0-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage instance by replacing the entire object.",
                "operationId": "replace-v0-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage instance.",
                "operationId": "delete-v0-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage instance.",
                "operationId": "update-v0-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/logging-definitions": {
            "get": {
                "description": "Get all logging definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all logging definitions.",
                "operationId": "get-v0-loggingDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "logging definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new logging definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new logging definition.",
                "operationId": "add-v0-loggingDefinition",
                "parameters": [
                    {
                        "description": "LoggingDefinition object",
                        "name": "loggingDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/logging-definitions/{id}": {
            "get": {
                "description": "Get a particular logging definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a logging definition.",
                "operationId": "get-v0-loggingDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a logging definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating logging definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing logging definition by replacing the entire object.",
                "operationId": "replace-v0-loggingDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LoggingDefinition object",
                        "name": "loggingDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a logging definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a logging definition.",
                "operationId": "delete-v0-loggingDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a logging definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating logging definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing logging definition.",
                "operationId": "update-v0-loggingDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LoggingDefinition object",
                        "name": "loggingDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/logging-instances": {
            "get": {
                "description": "Get all logging instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all logging instances.",
                "operationId": "get-v0-loggingInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "logging instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new logging instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new logging instance.",
                "operationId": "add-v0-loggingInstance",
                "parameters": [
                    {
                        "description": "LoggingInstance object",
                        "name": "loggingInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/logging-instances/{id}": {
            "get": {
                "description": "Get a particular logging instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a logging instance.",
                "operationId": "get-v0-loggingInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a logging instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating logging instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing logging instance by replacing the entire object.",
                "operationId": "replace-v0-loggingInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LoggingInstance object",
                        "name": "loggingInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a logging instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a logging instance.",
                "operationId": "delete-v0-loggingInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a logging instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating logging instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing logging instance.",
                "operationId": "update-v0-loggingInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LoggingInstance object",
                        "name": "loggingInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LoggingInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/metrics-definitions": {
            "get": {
                "description": "Get all metrics definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all metrics definitions.",
                "operationId": "get-v0-metricsDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "metrics definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new metrics definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new metrics definition.",
                "operationId": "add-v0-metricsDefinition",
                "parameters": [
                    {
                        "description": "MetricsDefinition object",
                        "name": "metricsDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/metrics-definitions/{id}": {
            "get": {
                "description": "Get a particular metrics definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a metrics definition.",
                "operationId": "get-v0-metricsDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a metrics definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating metrics definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing metrics definition by replacing the entire object.",
                "operationId": "replace-v0-metricsDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MetricsDefinition object",
                        "name": "metricsDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a metrics definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a metrics definition.",
                "operationId": "delete-v0-metricsDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a metrics definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating metrics definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing metrics definition.",
                "operationId": "update-v0-metricsDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MetricsDefinition object",
                        "name": "metricsDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/metrics-instances": {
            "get": {
                "description": "Get all metrics instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all metrics instances.",
                "operationId": "get-v0-metricsInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "metrics instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new metrics instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new metrics instance.",
                "operationId": "add-v0-metricsInstance",
                "parameters": [
                    {
                        "description": "MetricsInstance object",
                        "name": "metricsInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/metrics-instances/{id}": {
            "get": {
                "description": "Get a particular metrics instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a metrics instance.",
                "operationId": "get-v0-metricsInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a metrics instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating metrics instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing metrics instance by replacing the entire object.",
                "operationId": "replace-v0-metricsInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MetricsInstance object",
                        "name": "metricsInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a metrics instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a metrics instance.",
                "operationId": "delete-v0-metricsInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a metrics instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating metrics instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing metrics instance.",
                "operationId": "update-v0-metricsInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MetricsInstance object",
                        "name": "metricsInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.MetricsInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-dashboard-definitions": {
            "get": {
                "description": "Get all observability dashboard definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all observability dashboard definitions.",
                "operationId": "get-v0-observabilityDashboardDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "observability dashboard definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new observability dashboard definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new observability dashboard definition.",
                "operationId": "add-v0-observabilityDashboardDefinition",
                "parameters": [
                    {
                        "description": "ObservabilityDashboardDefinition object",
                        "name": "observabilityDashboardDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-dashboard-definitions/{id}": {
            "get": {
                "description": "Get a particular observability dashboard definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a observability dashboard definition.",
                "operationId": "get-v0-observabilityDashboardDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a observability dashboard definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating observability dashboard definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing observability dashboard definition by replacing the entire object.",
                "operationId": "replace-v0-observabilityDashboardDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityDashboardDefinition object",
                        "name": "observabilityDashboardDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a observability dashboard definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a observability dashboard definition.",
                "operationId": "delete-v0-observabilityDashboardDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a observability dashboard definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating observability dashboard definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing observability dashboard definition.",
                "operationId": "update-v0-observabilityDashboardDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityDashboardDefinition object",
                        "name": "observabilityDashboardDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-dashboard-instances": {
            "get": {
                "description": "Get all observability dashboard instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all observability dashboard instances.",
                "operationId": "get-v0-observabilityDashboardInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "observability dashboard instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new observability dashboard instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new observability dashboard instance.",
                "operationId": "add-v0-observabilityDashboardInstance",
                "parameters": [
                    {
                        "description": "ObservabilityDashboardInstance object",
                        "name": "observabilityDashboardInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-dashboard-instances/{id}": {
            "get": {
                "description": "Get a particular observability dashboard instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a observability dashboard instance.",
                "operationId": "get-v0-observabilityDashboardInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a observability dashboard instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating observability dashboard instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing observability dashboard instance by replacing the entire object.",
                "operationId": "replace-v0-observabilityDashboardInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityDashboardInstance object",
                        "name": "observabilityDashboardInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a observability dashboard instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a observability dashboard instance.",
                "operationId": "delete-v0-observabilityDashboardInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a observability dashboard instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating observability dashboard instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing observability dashboard instance.",
                "operationId": "update-v0-observabilityDashboardInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityDashboardInstance object",
                        "name": "observabilityDashboardInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityDashboardInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-stack-definitions": {
            "get": {
                "description": "Get all observability stack definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all observability stack definitions.",
                "operationId": "get-v0-observabilityStackDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "observability stack definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new observability stack definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new observability stack definition.",
                "operationId": "add-v0-observabilityStackDefinition",
                "parameters": [
                    {
                        "description": "ObservabilityStackDefinition object",
                        "name": "observabilityStackDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-stack-definitions/{id}": {
            "get": {
                "description": "Get a particular observability stack definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a observability stack definition.",
                "operationId": "get-v0-observabilityStackDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a observability stack definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating observability stack definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing observability stack definition by replacing the entire object.",
                "operationId": "replace-v0-observabilityStackDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityStackDefinition object",
                        "name": "observabilityStackDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a observability stack definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a observability stack definition.",
                "operationId": "delete-v0-observabilityStackDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a observability stack definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating observability stack definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing observability stack definition.",
                "operationId": "update-v0-observabilityStackDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityStackDefinition object",
                        "name": "observabilityStackDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-stack-instances": {
            "get": {
                "description": "Get all observability stack instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all observability stack instances.",
                "operationId": "get-v0-observabilityStackInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "observability stack instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new observability stack instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new observability stack instance.",
                "operationId": "add-v0-observabilityStackInstance",
                "parameters": [
                    {
                        "description": "ObservabilityStackInstance object",
                        "name": "observabilityStackInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/observability-stack-instances/{id}": {
            "get": {
                "description": "Get a particular observability stack instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a observability stack instance.",
                "operationId": "get-v0-observabilityStackInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a observability stack instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating observability stack instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing observability stack instance by replacing the entire object.",
                "operationId": "replace-v0-observabilityStackInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityStackInstance object",
                        "name": "observabilityStackInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a observability stack instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a observability stack instance.",
                "operationId": "delete-v0-observabilityStackInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a observability stack instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating observability stack instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing observability stack instance.",
                "operationId": "update-v0-observabilityStackInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ObservabilityStackInstance object",
                        "name": "observabilityStackInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ObservabilityStackInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles": {
            "get": {
                "description": "Get all profiles from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all profiles.",
                "operationId": "get-v0-profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new profile to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new profile.",
                "operationId": "add-v0-profile",
                "parameters": [
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles/{id}": {
            "get": {
                "description": "Get a particular profile from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a profile.",
                "operationId": "get-v0-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a profile in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing profile by replacing the entire object.",
                "operationId": "replace-v0-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a profile by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a profile.",
                "operationId": "delete-v0-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a profile in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing profile.",
                "operationId": "update-v0-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/secret-definitions": {
            "get": {
                "description": "Get all secret definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all secret definitions.",
                "operationId": "get-v0-secretDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "secret definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new secret definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new secret definition.",
                "operationId": "add-v0-secretDefinition",
                "parameters": [
                    {
                        "description": "SecretDefinition object",
                        "name": "secretDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/secret-definitions/{id}": {
            "get": {
                "description": "Get a particular secret definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a secret definition.",
                "operationId": "get-v0-secretDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a secret definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating secret definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing secret definition by replacing the entire object.",
                "operationId": "replace-v0-secretDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SecretDefinition object",
                        "name": "secretDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a secret definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a secret definition.",
                "operationId": "delete-v0-secretDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a secret definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating secret definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing secret definition.",
                "operationId": "update-v0-secretDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SecretDefinition object",
                        "name": "secretDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/secret-instances": {
            "get": {
                "description": "Get all secret instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all secret instances.",
                "operationId": "get-v0-secretInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "secret instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new secret instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new secret instance.",
                "operationId": "add-v0-secretInstance",
                "parameters": [
                    {
                        "description": "SecretInstance object",
                        "name": "secretInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/secret-instances/{id}": {
            "get": {
                "description": "Get a particular secret instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a secret instance.",
                "operationId": "get-v0-secretInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a secret instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating secret instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing secret instance by replacing the entire object.",
                "operationId": "replace-v0-secretInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SecretInstance object",
                        "name": "secretInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a secret instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a secret instance.",
                "operationId": "delete-v0-secretInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a secret instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating secret instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing secret instance.",
                "operationId": "update-v0-secretInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SecretInstance object",
                        "name": "secretInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.SecretInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/terraform-definitions": {
            "get": {
                "description": "Get all terraform definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all terraform definitions.",
                "operationId": "get-v0-terraformDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "terraform definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new terraform definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new terraform definition.",
                "operationId": "add-v0-terraformDefinition",
                "parameters": [
                    {
                        "description": "TerraformDefinition object",
                        "name": "terraformDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/terraform-definitions/{id}": {
            "get": {
                "description": "Get a particular terraform definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a terraform definition.",
                "operationId": "get-v0-terraformDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a terraform definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating terraform definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing terraform definition by replacing the entire object.",
                "operationId": "replace-v0-terraformDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TerraformDefinition object",
                        "name": "terraformDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a terraform definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a terraform definition.",
                "operationId": "delete-v0-terraformDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a terraform definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating terraform definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing terraform definition.",
                "operationId": "update-v0-terraformDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TerraformDefinition object",
                        "name": "terraformDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/terraform-instances": {
            "get": {
                "description": "Get all terraform instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all terraform instances.",
                "operationId": "get-v0-terraformInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "terraform instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new terraform instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new terraform instance.",
                "operationId": "add-v0-terraformInstance",
                "parameters": [
                    {
                        "description": "TerraformInstance object",
                        "name": "terraformInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/terraform-instances/{id}": {
            "get": {
                "description": "Get a particular terraform instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a terraform instance.",
                "operationId": "get-v0-terraformInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a terraform instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating terraform instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing terraform instance by replacing the entire object.",
                "operationId": "replace-v0-terraformInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TerraformInstance object",
                        "name": "terraformInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a terraform instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a terraform instance.",
                "operationId": "delete-v0-terraformInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a terraform instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating terraform instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing terraform instance.",
                "operationId": "update-v0-terraformInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TerraformInstance object",
                        "name": "terraformInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.TerraformInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers": {
            "get": {
                "description": "Get all tiers from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all tiers.",
                "operationId": "get-v0-tiers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tier search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tier to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new tier.",
                "operationId": "add-v0-tier",
                "parameters": [
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers/{id}": {
            "get": {
                "description": "Get a particular tier from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a tier.",
                "operationId": "get-v0-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a tier in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing tier by replacing the entire object.",
                "operationId": "replace-v0-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tier by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a tier.",
                "operationId": "delete-v0-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a tier in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing tier.",
                "operationId": "update-v0-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions": {
            "get": {
                "description": "Get all workload definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload definitions.",
                "operationId": "get-v0-workloadDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload definition.",
                "operationId": "add-v0-workloadDefinition",
                "parameters": [
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions/{id}": {
            "get": {
                "description": "Get a particular workload definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload definition.",
                "operationId": "get-v0-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload definition by replacing the entire object.",
                "operationId": "replace-v0-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload definition.",
                "operationId": "delete-v0-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload definition.",
                "operationId": "update-v0-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-events": {
            "get": {
                "description": "Get all workload events from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload events.",
                "operationId": "get-v0-workloadEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload event search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload event to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload event.",
                "operationId": "add-v0-workloadEvent",
                "parameters": [
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes workload events by query parameter from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes workload events by query parameter.",
                "operationId": "delete-workloadEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload event search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-events/{id}": {
            "get": {
                "description": "Get a particular workload event from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload event.",
                "operationId": "get-v0-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload event in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload event by replacing the entire object.",
                "operationId": "replace-v0-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload event by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload event.",
                "operationId": "delete-v0-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload event in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload event.",
                "operationId": "update-v0-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances": {
            "get": {
                "description": "Get all workload instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload instances.",
                "operationId": "get-v0-workloadInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload instance.",
                "operationId": "add-v0-workloadInstance",
                "parameters": [
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances/{id}": {
            "get": {
                "description": "Get a particular workload instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload instance.",
                "operationId": "get-v0-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload instance by replacing the entire object.",
                "operationId": "replace-v0-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload instance.",
                "operationId": "delete-v0-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload instance.",
                "operationId": "update-v0-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definition-sets": {
            "post": {
                "description": "Add a set of new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new set of workload resource definitions.",
                "operationId": "add-workloadResourceDefinitions",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object array",
                        "name": "workloadResourceDefinitions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions": {
            "get": {
                "description": "Get all workload resource definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource definitions.",
                "operationId": "get-v0-workloadResourceDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource definition.",
                "operationId": "add-v0-workloadResourceDefinition",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions/{id}": {
            "get": {
                "description": "Get a particular workload resource definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource definition.",
                "operationId": "get-v0-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource definition by replacing the entire object.",
                "operationId": "replace-v0-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource definition.",
                "operationId": "delete-v0-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource definition.",
                "operationId": "update-v0-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances": {
            "get": {
                "description": "Get all workload resource instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource instances.",
                "operationId": "get-v0-workloadResourceInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource instance.",
                "operationId": "add-v0-workloadResourceInstance",
                "parameters": [
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances/{id}": {
            "get": {
                "description": "Get a particular workload resource instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource instance.",
                "operationId": "get-v0-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource instance by replacing the entire object.",
                "operationId": "replace-v0-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource instance.",
                "operationId": "delete-v0-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource instance.",
                "operationId": "update-v0-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/workload-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadDefinitionVersions gets the supported versions for the workload definition API.",
                "operationId": "workloadDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/workload-events/versions": {
            "get": {
                "description": "Get the supported API versions for workload events.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadEventVersions gets the supported versions for the workload event API.",
                "operationId": "workloadEvent-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/workload-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadInstanceVersions gets the supported versions for the workload instance API.",
                "operationId": "workloadInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceDefinitionVersions gets the supported versions for the workload resource definition API.",
                "operationId": "workloadResourceDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceInstanceVersions gets the supported versions for the workload resource instance API.",
                "operationId": "workloadResourceInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.ApiObjectVersions"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "v0.ApiObjectVersions": {
            "type": "object",
            "required": [
                "API",
                "Versions"
            ],
            "properties": {
                "API": {
                    "description": "Required.  REST API resource name.",
                    "type": "string"
                },
                "Versions": {
                    "description": "Required.  REST API resource versions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v0.AttachedObjectReference": {
            "type": "object",
            "required": [
                "AttachedObjectID",
                "AttachedObjectType",
                "ObjectID",
                "ObjectType"
            ],
            "properties": {
                "AttachedObjectID": {
                    "description": "The object ID of the attached object.",
                    "type": "integer"
                },
                "AttachedObjectType": {
                    "description": "The object type of the attached object.",
                    "type": "string"
                },
                "ObjectID": {
                    "description": "The object ID of the base object.",
                    "type": "integer"
                },
                "ObjectType": {
                    "description": "The object type of the base object.",
                    "type": "string"
                }
            }
        },
        "v0.AwsAccount": {
            "type": "object",
            "required": [
                "AccountID",
                "DefaultRegion",
                "Name"
            ],
            "properties": {
                "AccessKeyID": {
                    "description": "The access key ID credentials for the AWS account.",
                    "type": "string"
                },
                "AccountID": {
                    "description": "The account ID for the AWS account.",
                    "type": "string"
                },
                "AwsEksKubernetesRuntimeDefinitions": {
                    "description": "The cluster instances deployed in this AWS account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                    }
                },
                "DefaultAccount": {
                    "description": "If true is the AWS Account used if none specified in a definition.",
                    "type": "boolean"
                },
                "DefaultRegion": {
                    "description": "The region to use for AWS managed services if not specified.",
                    "type": "string"
                },
                "ExternalId": {
                    "description": "The ExternalId to use when assuming a RoleArn for the AWS account. This is\nautomatically generated by the API server if RoleArn is set.",
                    "type": "string"
                },
                "Name": {
                    "description": "The unique name of an AWS account.",
                    "type": "string"
                },
                "RoleArn": {
                    "description": "The RoleArn to assume for the AWS account.",
                    "type": "string"
                },
                "SecretAccessKey": {
                    "description": "The secret key credentials for the AWS account.",
                    "type": "string"
                }
            }
        },
        "v0.AwsEksKubernetesRuntimeDefinition": {
            "type": "object",
            "required": [
                "AWSAccountID",
                "DefaultNodeGroupInitialSize",
                "DefaultNodeGroupInstanceType",
                "DefaultNodeGroupMaximumSize",
                "DefaultNodeGroupMinimumSize",
                "KubernetesRuntimeDefinitionID",
                "Name",
                "ZoneCount"
            ],
            "properties": {
                "AWSAccountID": {
                    "description": "The AWS account in which the EKS cluster is provisioned.",
                    "type": "integer"
                },
                "AwsEksKubernetesRuntimeInstances": {
                    "description": "The AWS EKS kubernetes runtime instances derived from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                    }
                },
                "DefaultNodeGroupInitialSize": {
                    "description": "The number of nodes in the default initial node group.",
                    "type": "integer"
                },
                "DefaultNodeGroupInstanceType": {
                    "description": "The AWS instance type for the default initial node group.",
                    "type": "string"
                },
                "DefaultNodeGroupMaximumSize": {
                    "description": "The maximum number of nodes the default initial node group should have.",
                    "type": "integer"
                },
                "DefaultNodeGroupMinimumSize": {
                    "description": "The minimum number of nodes the default initial node group should have.",
                    "type": "integer"
                },
                "KubernetesRuntimeDefinitionID": {
                    "description": "The kubernetes runtime definition for an EKS cluster in AWS.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "ZoneCount": {
                    "description": "The number of zones the cluster should span for availability.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsEksKubernetesRuntimeInstance": {
            "type": "object",
            "required": [
                "AwsEksKubernetesRuntimeDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name"
            ],
            "properties": {
                "AwsEksKubernetesRuntimeDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime instance associated with the AWS EKS cluster.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Region": {
                    "description": "The AWS Region in which the cluster is provisioned.  This field is\nstored in the instance (as well as definition) since a change to the\ndefinition will not move a cluster.",
                    "type": "string"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the EKS cluster.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.AwsObjectStorageBucketDefinition": {
            "type": "object",
            "required": [
                "AwsAccountID",
                "Name",
                "WorkloadBucketEnvVar",
                "WorkloadServiceAccountName"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "AwsObjectStorageBucketInstances": {
                    "description": "The associated object storage bucket instances that are derived from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "PublicReadAccess": {
                    "description": "When true, objects in the bucket are publicly readable by anyone - for use\ncases such as storing static assets for public websites.  When false,\nonly the workload attached to an AWSObjectStorageBucketInstance and the AWS users\non the account may access the bucket for read or write.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadBucketEnvVar": {
                    "description": "The environment variable key that the workload is expecting to reference\nfor the name of the S3 bucket managed by threeport.",
                    "type": "string"
                },
                "WorkloadServiceAccountName": {
                    "description": "The name of the Kubernetes service account for the workload that will\naccess the S3 bucket.  Used to provide secure access using IAM roles for\nservice accounts (IRSA).",
                    "type": "string"
                }
            }
        },
        "v0.AwsObjectStorageBucketInstance": {
            "type": "object",
            "required": [
                "AwsObjectStorageBucketDefinitionID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "AwsObjectStorageBucketDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the S3 bucket.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The ID of the workload instance that uses the S3 bucket.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsRelationalDatabaseDefinition": {
            "type": "object",
            "required": [
                "AwsAccountID",
                "DatabaseName",
                "DatabasePort",
                "Engine",
                "EngineVersion",
                "MachineSize",
                "Name",
                "StorageGb",
                "WorkloadSecretName"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "AwsRelationalDatabaseInstances": {
                    "description": "The associated object storage bucket instances that are derived from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                    }
                },
                "BackupDays": {
                    "description": "The number of days to retain database backups for.",
                    "type": "integer"
                },
                "DatabaseName": {
                    "description": "The name of the database that will be used by the client workload.",
                    "type": "string"
                },
                "DatabasePort": {
                    "description": "The port to use to connect to the database.",
                    "type": "integer"
                },
                "Engine": {
                    "description": "The database engine for the instance.  One of:\n* mysql\n* postgres\n* mariadb",
                    "type": "string"
                },
                "EngineVersion": {
                    "description": "The version of the database engine for the instance.",
                    "type": "string"
                },
                "MachineSize": {
                    "description": "The amount of compute capacity to use for the database virtual machine.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "StorageGb": {
                    "description": "The amount of storage in Gb to allocate for the database.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadSecretName": {
                    "description": "The name of the Kubernetes secret that will be attached to the\nrunning workload from which database connection configuration will be\nsupplied.  This secret name must be referred to in the Kubernetes\nmanifest, .e.g Deployment, for the workload.",
                    "type": "string"
                }
            }
        },
        "v0.AwsRelationalDatabaseInstance": {
            "type": "object",
            "required": [
                "AwsRelationalDatabaseDefinitionID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "AwsRelationalDatabaseDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the EKS cluster.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The ID of the workload instance that the database instance serves.",
                    "type": "integer"
                }
            }
        },
        "v0.ControlPlaneComponent": {
            "type": "object",
            "required": [
                "ControlPlaneInstanceID",
                "Name"
            ],
            "properties": {
                "AdditionalEnvRef": {
                    "description": "The additional env reference to be added to the environment variables of the component",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AdditionalVolumeMounts": {
                    "description": "The additional volume mounts to be added to the deployment spec of the component",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "AdditionalVolumes": {
                    "description": "The additional volumes to be added to the deployment spec of the component",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "BinaryName": {
                    "description": "The binary name of the component",
                    "type": "string"
                },
                "ControlPlaneInstanceID": {
                    "description": "The control plane instance ID that this component belongs to",
                    "type": "integer"
                },
                "Enabled": {
                    "description": "Indicate whether the component is enabled to be deployed. Currently only respected by controllers",
                    "type": "boolean"
                },
                "ImageName": {
                    "description": "The image name of the component",
                    "type": "string"
                },
                "ImagePullSecretName": {
                    "description": "The name of the secret with credentials to pull a private container image",
                    "type": "string"
                },
                "ImageRepo": {
                    "description": "The image repo of the component",
                    "type": "string"
                },
                "ImageTag": {
                    "description": "The image tag of the component",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the component",
                    "type": "string"
                },
                "ServiceAccountName": {
                    "description": "The service account name to use when deploying",
                    "type": "string"
                },
                "ServiceResourceName": {
                    "description": "The service resource name to use when deploying",
                    "type": "string"
                }
            }
        },
        "v0.ControlPlaneDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "AuthEnabled": {
                    "description": "Used to indicate whether the control plane is deployed with auth settings",
                    "type": "boolean"
                },
                "ControlPlaneInstances": {
                    "description": "The associated control plane instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "OnboardParent": {
                    "description": "When instances of this control plane are deployed, Object representing control plane and its parent are\nonboarded as part of deployment, using this we can disable that process and simply spin a new instance with\na clean DB.",
                    "type": "boolean"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.ControlPlaneInstance": {
            "type": "object",
            "required": [
                "ControlPlaneDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "Namespace"
            ],
            "properties": {
                "ApiServerEndpoint": {
                    "description": "Information for connecting to the rest api for the control plane",
                    "type": "string"
                },
                "CACert": {
                    "description": "The CA Cert that is associated with the control plane",
                    "type": "string"
                },
                "Children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "ClientCert": {
                    "description": "The client cert that is associated with the control plane",
                    "type": "string"
                },
                "ClientKey": {
                    "description": "The client Key that is associated with the control plane",
                    "type": "string"
                },
                "ControlPlaneDefinitionID": {
                    "description": "The definition used to configure the control plane instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "CustomComponentInfo": {
                    "description": "Passed in information for the different components of the control plane i.e. controller etc\nWhen not provided, the default values will be used. If provided, they will override the default values.\nDespite being a reference to another database entry, we dont validate association.\nThis allows a user to provide CustomComponentInfo at instance creation time so the reconciler has the info it needs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneComponent"
                    }
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Genesis": {
                    "description": "Indicates whether this is was the first control plane that was spun up in a control plane group",
                    "type": "boolean"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "IsSelf": {
                    "description": "When true, indicates the control plane instance represents the control plane in which it's stored",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "the kubernetes runtime instance the control plane is running on",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Namespace": {
                    "description": "The namespace to deploy the control plane in",
                    "type": "string"
                },
                "Parent": {
                    "$ref": "#/definitions/v0.ControlPlaneInstance"
                },
                "ParentControlPlaneInstanceID": {
                    "description": "These are pointers to the parent and children of the current control plane\nThis is useful to map out the topology between control planes being managed by one another",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.DomainNameDefinition": {
            "type": "object",
            "required": [
                "AdminEmail",
                "Domain",
                "Name",
                "Zone"
            ],
            "properties": {
                "AdminEmail": {
                    "description": "The email address of the domain administrator.",
                    "type": "string"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Domain": {
                    "description": "The base domain upon which the subdomain will be added to give a workload\na unique domain name.",
                    "type": "string"
                },
                "DomainNameInstances": {
                    "description": "The associated domain name instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.DomainNameInstance"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "Zone": {
                    "description": "The name of the zone in which the domain is managed.",
                    "type": "string"
                }
            }
        },
        "v0.DomainNameInstance": {
            "type": "object",
            "required": [
                "DomainNameDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DomainNameDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The cluster where the workload that is using the domain name is running.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload instance this gateway belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.Event": {
            "type": "object",
            "required": [
                "Count",
                "EventTime",
                "LastObservedTime",
                "Reason",
                "ReportingController",
                "Type"
            ],
            "properties": {
                "AttachedObjectReferenceID": {
                    "description": "AttachedObjectReferenceID is a reference to an attached object.\nA foreign key is configured via db migration in cmd/database-migrator/migrations/000010_add_events_foreign_key.go",
                    "type": "integer"
                },
                "Count": {
                    "description": "The number of times this event has occurred.",
                    "type": "integer"
                },
                "EventTime": {
                    "description": "Time when this Event was first observed.",
                    "type": "string"
                },
                "LastObservedTime": {
                    "description": "The time at which the most recent occurrence of this event was recorded.",
                    "type": "string"
                },
                "Note": {
                    "description": "A human-readable description of the status of this operation.",
                    "type": "string"
                },
                "Reason": {
                    "description": "A short, machine understandable string that gives the reason for the event being generated.",
                    "type": "string"
                },
                "ReportingController": {
                    "description": "Name of the controller that emitted this Event.",
                    "type": "string"
                },
                "Type": {
                    "description": "Type of this event (Normal, Warning), new types could be added in the future.",
                    "type": "string"
                }
            }
        },
        "v0.GatewayDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DomainNameDefinitionID": {
                    "description": "The domain name to serve requests for.",
                    "type": "integer"
                },
                "GatewayInstances": {
                    "description": "The associated gateway instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.GatewayInstance"
                    }
                },
                "HttpPorts": {
                    "description": "HttpPorts is a list of HTTP ports to expose to the outside network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.GatewayHttpPort"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ServiceName": {
                    "description": "The kubernetes service to route requests to.",
                    "type": "string"
                },
                "SubDomain": {
                    "description": "An optional subdomain to add to the domain name.",
                    "type": "string"
                },
                "TcpPorts": {
                    "description": "TcpPorts is a list of TCP ports to expose to the outside network.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.GatewayTcpPort"
                    }
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadDefinitionID": {
                    "description": "The workload definition that belongs to this resource.",
                    "type": "integer"
                }
            }
        },
        "v0.GatewayHttpPort": {
            "type": "object",
            "required": [
                "GatewayDefinitionID",
                "Port"
            ],
            "properties": {
                "GatewayDefinitionID": {
                    "description": "GatewayDefinitionID is the definition used to configure the gateway http port.",
                    "type": "integer"
                },
                "HTTPSRedirect": {
                    "description": "Redirect all requests to HTTP port to HTTPS.",
                    "type": "boolean"
                },
                "Path": {
                    "description": "The request path to serve requests for.",
                    "type": "string"
                },
                "Port": {
                    "description": "The HTTP port to expose.",
                    "type": "integer"
                },
                "TLSEnabled": {
                    "description": "Indicates if TLS is enabled.",
                    "type": "boolean"
                }
            }
        },
        "v0.GatewayInstance": {
            "type": "object",
            "required": [
                "GatewayDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GatewayDefinitionID": {
                    "description": "GatewayDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload instance this gateway belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.GatewayTcpPort": {
            "type": "object",
            "required": [
                "GatewayDefinitionID",
                "Port"
            ],
            "properties": {
                "GatewayDefinitionID": {
                    "description": "GatewayDefinitionID is the definition used to configure the gateway tcp port.",
                    "type": "integer"
                },
                "Port": {
                    "description": "The TCP port to expose.",
                    "type": "integer"
                },
                "TLSEnabled": {
                    "description": "Indicates if TLS is enabled.",
                    "type": "boolean"
                }
            }
        },
        "v0.HelmWorkloadDefinition": {
            "type": "object",
            "required": [
                "Chart",
                "Name",
                "Repo"
            ],
            "properties": {
                "AdditionalResources": {
                    "description": "Complete kubernetes resources that will be appended to the provided\nhelm chart.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "Chart": {
                    "description": "The name of the helm chart to use from the helm repo, e.g. wordpress",
                    "type": "string"
                },
                "ChartVersion": {
                    "description": "The version of the helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "HelmWorkloadInstances": {
                    "description": "The associated helm workload instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.HelmWorkloadInstance"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Repo": {
                    "description": "The helm repo URL to pull the helm workload's chart from\ne.g. oci://registry-1.docker.io/bitnamicharts\ne.g. https://grafana.github.io/helm-charts",
                    "type": "string"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "ValuesDocument": {
                    "description": "The helm values that override the defaults from the helm chart.  These\nwill be inherited by each helm workload instance derived from this\ndefinition.  The helm values defined here can be further overridden by\nvalues defined on the helm workload instance.",
                    "type": "string"
                }
            }
        },
        "v0.HelmWorkloadInstance": {
            "type": "object",
            "required": [
                "HelmWorkloadDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name"
            ],
            "properties": {
                "AdditionalResources": {
                    "description": "Complete kubernetes resources that will be appended to the provided\nhelm chart.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "HelmWorkloadDefinitionID": {
                    "description": "The definition used to configure the workload instance.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime to which the helm workload is deployed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ReleaseNamespace": {
                    "description": "Namespace to deploy the helm chart to.",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "ValuesDocument": {
                    "description": "Filepath to the helm values YAML file that provides runtime parameters to\nthe helm chart.",
                    "type": "string"
                }
            }
        },
        "v0.KubernetesRuntimeDefinition": {
            "type": "object",
            "required": [
                "InfraProvider",
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "HighAvailability": {
                    "description": "If true, will be deployed in a highly available configuration across\nmultiple zones within a region and with multiple replicas of Kubernetes\ncontrol plane components.",
                    "type": "boolean"
                },
                "InfraProvider": {
                    "description": "The infrastructure provider running the compute infrastructure for the\ncluster.",
                    "type": "string"
                },
                "InfraProviderAccountName": {
                    "description": "The infra provider account name.  Determines which account the infra is\ndeployed on.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstances": {
                    "description": "The associated kubernetes runtime instances that are deployed from this\ndefinition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "NodeMaximum": {
                    "description": "Sets the maximum number of nodes for the default node group.",
                    "type": "integer"
                },
                "NodeProfile": {
                    "description": "Sets the CPU:memory ration of the machine type for the default node\ngroup.",
                    "type": "string"
                },
                "NodeSize": {
                    "description": "Sets the compute capacity of the machine type for the default node group.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.KubernetesRuntimeInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeDefinitionID",
                "Location",
                "Name"
            ],
            "properties": {
                "APIEndpoint": {
                    "description": "The network endpoint at which to reach the kube-api.",
                    "type": "string"
                },
                "CACertificate": {
                    "description": "The CA certificate used to generate the cert and key if\nself-signed.",
                    "type": "string"
                },
                "Certificate": {
                    "description": "The client certificate to use for auth to the kube-api.",
                    "type": "string"
                },
                "CertificateKey": {
                    "description": "The client certificate key to use for auth to the kube-api.",
                    "type": "string"
                },
                "ConnectionToken": {
                    "description": "Used to authenticate with a OIDC provider that implements auth for a\nKubernetes cluster.  It is an alternative to client cert authenticaion.",
                    "type": "string"
                },
                "ConnectionTokenExpiration": {
                    "description": "ConnectionTokenExpiration is the time when a ConnectionToken will expire.\nUsed to ensure a token will not expire before it can be used.",
                    "type": "string"
                },
                "ControlPlaneInstance": {
                    "description": "The associated control plane instances running on this kubernetes runtime instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DefaultRuntime": {
                    "description": "If true, this Kubernetes cluster will be used for all workloads if not\notherwise assigned.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DnsControllerInstanceId": {
                    "description": "The WorkloadInstanceID of the gateway support service",
                    "type": "integer"
                },
                "ForceDelete": {
                    "description": "If true, delete the runtime even if there are workloads present.",
                    "type": "boolean"
                },
                "GatewayWorkloadInstanceID": {
                    "description": "The WorkloadInstanceID of the gateway support service",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeDefinitionID": {
                    "description": "The kubernetes runtime definition for this instance.",
                    "type": "integer"
                },
                "Location": {
                    "description": "The geographical location for the runtime cluster.  This is an\nabstraction for the cloud provider regions that is mapped into the\nregions used by providers.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "SecretsControllerInstanceId": {
                    "description": "The WorkloadInstanceID of the secrets support service",
                    "type": "integer"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "ThreeportAgentImage": {
                    "description": "An alternate threeport image to use when deploying threeport agent to\nmanaged Kubernetes runtime clusters.  If not supplied, the official image\nwith the correct version will be used.",
                    "type": "string"
                },
                "ThreeportControlPlaneHost": {
                    "description": "If true, the Kubernetes cluster is hosting a threeport control plane and\nany controllers that connect to the kube API will use internal cluster\nDNS rather than the external APIEndpoint.",
                    "type": "boolean"
                },
                "WorkloadInstance": {
                    "description": "The associated workload instances running on this kubernetes runtime.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                }
            }
        },
        "v0.LogBackend": {
            "type": "object",
            "required": [
                "Destination",
                "Name"
            ],
            "properties": {
                "Destination": {
                    "description": "The network address to connect to for storing log messages.",
                    "type": "string"
                },
                "LogStorageDefinitions": {
                    "description": "The storage definitions using the log backend for log storage.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LogStorageDefinition"
                    }
                },
                "Name": {
                    "description": "The unique name of a logging back end.",
                    "type": "string"
                }
            }
        },
        "v0.LogStorageDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "LogBackends": {
                    "description": "The backend storage mechanisms for retaining logs.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LogBackend"
                    }
                },
                "LogStorageInstances": {
                    "description": "The associated log storage instances that are derived from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LogStorageInstance"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.LogStorageInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterID": {
                    "description": "The cluster from which log messages are being aggregated to send to a log\nback end.",
                    "type": "integer"
                },
                "LogStorageDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.LoggingDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "LoggingInstances": {
                    "description": "The associated metrics instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LoggingInstance"
                    }
                },
                "LokiHelmChartVersion": {
                    "description": "The version of the loki helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "LokiHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying loki chart.",
                    "type": "string"
                },
                "LokiHelmWorkloadDefinitionID": {
                    "description": "The loki Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "PromtailHelmChartVersion": {
                    "description": "The version of the promtail helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "PromtailHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying promtail chart.",
                    "type": "string"
                },
                "PromtailHelmWorkloadDefinitionID": {
                    "description": "The promtail Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.LoggingInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "LoggingDefinitionID",
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "LoggingDefinitionID": {
                    "description": "MetricsDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "LokiHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying loki chart.",
                    "type": "string"
                },
                "LokiHelmWorkloadInstanceID": {
                    "description": "The loki Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "PromtailHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying promtail chart.",
                    "type": "string"
                },
                "PromtailHelmWorkloadInstanceID": {
                    "description": "The promtail Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.Meta": {
            "type": "object",
            "properties": {
                "Page": {
                    "description": "current Page",
                    "type": "integer",
                    "example": 1
                },
                "Size": {
                    "description": "Size of the current page (number of returned Object elements)",
                    "type": "integer",
                    "example": 1
                },
                "TotalCount": {
                    "description": "TotalCount of returned Object elements",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v0.MetricsDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubePrometheusStackHelmChartVersion": {
                    "description": "The version of the kube-prometheus-stack helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "KubePrometheusStackHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying kube-prometheus-stack chart.",
                    "type": "string"
                },
                "KubePrometheusStackHelmWorkloadDefinitionID": {
                    "description": "The kube-prometheus-stack Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "MetricsInstances": {
                    "description": "The associated metrics instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.MetricsInstance"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.MetricsInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "MetricsDefinitionID",
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubePrometheusStackHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying kube-prometheus-stack chart.",
                    "type": "string"
                },
                "KubePrometheusStackHelmWorkloadInstanceID": {
                    "description": "The kube-prometheus-stack Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "MetricsDefinitionID": {
                    "description": "MetricsDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.ObservabilityDashboardDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GrafanaHelmChartVersion": {
                    "description": "The version of the grafana helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "GrafanaHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying grafana chart.",
                    "type": "string"
                },
                "GrafanaHelmWorkloadDefinitionID": {
                    "description": "The Grafana Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ObservabilityDashboardInstances": {
                    "description": "The associated observability dashboard instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ObservabilityDashboardInstance"
                    }
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.ObservabilityDashboardInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "Name",
                "ObservabilityDashboardDefinitionID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GrafanaHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying grafana chart.",
                    "type": "string"
                },
                "GrafanaHelmWorkloadInstanceID": {
                    "description": "The Grafana Helm workload definition that belongs to this resource.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "ObservabilityDashboardDefinitionID": {
                    "description": "ObservabilityDashboardDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.ObservabilityStackDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GrafanaHelmChartVersion": {
                    "description": "The version of the grafana helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "GrafanaHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying grafana chart.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubePrometheusStackHelmChartVersion": {
                    "description": "The version of the kube-prometheus-stack helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "KubePrometheusStackHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying kube-prometheus-stack chart.",
                    "type": "string"
                },
                "LoggingDefinitionID": {
                    "description": "Logging\nThe logging definition that belongs to this resource.",
                    "type": "integer"
                },
                "LokiHelmChartVersion": {
                    "description": "The version of the loki helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "LokiHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying loki chart.",
                    "type": "string"
                },
                "MetricsDefinitionID": {
                    "description": "Metrics\nThe metrics definition that belongs to this resource.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ObservabilityDashboardDefinitionID": {
                    "description": "Dashboard\nThe observability dashboard definition that belongs to this resource.",
                    "type": "integer"
                },
                "ObservabilityStackInstances": {
                    "description": "The associated observability stack instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ObservabilityStackInstance"
                    }
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "PromtailHelmChartVersion": {
                    "description": "The version of the promtail helm chart to use from the helm repo, e.g. 1.2.3",
                    "type": "string"
                },
                "PromtailHelmValuesDocument": {
                    "description": "Optional Helm workload definition values that can be provided to configure the\nunderlying promtail chart.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.ObservabilityStackInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "Name",
                "ObservabilityStackDefinitionID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GrafanaHelmValuesDocument": {
                    "description": "Optional Helm workload instance values that can be provided to configure the\nunderlying grafana chart.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubePrometheusStackHelmValuesDocument": {
                    "description": "Optional Helm workload instance values that can be provided to configure the\nunderlying kube-prometheus-stack chart.",
                    "type": "string"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "LoggingEnabled": {
                    "description": "If true, logging will be enabled for the observability stack.",
                    "type": "boolean"
                },
                "LoggingInstanceID": {
                    "description": "Logging\nThe logging instance that belongs to this resource.",
                    "type": "integer"
                },
                "LokiHelmValuesDocument": {
                    "description": "Optional Helm workload instance values that can be provided to configure the\nunderlying loki chart.",
                    "type": "string"
                },
                "MetricsEnabled": {
                    "description": "If true, metrics will be enabled for the observability stack.",
                    "type": "boolean"
                },
                "MetricsInstanceID": {
                    "description": "Metrics\nThe metrics instance that belongs to this resource.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "ObservabilityDashboardInstanceID": {
                    "description": "Dashboard\nThe observability dashboard instance that belongs to this resource.",
                    "type": "integer"
                },
                "ObservabilityStackDefinitionID": {
                    "description": "ObservabilityStackDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "PromtailHelmValuesDocument": {
                    "description": "Optional Helm workload Instancehat can be provided to configure the\nunderlying promtail chart.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.Profile": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Name": {
                    "description": "The unique name of a profile",
                    "type": "string"
                }
            }
        },
        "v0.Response": {
            "description": "Meta info with ObjectType array of Data of Object",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains array of returned Object elements",
                    "type": "array",
                    "items": {}
                },
                "Meta": {
                    "description": "Meta contains PageRequestParams (current page and size of current page) and TotalCount (number of returned Object elements)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Meta"
                        }
                    ]
                },
                "Status": {
                    "description": "Status represents an error that occurred while handling a request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Status"
                        }
                    ]
                },
                "Type": {
                    "description": "Type contains ObjectType of returned Data elements",
                    "type": "string",
                    "example": "Transfer"
                }
            }
        },
        "v0.SecretDefinition": {
            "type": "object",
            "required": [
                "Data",
                "Name"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account ID, if the provider is AWS.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "Data": {
                    "description": "The secret value to be stored in the provider.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "SecretInstances": {
                    "description": "The associated secret instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.SecretInstance"
                    }
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.SecretInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "Name",
                "SecretDefinitionID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "HelmWorkloadInstanceID": {
                    "description": "The helm workload instance that the secret is associated with.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime to which the helm workload is deployed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "SecretDefinitionID": {
                    "description": "The SecretDefinition that the secret instance is derived from.",
                    "type": "integer"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload instance that the secret is associated with.",
                    "type": "integer"
                }
            }
        },
        "v0.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The HTTP response status code, e.g. 200 | 201 | 500",
                    "type": "integer",
                    "example": 200
                },
                "error": {
                    "description": "The response error message if applicable, defaults to \"\"",
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "description": "The HTTP response status code message, e.g. OK | Created | Internal Server Error",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "v0.TerraformDefinition": {
            "type": "object",
            "required": [
                "ConfigDir",
                "Name"
            ],
            "properties": {
                "ConfigDir": {
                    "description": "Path to the directory containing terraform configs with '.tf' file\nextension.",
                    "type": "string"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TerraformInstances": {
                    "description": "The associated terraform instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.TerraformInstance"
                    }
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.TerraformInstance": {
            "type": "object",
            "required": [
                "AwsAccountID",
                "Name",
                "TerraformDefinitionID"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account in which the resources will be provisioned.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Outputs": {
                    "description": "The outputs defined in the terraform config that are collected from\nTerraform.  The terraform outputs are stored in JSON format but is a\nstring typt to support encryption.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "StateDocument": {
                    "description": "The terraform state json object that stores the inventory of\ninfrastructure being managed by terraform.  The terraform state is stored\nin JSON format but is a string type to support encryption.",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "TerraformDefinitionID": {
                    "description": "The definition used to configure the terraform resources.",
                    "type": "integer"
                },
                "VarsDocument": {
                    "description": "The .tfvars document that contains runtime parameters for an instance of\nsome terraform resources.",
                    "type": "string"
                }
            }
        },
        "v0.Tier": {
            "type": "object",
            "required": [
                "Criticality",
                "Name"
            ],
            "properties": {
                "Criticality": {
                    "description": "The relative rank of criticality between tiers.  The higher the number,\nthe greater the criticality.  For example, a development tier could have\na criticality value of 10 while production could be 100.  Access control\ncan then use this criticality value to determine user access.",
                    "type": "integer"
                },
                "Name": {
                    "description": "The unique name of a tier.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadDefinition": {
            "type": "object",
            "required": [
                "Name",
                "YAMLDocument"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadInstances": {
                    "description": "The associated workload instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                },
                "WorkloadResourceDefinitions": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                    }
                },
                "YAMLDocument": {
                    "description": "The yaml manifests that define the workload configuration.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadEvent": {
            "type": "object",
            "required": [
                "Message",
                "Reason",
                "RuntimeEventUID",
                "Timestamp",
                "Type"
            ],
            "properties": {
                "HelmWorkloadInstanceID": {
                    "description": "The related helm workload instance.",
                    "type": "integer"
                },
                "Message": {
                    "description": "The message associated with the event.",
                    "type": "string"
                },
                "Reason": {
                    "description": "The reason for the event.",
                    "type": "string"
                },
                "RuntimeEventUID": {
                    "description": "A unique ID for de-duplicating purposes.  It is one of two thing:\n* The Kubernetes Event resource UID: when the WorkloadEvent is derived\ndirectly from a Kubernetes Event.\n* The workload controller ID: when the WorkloadEvent is emitted by the\nworkload controller.",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "The timestamp for the event in the kubernetes runtime.",
                    "type": "string"
                },
                "Type": {
                    "description": "The type of event that occurred in Kubernetes.",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The related workload instance.",
                    "type": "integer"
                },
                "WorkloadResourceInstanceID": {
                    "description": "The related workload resource instance.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Events": {
                    "description": "All events generated for the workload instance that aren't related to a\nparticular workload resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadEvent"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime to which the workload is deployed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The latest status of a workload instance.",
                    "type": "string"
                },
                "WorkloadDefinitionID": {
                    "description": "The definition used to configure the workload instance.",
                    "type": "integer"
                },
                "WorkloadResourceInstances": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceInstance"
                    }
                }
            }
        },
        "v0.WorkloadResourceDefinition": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "WorkloadDefinitionID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadResourceInstance": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadInstanceID"
            ],
            "properties": {
                "Events": {
                    "description": "All events that have occured related to this object.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadEvent"
                    }
                },
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.  This field is a superset of\nWorkloadResourceDefinition.JSONDefinition in that it has namespace\nmanagement and other configuration - such as resource allocation\nmanagement - added.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "LastOperation": {
                    "description": "The most recent operation performed on a Kubernete resource in the\nkubernetes runtime.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by workload controller.",
                    "type": "boolean"
                },
                "RuntimeDefinition": {
                    "description": "The JSON definition of a Kubernetes resource as stored in etcd in the\nkubernetes runtime.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ScheduledForDeletion": {
                    "description": "Whether another controller has scheduled this resource for deletion",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.6.0-dev",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Threeport RESTful API",
	Description:      "Core API server for the Threeport application orchestration control plane.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
