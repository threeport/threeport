// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://threeport.io/api-tos/",
        "contact": {
            "name": "Threeport Admin",
            "url": "https://threeport.io/support",
            "email": "support@threeport.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/attached-object-references/versions": {
            "get": {
                "description": "Get the supported API versions for attached object references.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAttachedObjectReferenceVersions gets the supported versions for the attached object reference API.",
                "operationId": "attachedObjectReference-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-accounts/versions": {
            "get": {
                "description": "Get the supported API versions for aws accounts.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsAccountVersions gets the supported versions for the aws account API.",
                "operationId": "awsAccount-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-kubernetes-runtime-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks kubernetes runtime definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksKubernetesRuntimeDefinitionVersions gets the supported versions for the aws eks kubernetes runtime definition API.",
                "operationId": "awsEksKubernetesRuntimeDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-kubernetes-runtime-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks kubernetes runtime instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksKubernetesRuntimeInstanceVersions gets the supported versions for the aws eks kubernetes runtime instance API.",
                "operationId": "awsEksKubernetesRuntimeInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-object-storage-bucket-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws object storage bucket definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsObjectStorageBucketDefinitionVersions gets the supported versions for the aws object storage bucket definition API.",
                "operationId": "awsObjectStorageBucketDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-object-storage-bucket-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws object storage bucket instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsObjectStorageBucketInstanceVersions gets the supported versions for the aws object storage bucket instance API.",
                "operationId": "awsObjectStorageBucketInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseDefinitionVersions gets the supported versions for the aws relational database definition API.",
                "operationId": "awsRelationalDatabaseDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseInstanceVersions gets the supported versions for the aws relational database instance API.",
                "operationId": "awsRelationalDatabaseInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/control-plane-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for control plane definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetControlPlaneDefinitionVersions gets the supported versions for the control plane definition API.",
                "operationId": "controlPlaneDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/control-plane-instances/versions": {
            "get": {
                "description": "Get the supported API versions for control plane instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetControlPlaneInstanceVersions gets the supported versions for the control plane instance API.",
                "operationId": "controlPlaneInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for domain name definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameDefinitionVersions gets the supported versions for the domain name definition API.",
                "operationId": "domainNameDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-instances/versions": {
            "get": {
                "description": "Get the supported API versions for domain name instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameInstanceVersions gets the supported versions for the domain name instance API.",
                "operationId": "domainNameInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyDefinitionVersions gets the supported versions for the forward proxy definition API.",
                "operationId": "forwardProxyDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-instances/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyInstanceVersions gets the supported versions for the forward proxy instance API.",
                "operationId": "forwardProxyInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/gateway-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for gateway definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayDefinitionVersions gets the supported versions for the gateway definition API.",
                "operationId": "gatewayDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/gateway-instances/versions": {
            "get": {
                "description": "Get the supported API versions for gateway instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetGatewayInstanceVersions gets the supported versions for the gateway instance API.",
                "operationId": "gatewayInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/kubernetes-runtime-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for kubernetes runtime definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetKubernetesRuntimeDefinitionVersions gets the supported versions for the kubernetes runtime definition API.",
                "operationId": "kubernetesRuntimeDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/kubernetes-runtime-instances/versions": {
            "get": {
                "description": "Get the supported API versions for kubernetes runtime instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetKubernetesRuntimeInstanceVersions gets the supported versions for the kubernetes runtime instance API.",
                "operationId": "kubernetesRuntimeInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-backends/versions": {
            "get": {
                "description": "Get the supported API versions for log backends.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogBackendVersions gets the supported versions for the log backend API.",
                "operationId": "logBackend-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for log storage definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageDefinitionVersions gets the supported versions for the log storage definition API.",
                "operationId": "logStorageDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-instances/versions": {
            "get": {
                "description": "Get the supported API versions for log storage instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageInstanceVersions gets the supported versions for the log storage instance API.",
                "operationId": "logStorageInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/profiles/versions": {
            "get": {
                "description": "Get the supported API versions for profiles.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetProfileVersions gets the supported versions for the profile API.",
                "operationId": "profile-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/tiers/versions": {
            "get": {
                "description": "Get the supported API versions for tiers.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTierVersions gets the supported versions for the tier API.",
                "operationId": "tier-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/v0/attached-object-references": {
            "get": {
                "description": "Get all attached object references from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all attached object references.",
                "operationId": "get-attachedObjectReferences",
                "parameters": [
                    {
                        "type": "string",
                        "description": "attached object reference search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new attached object reference to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new attached object reference.",
                "operationId": "add-attachedObjectReference",
                "parameters": [
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/attached-object-references/{id}": {
            "get": {
                "description": "Get a particular attached object reference from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a attached object reference.",
                "operationId": "get-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a attached object reference in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating attached object reference objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing attached object reference by replacing the entire object.",
                "operationId": "replace-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a attached object reference by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a attached object reference.",
                "operationId": "delete-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a attached object reference in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating attached object reference objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing attached object reference.",
                "operationId": "update-attachedObjectReference",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AttachedObjectReference object",
                        "name": "attachedObjectReference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AttachedObjectReference"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts": {
            "get": {
                "description": "Get all aws accounts from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws accounts.",
                "operationId": "get-awsAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws account search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws account to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws account.",
                "operationId": "add-awsAccount",
                "parameters": [
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts/{id}": {
            "get": {
                "description": "Get a particular aws account from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws account.",
                "operationId": "get-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws account in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws account by replacing the entire object.",
                "operationId": "replace-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws account by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws account.",
                "operationId": "delete-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws account in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws account.",
                "operationId": "update-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-definitions": {
            "get": {
                "description": "Get all aws eks kubernetes runtime definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks kubernetes runtime definitions.",
                "operationId": "get-awsEksKubernetesRuntimeDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks kubernetes runtime definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks kubernetes runtime definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks kubernetes runtime definition.",
                "operationId": "add-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-definitions/{id}": {
            "get": {
                "description": "Get a particular aws eks kubernetes runtime definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks kubernetes runtime definition.",
                "operationId": "get-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks kubernetes runtime definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks kubernetes runtime definition by replacing the entire object.",
                "operationId": "replace-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks kubernetes runtime definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks kubernetes runtime definition.",
                "operationId": "delete-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks kubernetes runtime definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks kubernetes runtime definition.",
                "operationId": "update-awsEksKubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeDefinition object",
                        "name": "awsEksKubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-instances": {
            "get": {
                "description": "Get all aws eks kubernetes runtime instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks kubernetes runtime instances.",
                "operationId": "get-awsEksKubernetesRuntimeInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks kubernetes runtime instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks kubernetes runtime instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks kubernetes runtime instance.",
                "operationId": "add-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-kubernetes-runtime-instances/{id}": {
            "get": {
                "description": "Get a particular aws eks kubernetes runtime instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks kubernetes runtime instance.",
                "operationId": "get-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks kubernetes runtime instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks kubernetes runtime instance by replacing the entire object.",
                "operationId": "replace-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks kubernetes runtime instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks kubernetes runtime instance.",
                "operationId": "delete-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks kubernetes runtime instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks kubernetes runtime instance.",
                "operationId": "update-awsEksKubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksKubernetesRuntimeInstance object",
                        "name": "awsEksKubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-definitions": {
            "get": {
                "description": "Get all aws object storage bucket definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws object storage bucket definitions.",
                "operationId": "get-awsObjectStorageBucketDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws object storage bucket definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws object storage bucket definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws object storage bucket definition.",
                "operationId": "add-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-definitions/{id}": {
            "get": {
                "description": "Get a particular aws object storage bucket definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws object storage bucket definition.",
                "operationId": "get-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws object storage bucket definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws object storage bucket definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws object storage bucket definition by replacing the entire object.",
                "operationId": "replace-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws object storage bucket definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws object storage bucket definition.",
                "operationId": "delete-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws object storage bucket definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws object storage bucket definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws object storage bucket definition.",
                "operationId": "update-awsObjectStorageBucketDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketDefinition object",
                        "name": "awsObjectStorageBucketDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-instances": {
            "get": {
                "description": "Get all aws object storage bucket instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws object storage bucket instances.",
                "operationId": "get-awsObjectStorageBucketInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws object storage bucket instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws object storage bucket instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws object storage bucket instance.",
                "operationId": "add-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-object-storage-bucket-instances/{id}": {
            "get": {
                "description": "Get a particular aws object storage bucket instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws object storage bucket instance.",
                "operationId": "get-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws object storage bucket instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws object storage bucket instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws object storage bucket instance by replacing the entire object.",
                "operationId": "replace-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws object storage bucket instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws object storage bucket instance.",
                "operationId": "delete-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws object storage bucket instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws object storage bucket instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws object storage bucket instance.",
                "operationId": "update-awsObjectStorageBucketInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsObjectStorageBucketInstance object",
                        "name": "awsObjectStorageBucketInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsObjectStorageBucketInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions": {
            "get": {
                "description": "Get all aws relational database definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database definitions.",
                "operationId": "get-awsRelationalDatabaseDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database definition.",
                "operationId": "add-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions/{id}": {
            "get": {
                "description": "Get a particular aws relational database definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database definition.",
                "operationId": "get-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database definition by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database definition.",
                "operationId": "delete-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database definition.",
                "operationId": "update-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances": {
            "get": {
                "description": "Get all aws relational database instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database instances.",
                "operationId": "get-awsRelationalDatabaseInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database instance.",
                "operationId": "add-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances/{id}": {
            "get": {
                "description": "Get a particular aws relational database instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database instance.",
                "operationId": "get-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database instance by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database instance.",
                "operationId": "delete-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database instance.",
                "operationId": "update-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-definitions": {
            "get": {
                "description": "Get all control plane definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all control plane definitions.",
                "operationId": "get-controlPlaneDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "control plane definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new control plane definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new control plane definition.",
                "operationId": "add-controlPlaneDefinition",
                "parameters": [
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-definitions/{id}": {
            "get": {
                "description": "Get a particular control plane definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a control plane definition.",
                "operationId": "get-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a control plane definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating control plane definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing control plane definition by replacing the entire object.",
                "operationId": "replace-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a control plane definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a control plane definition.",
                "operationId": "delete-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a control plane definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating control plane definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing control plane definition.",
                "operationId": "update-controlPlaneDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneDefinition object",
                        "name": "controlPlaneDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-instances": {
            "get": {
                "description": "Get all control plane instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all control plane instances.",
                "operationId": "get-controlPlaneInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "control plane instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new control plane instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new control plane instance.",
                "operationId": "add-controlPlaneInstance",
                "parameters": [
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/control-plane-instances/{id}": {
            "get": {
                "description": "Get a particular control plane instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a control plane instance.",
                "operationId": "get-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a control plane instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating control plane instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing control plane instance by replacing the entire object.",
                "operationId": "replace-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a control plane instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a control plane instance.",
                "operationId": "delete-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a control plane instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating control plane instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing control plane instance.",
                "operationId": "update-controlPlaneInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ControlPlaneInstance object",
                        "name": "controlPlaneInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ControlPlaneInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions": {
            "get": {
                "description": "Get all domain name definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name definitions.",
                "operationId": "get-domainNameDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name definition.",
                "operationId": "add-domainNameDefinition",
                "parameters": [
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions/{id}": {
            "get": {
                "description": "Get a particular domain name definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name definition.",
                "operationId": "get-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name definition by replacing the entire object.",
                "operationId": "replace-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name definition.",
                "operationId": "delete-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name definition.",
                "operationId": "update-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances": {
            "get": {
                "description": "Get all domain name instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name instances.",
                "operationId": "get-domainNameInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name instance.",
                "operationId": "add-domainNameInstance",
                "parameters": [
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances/{id}": {
            "get": {
                "description": "Get a particular domain name instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name instance.",
                "operationId": "get-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name instance by replacing the entire object.",
                "operationId": "replace-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name instance.",
                "operationId": "delete-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name instance.",
                "operationId": "update-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-definitions": {
            "get": {
                "description": "Get all forward proxy definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all forward proxy definitions.",
                "operationId": "get-forwardProxyDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "forward proxy definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new forward proxy definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new forward proxy definition.",
                "operationId": "add-forwardProxyDefinition",
                "parameters": [
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-definitions/{id}": {
            "get": {
                "description": "Get a particular forward proxy definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a forward proxy definition.",
                "operationId": "get-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a forward proxy definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating forward proxy definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing forward proxy definition by replacing the entire object.",
                "operationId": "replace-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a forward proxy definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a forward proxy definition.",
                "operationId": "delete-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a forward proxy definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating forward proxy definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing forward proxy definition.",
                "operationId": "update-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-instances": {
            "get": {
                "description": "Get all forward proxy instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all forward proxy instances.",
                "operationId": "get-forwardProxyInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "forward proxy instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new forward proxy instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new forward proxy instance.",
                "operationId": "add-forwardProxyInstance",
                "parameters": [
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-instances/{id}": {
            "get": {
                "description": "Get a particular forward proxy instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a forward proxy instance.",
                "operationId": "get-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a forward proxy instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating forward proxy instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing forward proxy instance by replacing the entire object.",
                "operationId": "replace-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a forward proxy instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a forward proxy instance.",
                "operationId": "delete-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a forward proxy instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating forward proxy instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing forward proxy instance.",
                "operationId": "update-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-definitions": {
            "get": {
                "description": "Get all gateway definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway definitions.",
                "operationId": "get-gatewayDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway definition.",
                "operationId": "add-gatewayDefinition",
                "parameters": [
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-definitions/{id}": {
            "get": {
                "description": "Get a particular gateway definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway definition.",
                "operationId": "get-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway definition by replacing the entire object.",
                "operationId": "replace-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway definition.",
                "operationId": "delete-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway definition.",
                "operationId": "update-gatewayDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayDefinition object",
                        "name": "gatewayDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-instances": {
            "get": {
                "description": "Get all gateway instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all gateway instances.",
                "operationId": "get-gatewayInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new gateway instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new gateway instance.",
                "operationId": "add-gatewayInstance",
                "parameters": [
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/gateway-instances/{id}": {
            "get": {
                "description": "Get a particular gateway instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a gateway instance.",
                "operationId": "get-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a gateway instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating gateway instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing gateway instance by replacing the entire object.",
                "operationId": "replace-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a gateway instance.",
                "operationId": "delete-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a gateway instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating gateway instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing gateway instance.",
                "operationId": "update-gatewayInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "GatewayInstance object",
                        "name": "gatewayInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.GatewayInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-definitions": {
            "get": {
                "description": "Get all kubernetes runtime definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all kubernetes runtime definitions.",
                "operationId": "get-kubernetesRuntimeDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kubernetes runtime definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new kubernetes runtime definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new kubernetes runtime definition.",
                "operationId": "add-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-definitions/{id}": {
            "get": {
                "description": "Get a particular kubernetes runtime definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a kubernetes runtime definition.",
                "operationId": "get-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a kubernetes runtime definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing kubernetes runtime definition by replacing the entire object.",
                "operationId": "replace-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a kubernetes runtime definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a kubernetes runtime definition.",
                "operationId": "delete-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a kubernetes runtime definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating kubernetes runtime definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing kubernetes runtime definition.",
                "operationId": "update-kubernetesRuntimeDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeDefinition object",
                        "name": "kubernetesRuntimeDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-instances": {
            "get": {
                "description": "Get all kubernetes runtime instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all kubernetes runtime instances.",
                "operationId": "get-kubernetesRuntimeInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "kubernetes runtime instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new kubernetes runtime instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new kubernetes runtime instance.",
                "operationId": "add-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/kubernetes-runtime-instances/{id}": {
            "get": {
                "description": "Get a particular kubernetes runtime instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a kubernetes runtime instance.",
                "operationId": "get-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a kubernetes runtime instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing kubernetes runtime instance by replacing the entire object.",
                "operationId": "replace-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a kubernetes runtime instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a kubernetes runtime instance.",
                "operationId": "delete-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a kubernetes runtime instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating kubernetes runtime instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing kubernetes runtime instance.",
                "operationId": "update-kubernetesRuntimeInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "KubernetesRuntimeInstance object",
                        "name": "kubernetesRuntimeInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends": {
            "get": {
                "description": "Get all log backends from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log backends.",
                "operationId": "get-logBackends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log backend search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log backend to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log backend.",
                "operationId": "add-logBackend",
                "parameters": [
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends/{id}": {
            "get": {
                "description": "Get a particular log backend from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log backend.",
                "operationId": "get-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log backend in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log backend by replacing the entire object.",
                "operationId": "replace-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log backend by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log backend.",
                "operationId": "delete-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log backend in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log backend.",
                "operationId": "update-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions": {
            "get": {
                "description": "Get all log storage definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage definitions.",
                "operationId": "get-logStorageDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage definition.",
                "operationId": "add-logStorageDefinition",
                "parameters": [
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions/{id}": {
            "get": {
                "description": "Get a particular log storage definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage definition.",
                "operationId": "get-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage definition by replacing the entire object.",
                "operationId": "replace-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage definition.",
                "operationId": "delete-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage definition.",
                "operationId": "update-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances": {
            "get": {
                "description": "Get all log storage instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage instances.",
                "operationId": "get-logStorageInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage instance.",
                "operationId": "add-logStorageInstance",
                "parameters": [
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances/{id}": {
            "get": {
                "description": "Get a particular log storage instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage instance.",
                "operationId": "get-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage instance by replacing the entire object.",
                "operationId": "replace-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage instance.",
                "operationId": "delete-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage instance.",
                "operationId": "update-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles": {
            "get": {
                "description": "Get all profiles from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all profiles.",
                "operationId": "get-profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new profile to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new profile.",
                "operationId": "add-profile",
                "parameters": [
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles/{id}": {
            "get": {
                "description": "Get a particular profile from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a profile.",
                "operationId": "get-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a profile in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing profile by replacing the entire object.",
                "operationId": "replace-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a profile by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a profile.",
                "operationId": "delete-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a profile in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing profile.",
                "operationId": "update-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers": {
            "get": {
                "description": "Get all tiers from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all tiers.",
                "operationId": "get-tiers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tier search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tier to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new tier.",
                "operationId": "add-tier",
                "parameters": [
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers/{id}": {
            "get": {
                "description": "Get a particular tier from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a tier.",
                "operationId": "get-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a tier in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing tier by replacing the entire object.",
                "operationId": "replace-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tier by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a tier.",
                "operationId": "delete-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a tier in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing tier.",
                "operationId": "update-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions": {
            "get": {
                "description": "Get all workload definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload definitions.",
                "operationId": "get-workloadDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload definition.",
                "operationId": "add-workloadDefinition",
                "parameters": [
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions/{id}": {
            "get": {
                "description": "Get a particular workload definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload definition.",
                "operationId": "get-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload definition by replacing the entire object.",
                "operationId": "replace-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload definition.",
                "operationId": "delete-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload definition.",
                "operationId": "update-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-event-sets/{workloadInstanceID}": {
            "get": {
                "description": "Gets a set of workload events by workload instance ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload event set by workload instance ID.",
                "operationId": "get-workloadEventSet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "workloadInstanceID",
                        "name": "workloadInstanceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a set of workload events by workload instance ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload event set by workload instance ID.",
                "operationId": "delete-workloadEventSet",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "workloadInstanceID",
                        "name": "workloadInstanceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-events": {
            "get": {
                "description": "Get all workload events from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload events.",
                "operationId": "get-workloadEvents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload event search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload event to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload event.",
                "operationId": "add-workloadEvent",
                "parameters": [
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-events/{id}": {
            "get": {
                "description": "Get a particular workload event from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload event.",
                "operationId": "get-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload event in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload event by replacing the entire object.",
                "operationId": "replace-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload event by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload event.",
                "operationId": "delete-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload event in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload event objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload event.",
                "operationId": "update-workloadEvent",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadEvent object",
                        "name": "workloadEvent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadEvent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances": {
            "get": {
                "description": "Get all workload instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload instances.",
                "operationId": "get-workloadInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload instance.",
                "operationId": "add-workloadInstance",
                "parameters": [
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances/{id}": {
            "get": {
                "description": "Get a particular workload instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload instance.",
                "operationId": "get-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload instance by replacing the entire object.",
                "operationId": "replace-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload instance.",
                "operationId": "delete-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload instance.",
                "operationId": "update-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definition-sets": {
            "post": {
                "description": "Add a set of new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new set of workload resource definitions.",
                "operationId": "add-workloadResourceDefinitions",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object array",
                        "name": "workloadResourceDefinitions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions": {
            "get": {
                "description": "Get all workload resource definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource definitions.",
                "operationId": "get-workloadResourceDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource definition.",
                "operationId": "add-workloadResourceDefinition",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions/{id}": {
            "get": {
                "description": "Get a particular workload resource definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource definition.",
                "operationId": "get-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource definition by replacing the entire object.",
                "operationId": "replace-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource definition by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource definition.",
                "operationId": "delete-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource definition.",
                "operationId": "update-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances": {
            "get": {
                "description": "Get all workload resource instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource instances.",
                "operationId": "get-workloadResourceInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource instance.",
                "operationId": "add-workloadResourceInstance",
                "parameters": [
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances/{id}": {
            "get": {
                "description": "Get a particular workload resource instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource instance.",
                "operationId": "get-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource instance by replacing the entire object.",
                "operationId": "replace-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource instance by ID from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource instance.",
                "operationId": "delete-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource instance.",
                "operationId": "update-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get a version of REST API.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets an REST API version.",
                "operationId": "get-api-version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/version.RESTAPIVersion"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/version.RESTAPIVersion"
                        }
                    }
                }
            }
        },
        "/workload-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadDefinitionVersions gets the supported versions for the workload definition API.",
                "operationId": "workloadDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-events/versions": {
            "get": {
                "description": "Get the supported API versions for workload events.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadEventVersions gets the supported versions for the workload event API.",
                "operationId": "workloadEvent-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadInstanceVersions gets the supported versions for the workload instance API.",
                "operationId": "workloadInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceDefinitionVersions gets the supported versions for the workload resource definition API.",
                "operationId": "workloadResourceDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceInstanceVersions gets the supported versions for the workload resource instance API.",
                "operationId": "workloadResourceInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RESTAPIVersions": {
            "type": "object",
            "required": [
                "API",
                "Versions"
            ],
            "properties": {
                "API": {
                    "description": "Required.  REST API resource name.",
                    "type": "string"
                },
                "Versions": {
                    "description": "Required.  REST API resource versions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v0.AttachedObjectReference": {
            "type": "object",
            "required": [
                "WorkloadInstanceID"
            ],
            "properties": {
                "ObjectID": {
                    "type": "integer"
                },
                "Type": {
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsAccount": {
            "type": "object",
            "required": [
                "AccountID",
                "DefaultRegion",
                "Name"
            ],
            "properties": {
                "AccessKeyID": {
                    "description": "The access key ID credentials for the AWS account.",
                    "type": "string"
                },
                "AccountID": {
                    "description": "The account ID for the AWS account.",
                    "type": "string"
                },
                "AwsEksKubernetesRuntimeDefinitions": {
                    "description": "The cluster instances deployed in this AWS account.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeDefinition"
                    }
                },
                "DefaultAccount": {
                    "description": "If true is the AWS Account used if none specified in a definition.",
                    "type": "boolean"
                },
                "DefaultRegion": {
                    "description": "The region to use for AWS managed services if not specified.",
                    "type": "string"
                },
                "ExternalId": {
                    "description": "The ExternalId to use when assuming a RoleArn for the AWS account. This is\nautomatically generated by the API server if RoleArn is set.",
                    "type": "string"
                },
                "Name": {
                    "description": "The unique name of an AWS account.",
                    "type": "string"
                },
                "RoleArn": {
                    "description": "The RoleArn to assume for the AWS account.",
                    "type": "string"
                },
                "SecretAccessKey": {
                    "description": "The secret key credentials for the AWS account.",
                    "type": "string"
                }
            }
        },
        "v0.AwsEksKubernetesRuntimeDefinition": {
            "type": "object",
            "required": [
                "AWSAccountID",
                "DefaultNodeGroupInitialSize",
                "DefaultNodeGroupInstanceType",
                "DefaultNodeGroupMaximumSize",
                "DefaultNodeGroupMinimumSize",
                "KubernetesRuntimeDefinitionID",
                "Name",
                "ZoneCount"
            ],
            "properties": {
                "AWSAccountID": {
                    "description": "The AWS account in which the EKS cluster is provisioned.",
                    "type": "integer"
                },
                "AwsEksKubernetesRuntimeInstances": {
                    "description": "The AWS EKS kubernetes runtime instances derived from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AwsEksKubernetesRuntimeInstance"
                    }
                },
                "DefaultNodeGroupInitialSize": {
                    "description": "The number of nodes in the default initial node group.",
                    "type": "integer"
                },
                "DefaultNodeGroupInstanceType": {
                    "description": "The AWS instance type for the default initial node group.",
                    "type": "string"
                },
                "DefaultNodeGroupMaximumSize": {
                    "description": "The maximum number of nodes the default initial node group should have.",
                    "type": "integer"
                },
                "DefaultNodeGroupMinimumSize": {
                    "description": "The minimum number of nodes the default initial node group should have.",
                    "type": "integer"
                },
                "KubernetesRuntimeDefinitionID": {
                    "description": "The kubernetes runtime definition for an EKS cluster in AWS.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "ZoneCount": {
                    "description": "The number of zones the cluster should span for availability.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsEksKubernetesRuntimeInstance": {
            "type": "object",
            "required": [
                "AwsEksKubernetesRuntimeDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name"
            ],
            "properties": {
                "AwsEksKubernetesRuntimeDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime instance associated with the AWS EKS cluster.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Region": {
                    "description": "The AWS Region in which the cluster is provisioned.  This field is\nstored in the instance (as well as definition) since a change to the\ndefinition will not move a cluster.",
                    "type": "string"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the EKS cluster.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.AwsObjectStorageBucketDefinition": {
            "type": "object",
            "required": [
                "AwsAccountID",
                "Name",
                "WorkloadBucketEnvVar",
                "WorkloadServiceAccountName"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "PublicReadAccess": {
                    "description": "When true, objects in the bucket are publicly readable by anyone - for use\ncases such as storing static assets for public websites.  When false,\nonly the workload attached to an AWSObjectStorageBucketInstance and the AWS users\non the account may access the bucket for read or write.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadBucketEnvVar": {
                    "description": "The environment variable key that the workload is expecting to reference\nfor the name of the S3 bucket managed by threeport.",
                    "type": "string"
                },
                "WorkloadServiceAccountName": {
                    "description": "The name of the Kubernetes service account for the workload that will\naccess the S3 bucket.  Used to provide secure access using IAM roles for\nservice accounts (IRSA).",
                    "type": "string"
                }
            }
        },
        "v0.AwsObjectStorageBucketInstance": {
            "type": "object",
            "required": [
                "AwsObjectStorageBucketDefinitionID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "AwsObjectStorageBucketDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the S3 bucket.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The ID of the workload instance that uses the S3 bucket.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsRelationalDatabaseDefinition": {
            "type": "object",
            "required": [
                "AwsAccountID",
                "DatabaseName",
                "DatabasePort",
                "Engine",
                "EngineVersion",
                "MachineSize",
                "Name",
                "StorageGb",
                "WorkloadSecretName"
            ],
            "properties": {
                "AwsAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "BackupDays": {
                    "description": "The number of days to retain database backups for.",
                    "type": "integer"
                },
                "DatabaseName": {
                    "description": "The name of the database that will be used by the client workload.",
                    "type": "string"
                },
                "DatabasePort": {
                    "description": "The port to use to connect to the database.",
                    "type": "integer"
                },
                "Engine": {
                    "description": "The database engine for the instance.  One of:\n* mysql\n* postgres\n* mariadb",
                    "type": "string"
                },
                "EngineVersion": {
                    "description": "The version of the database engine for the instance.",
                    "type": "string"
                },
                "MachineSize": {
                    "description": "The amount of compute capacity to use for the database virtual machine.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "StorageGb": {
                    "description": "The amount of storage in Gb to allocate for the database.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadSecretName": {
                    "description": "The name of the Kubernetes secret that will be attached to the\nrunning workload from which database connection configuration will be\nsupplied.  This secret name must be referred to in the Kubernetes\nmanifest, .e.g Deployment, for the workload.",
                    "type": "string"
                }
            }
        },
        "v0.AwsRelationalDatabaseInstance": {
            "type": "object",
            "required": [
                "AwsRelationalDatabaseDefinitionID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "AwsRelationalDatabaseDefinitionID": {
                    "description": "The definition that configures this instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ResourceInventory": {
                    "description": "An inventory of all AWS resources for the EKS cluster.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The ID of the workload instance that the database instance serves.",
                    "type": "integer"
                }
            }
        },
        "v0.ControlPlaneComponent": {
            "type": "object",
            "required": [
                "ControlPlaneInstanceID",
                "Name"
            ],
            "properties": {
                "ControlPlaneInstanceID": {
                    "description": "The control plane instance ID that this component belongs to",
                    "type": "integer"
                },
                "Enabled": {
                    "description": "Indicate whether the component is enabled to be deployed. Currently only respected by controllers",
                    "type": "boolean"
                },
                "ImageName": {
                    "description": "The image name of the component",
                    "type": "string"
                },
                "ImageRepo": {
                    "description": "The image repo of the component",
                    "type": "string"
                },
                "ImageTag": {
                    "description": "The image tag of the component",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the component",
                    "type": "string"
                },
                "ServiceAccountName": {
                    "description": "The service account name to use when deploying",
                    "type": "string"
                },
                "ServiceResourceName": {
                    "description": "The service resource name to use when deploying",
                    "type": "string"
                }
            }
        },
        "v0.ControlPlaneDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "AuthEnabled": {
                    "description": "Used to indicate whether the control plane is deployed with auth settings",
                    "type": "boolean"
                },
                "ControlPlaneInstances": {
                    "description": "The associated control plane instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "OnboardParent": {
                    "description": "When instances of this control plane are deployed, Object representing control plane and its parent are\nonboarded as part of deployment, using this we can disable that process and simply spin a new instance with\na clean DB.",
                    "type": "boolean"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.ControlPlaneInstance": {
            "type": "object",
            "required": [
                "ControlPlaneDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "Namespace"
            ],
            "properties": {
                "ApiServerEndpoint": {
                    "description": "Information for connecting to the rest api for the control plane",
                    "type": "string"
                },
                "CACert": {
                    "description": "The CA Cert that is associated with the control plane",
                    "type": "string"
                },
                "Children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "ClientCert": {
                    "description": "The client cert that is associated with the control plane",
                    "type": "string"
                },
                "ClientKey": {
                    "description": "The client Key that is associated with the control plane",
                    "type": "string"
                },
                "ControlPlaneDefinitionID": {
                    "description": "The definition used to configure the control plane instance.",
                    "type": "integer"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "CustomComponentInfo": {
                    "description": "Passed in information for the different components of the control plane i.e. controller etc\nWhen not provided, the default values will be used. If provided, they will override the default values.\nDespite being a reference to another database entry, we dont validate association.\nThis allows a user to provide CustomComponentInfo at instance creation time so the reconciler has the info it needs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneComponent"
                    }
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Genesis": {
                    "description": "Indicates whether this is was the first control plane that was spun up in a control plane group",
                    "type": "boolean"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "IsSelf": {
                    "description": "When true, indicates the control plane instance represents the control plane in which it's stored",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "the kubernetes runtime instance the control plane is running on",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Namespace": {
                    "description": "The namespace to deploy the control plane in",
                    "type": "string"
                },
                "Parent": {
                    "$ref": "#/definitions/v0.ControlPlaneInstance"
                },
                "ParentControlPlaneInstanceID": {
                    "description": "These are pointers to the parent and children of the current control plane\nThis is useful to map out the topology between control planes being managed by one another",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.DomainNameDefinition": {
            "type": "object",
            "required": [
                "AdminEmail",
                "Domain",
                "Name",
                "Zone"
            ],
            "properties": {
                "AdminEmail": {
                    "description": "The email address of the domain administrator.",
                    "type": "string"
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Domain": {
                    "description": "The base domain upon which the subdomain will be added to give a workload\na unique domain name.",
                    "type": "string"
                },
                "DomainNameInstances": {
                    "description": "The associated domain name instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.DomainNameInstance"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "Zone": {
                    "description": "The name of the zone in which the domain is managed.",
                    "type": "string"
                }
            }
        },
        "v0.DomainNameInstance": {
            "type": "object",
            "required": [
                "DomainNameDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DomainNameDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The cluster where the workload that is using the domain name is running.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload instance this gateway belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.ForwardProxyDefinition": {
            "type": "object",
            "required": [
                "Name",
                "UpstreamHost",
                "UpstreamPath"
            ],
            "properties": {
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UpstreamHost": {
                    "description": "The hostname of the upstream service.",
                    "type": "string"
                },
                "UpstreamPath": {
                    "description": "The path for the upstream service.",
                    "type": "string"
                }
            }
        },
        "v0.ForwardProxyInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ForwardProxyDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the forward proxy is deployed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.GatewayDefinition": {
            "type": "object",
            "required": [
                "Name",
                "TCPPort"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DomainNameDefinitionID": {
                    "description": "The domain name to serve requests for.",
                    "type": "integer"
                },
                "GatewayInstances": {
                    "description": "The associated gateway instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.GatewayInstance"
                    }
                },
                "HTTPSRedirect": {
                    "description": "Redirect all requests to HTTP port to HTTPS.",
                    "type": "boolean"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "Paths": {
                    "description": "The request paths to serve requests for.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "ServiceName": {
                    "description": "The kubernetes service to route requests to.",
                    "type": "string"
                },
                "SubDomain": {
                    "description": "An optional subdomain to add to the domain name.",
                    "type": "string"
                },
                "TCPPort": {
                    "description": "TCP Port to expose to outside network.",
                    "type": "integer"
                },
                "TLSEnabled": {
                    "description": "Indicates if TLS is enabled.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadDefinitionID": {
                    "description": "The workload definition that belongs to this resource.",
                    "type": "integer"
                }
            }
        },
        "v0.GatewayInstance": {
            "type": "object",
            "required": [
                "GatewayDefinitionID",
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadInstanceID"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "GatewayDefinitionID": {
                    "description": "GatewayDefinitionID is the definition used to configure the workload instance.",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime where the ingress layer is installed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload instance this gateway belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.KubernetesRuntimeDefinition": {
            "type": "object",
            "required": [
                "InfraProvider",
                "Name"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "HighAvailability": {
                    "description": "If true, will be deployed in a highly available configuration across\nmultiple zones within a region and with multiple replicas of Kubernetes\ncontrol plane components.",
                    "type": "boolean"
                },
                "InfraProvider": {
                    "description": "The infrastructure provider running the compute infrastructure for the\ncluster.",
                    "type": "string"
                },
                "InfraProviderAccountName": {
                    "description": "The infra provider account ID.  Determines which account the infra is\ndeployed on.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstances": {
                    "description": "The associated kubernetes runtime instances that are deployed from this\ndefinition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.KubernetesRuntimeInstance"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "NodeMaximum": {
                    "description": "Sets the maximum number of nodes for the default node group.",
                    "type": "integer"
                },
                "NodeProfile": {
                    "description": "Sets the CPU:memory ration of the machine type for the default node\ngroup.",
                    "type": "string"
                },
                "NodeSize": {
                    "description": "Sets the compute capacity of the machine type for the default node group.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.KubernetesRuntimeInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeDefinitionID",
                "Location",
                "Name"
            ],
            "properties": {
                "APIEndpoint": {
                    "description": "The network endpoint at which to reach the kube-api.",
                    "type": "string"
                },
                "CACertificate": {
                    "description": "The CA certificate used to generate the cert and key if\nself-signed.",
                    "type": "string"
                },
                "Certificate": {
                    "description": "The client certificate to use for auth to the kube-api.",
                    "type": "string"
                },
                "CertificateKey": {
                    "description": "The client certificate key to use for auth to the kube-api.",
                    "type": "string"
                },
                "ConnectionToken": {
                    "description": "Used to authenticate with a OIDC provider that implements auth for a\nKubernetes cluster.  It is an alternative to client cert authenticaion.",
                    "type": "string"
                },
                "ConnectionTokenExpiration": {
                    "description": "ConnectionTokenExpiration is the time when a ConnectionToken will expire.\nUsed to ensure a token will not expire before it can be used.",
                    "type": "string"
                },
                "ControlPlaneInstance": {
                    "description": "The associated control plane instances running on this kubernetes runtime instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.ControlPlaneInstance"
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DefaultRuntime": {
                    "description": "If true, this Kubernetes cluster will be used for all workloads if not\notherwise assigned.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "DnsControllerInstanceId": {
                    "description": "The WorkloadInstanceID of the gateway support service",
                    "type": "integer"
                },
                "ForceDelete": {
                    "description": "If true, delete the runtime even if there are workloads present.",
                    "type": "boolean"
                },
                "GatewayWorkloadInstanceID": {
                    "description": "The WorkloadInstanceID of the gateway support service",
                    "type": "integer"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeDefinitionID": {
                    "description": "The kubernetes runtime definition for this instance.",
                    "type": "integer"
                },
                "Location": {
                    "description": "The geographical location for the runtime cluster.  This is an\nabstraction for the cloud provider regions that is mapped into the\nregions used by providers.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "ThreeportAgentImage": {
                    "description": "An alternate threeport image to use when deploying threeport agent to\nmanaged Kubernetes runtime clusters.  If not supplied, the official image\nwith the correct version will be used.",
                    "type": "string"
                },
                "ThreeportControlPlaneHost": {
                    "description": "If true, the Kubernetes cluster is hosting a threeport control plane and\nany controllers that connect to the kube API will use internal cluster\nDNS rather than the external APIEndpoint.",
                    "type": "boolean"
                },
                "WorkloadInstance": {
                    "description": "The associated workload instances running on this kubernetes runtime.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                }
            }
        },
        "v0.LogBackend": {
            "type": "object",
            "required": [
                "Destination",
                "Name"
            ],
            "properties": {
                "Destination": {
                    "description": "The network address to connect to for storing log messages.",
                    "type": "string"
                },
                "LogStorageDefinitions": {
                    "description": "The storage definitions using the log backend for log storage.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LogStorageDefinition"
                    }
                },
                "Name": {
                    "description": "The unique name of a logging back end.",
                    "type": "string"
                }
            }
        },
        "v0.LogStorageDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "LogBackends": {
                    "description": "The backend storage mechanisms for retaining logs.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.LogBackend"
                    }
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                }
            }
        },
        "v0.LogStorageInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterID": {
                    "description": "The cluster from which log messages are being aggregated to send to a log\nback end.",
                    "type": "integer"
                },
                "LogStorageDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                }
            }
        },
        "v0.Meta": {
            "type": "object",
            "properties": {
                "Page": {
                    "description": "current Page",
                    "type": "integer",
                    "example": 1
                },
                "Size": {
                    "description": "Size of the current page (number of returned Object elements)",
                    "type": "integer",
                    "example": 1
                },
                "TotalCount": {
                    "description": "TotalCount of returned Object elements",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v0.ObjectType": {
            "type": "string",
            "enum": [
                "WorkloadDefinition",
                "WorkloadResourceDefinition",
                "WorkloadInstance",
                "AttachedObjectReference",
                "WorkloadResourceInstance",
                "WorkloadEvent",
                "LogBackend",
                "LogStorageDefinition",
                "LogStorageInstance",
                "KubernetesRuntimeDefinition",
                "KubernetesRuntimeInstance",
                "ControlPlaneDefinition",
                "ControlPlaneInstance",
                "AwsAccount",
                "AwsEksKubernetesRuntimeDefinition",
                "AwsEksKubernetesRuntimeInstance",
                "AwsRelationalDatabaseDefinition",
                "AwsRelationalDatabaseInstance",
                "AwsObjectStorageBucketDefinition",
                "AwsObjectStorageBucketInstance",
                "Profile",
                "Tier",
                "GatewayDefinition",
                "GatewayInstance",
                "DomainNameDefinition",
                "DomainNameInstance",
                "ForwardProxyDefinition",
                "ForwardProxyInstance"
            ],
            "x-enum-varnames": [
                "ObjectTypeWorkloadDefinition",
                "ObjectTypeWorkloadResourceDefinition",
                "ObjectTypeWorkloadInstance",
                "ObjectTypeAttachedObjectReference",
                "ObjectTypeWorkloadResourceInstance",
                "ObjectTypeWorkloadEvent",
                "ObjectTypeLogBackend",
                "ObjectTypeLogStorageDefinition",
                "ObjectTypeLogStorageInstance",
                "ObjectTypeKubernetesRuntimeDefinition",
                "ObjectTypeKubernetesRuntimeInstance",
                "ObjectTypeControlPlaneDefinition",
                "ObjectTypeControlPlaneInstance",
                "ObjectTypeAwsAccount",
                "ObjectTypeAwsEksKubernetesRuntimeDefinition",
                "ObjectTypeAwsEksKubernetesRuntimeInstance",
                "ObjectTypeAwsRelationalDatabaseDefinition",
                "ObjectTypeAwsRelationalDatabaseInstance",
                "ObjectTypeAwsObjectStorageBucketDefinition",
                "ObjectTypeAwsObjectStorageBucketInstance",
                "ObjectTypeProfile",
                "ObjectTypeTier",
                "ObjectTypeGatewayDefinition",
                "ObjectTypeGatewayInstance",
                "ObjectTypeDomainNameDefinition",
                "ObjectTypeDomainNameInstance",
                "ObjectTypeForwardProxyDefinition",
                "ObjectTypeForwardProxyInstance"
            ]
        },
        "v0.Profile": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Name": {
                    "description": "The unique name of a profile",
                    "type": "string"
                }
            }
        },
        "v0.Response": {
            "description": "Meta info with ObjectType array of Data of Object",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains array of returned Object elements",
                    "type": "array",
                    "items": {}
                },
                "Meta": {
                    "description": "Meta contains PageRequestParams (current page and size of current page) and TotalCount (number of returned Object elements)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Meta"
                        }
                    ]
                },
                "Status": {
                    "description": "Status represents an error that occurred while handling a request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Status"
                        }
                    ]
                },
                "Type": {
                    "description": "Type contains ObjectType of returned Data elements",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.ObjectType"
                        }
                    ],
                    "example": "Transfer"
                }
            }
        },
        "v0.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The HTTP response status code, e.g. 200 | 201 | 500",
                    "type": "integer",
                    "example": 200
                },
                "error": {
                    "description": "The response error message if applicable, defaults to \"\"",
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "description": "The HTTP response status code message, e.g. OK | Created | Internal Server Error",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "v0.Tier": {
            "type": "object",
            "required": [
                "Criticality",
                "Name"
            ],
            "properties": {
                "Criticality": {
                    "description": "The relative rank of criticality between tiers.  The higher the number,\nthe greater the criticality.  For example, a development tier could have\na criticality value of 10 while production could be 100.  Access control\ncan then use this criticality value to determine user access.",
                    "type": "integer"
                },
                "Name": {
                    "description": "The unique name of a tier.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadDefinition": {
            "type": "object",
            "required": [
                "Name",
                "YAMLDocument"
            ],
            "properties": {
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "WorkloadInstances": {
                    "description": "The associated workload instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                },
                "WorkloadResourceDefinitions": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                    }
                },
                "YAMLDocument": {
                    "description": "The yaml manifests that define the workload configuration.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadEvent": {
            "type": "object",
            "required": [
                "Message",
                "Reason",
                "RuntimeEventUID",
                "Timestamp",
                "Type"
            ],
            "properties": {
                "Message": {
                    "description": "The message associated with the event.",
                    "type": "string"
                },
                "Reason": {
                    "description": "The reason for the event.",
                    "type": "string"
                },
                "RuntimeEventUID": {
                    "description": "A unique ID for de-duplicating purposes.  It is one of two thing:\n* The Kubernetes Event resource UID: when the WorkloadEvent is derived\ndirectly from a Kubernetes Event.\n* The workload controller ID: when the WorkloadEvent is emitted by the\nworkload controller.",
                    "type": "string"
                },
                "Timestamp": {
                    "description": "The timestamp for the event in the kubernetes runtime.",
                    "type": "string"
                },
                "Type": {
                    "description": "The type of event that occurred in Kubernetes.",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The related workload instance.",
                    "type": "integer"
                },
                "WorkloadResourceInstanceID": {
                    "description": "The related workload resource instance.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadInstance": {
            "type": "object",
            "required": [
                "KubernetesRuntimeInstanceID",
                "Name",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "AttachedObjectReferences": {
                    "description": "The threeport objects that are deployed to support the workload instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.AttachedObjectReference"
                    }
                },
                "CreationAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "CreationConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "CreationFailed": {
                    "description": "Gets set to true if creation process fails.",
                    "type": "boolean"
                },
                "DeletionAcknowledged": {
                    "description": "Used by controllers to acknowledge deletion and indicate that deletion\nreconciliation has begun so that subsequent reconciliation attempts can\nact accordingly.",
                    "type": "string"
                },
                "DeletionConfirmed": {
                    "description": "Used by controllers to confirm deletion of an object.",
                    "type": "string"
                },
                "DeletionScheduled": {
                    "description": "Used to inform reconcilers that an object is being deleted so they may\ncomplete delete reconciliation before actually deleting the object from the database.",
                    "type": "string"
                },
                "Events": {
                    "description": "All events generated for the workload instance that aren't related to a\nparticular workload resource instance.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadEvent"
                    }
                },
                "InterruptReconciliation": {
                    "description": "InterruptReconciliation is used by the controller to indicated that future\nreconcilation should be interrupted.  Useful in cases where there is a\nsituation where future reconciliation could be descructive such as\nspinning up more infrastructure when there is a unresolved problem.",
                    "type": "boolean"
                },
                "KubernetesRuntimeInstanceID": {
                    "description": "The kubernetes runtime to which the workload is deployed.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by the object's controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The latest status of a workload instance.",
                    "type": "string"
                },
                "WorkloadDefinitionID": {
                    "description": "The definition used to configure the workload instance.",
                    "type": "integer"
                },
                "WorkloadResourceInstances": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceInstance"
                    }
                }
            }
        },
        "v0.WorkloadResourceDefinition": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "WorkloadDefinitionID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadResourceInstance": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadInstanceID"
            ],
            "properties": {
                "Events": {
                    "description": "All events that have occured related to this object.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadEvent"
                    }
                },
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.  This field is a superset of\nWorkloadResourceDefinition.JSONDefinition in that it has namespace\nmanagement and other configuration - such as resource allocation\nmanagement - added.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "LastOperation": {
                    "description": "The most recent operation performed on a Kubernete resource in the\nkubernetes runtime.",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by workload controller.",
                    "type": "boolean"
                },
                "RuntimeDefinition": {
                    "description": "The JSON definition of a Kubernetes resource as stored in etcd in the\nkubernetes runtime.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "ScheduledForDeletion": {
                    "description": "Whether another controller has scheduled this resource for deletion",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "version.RESTAPIVersion": {
            "type": "object",
            "required": [
                "Version"
            ],
            "properties": {
                "Version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v0.2.2",
	Host:             "rest-api.threeport.io",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Threeport RESTful API",
	Description:      "Threeport RESTful API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
