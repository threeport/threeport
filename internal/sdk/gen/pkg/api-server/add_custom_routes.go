package apiserver

import (
	"fmt"
	"path/filepath"

	. "github.com/dave/jennifer/jen"

	"github.com/threeport/threeport/internal/sdk/gen"
	sdkutil "github.com/threeport/threeport/internal/sdk/util"
	cli "github.com/threeport/threeport/pkg/cli/v0"
)

// GenAddCustomRoutes generates the function to add custom routes to the API
// server.
func GenAddCustomRoutes(gen *gen.Generator) error {
	for _, versionConf := range gen.GlobalVersionConfig.Versions {
		f := NewFile("routes")
		f.HeaderComment("generated by 'threeport-sdk gen' but will not be regenerated - intended for modification")

		f.ImportAlias("github.com/labstack/echo/v4", "echo")

		f.Comment("AddCustomRoutes adds non code-generated routes for special use cases.")
		f.Func().Id("AddCustomRoutes").Params(
			Id("e").Op("*").Qual(
				"github.com/labstack/echo/v4",
				"Echo",
			).Op(",").Id("h").Op("*").Qual(
				fmt.Sprintf("%s/pkg/api-server/%s/handlers", gen.ModulePath, versionConf.VersionName),
				"Handler",
			),
		).Block(
			Comment("SomeCustomRoutes(e, h)"),
		)

		// write code to file
		genFilepath := filepath.Join(
			"pkg",
			"api-server",
			versionConf.VersionName,
			"routes",
			"routes.go",
		)
		fileWritten, err := sdkutil.WriteCodeToFile(f, genFilepath, false)
		if err != nil {
			return fmt.Errorf("failed to write generated code to file %s: %w", genFilepath, err)
		}
		if fileWritten {
			cli.Info(fmt.Sprintf("source code to add custom routes written to %s", genFilepath))
		} else {
			cli.Info(fmt.Sprintf("source code to add custom routes already exists at %s - not overwritten", genFilepath))
		}
	}

	return nil
}
