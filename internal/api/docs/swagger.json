{
    "swagger": "2.0",
    "info": {
        "description": "Threeport RESTful API.",
        "title": "Threeport RESTful API",
        "termsOfService": "https://threeport.io/api-tos/",
        "contact": {
            "name": "Threeport Admin",
            "url": "https://threeport.io/support",
            "email": "support@threeport.io"
        },
        "version": "v0.0.6"
    },
    "host": "rest-api.threeport.io",
    "basePath": "/",
    "paths": {
        "/aws-accounts/versions": {
            "get": {
                "description": "Get the supported API versions for aws accounts.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsAccountVersions gets the supported versions for the aws account API.",
                "operationId": "awsAccount-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-cluster-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks cluster definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksClusterDefinitionVersions gets the supported versions for the aws eks cluster definition API.",
                "operationId": "awsEksClusterDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-cluster-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks cluster instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksClusterInstanceVersions gets the supported versions for the aws eks cluster instance API.",
                "operationId": "awsEksClusterInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseDefinitionVersions gets the supported versions for the aws relational database definition API.",
                "operationId": "awsRelationalDatabaseDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseInstanceVersions gets the supported versions for the aws relational database instance API.",
                "operationId": "awsRelationalDatabaseInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/cluster-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for cluster definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetClusterDefinitionVersions gets the supported versions for the cluster definition API.",
                "operationId": "clusterDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/cluster-instances/versions": {
            "get": {
                "description": "Get the supported API versions for cluster instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetClusterInstanceVersions gets the supported versions for the cluster instance API.",
                "operationId": "clusterInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/companies/versions": {
            "get": {
                "description": "Get the supported API versions for companies.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetCompanyVersions gets the supported versions for the company API.",
                "operationId": "company-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for domain name definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameDefinitionVersions gets the supported versions for the domain name definition API.",
                "operationId": "domainNameDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-instances/versions": {
            "get": {
                "description": "Get the supported API versions for domain name instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameInstanceVersions gets the supported versions for the domain name instance API.",
                "operationId": "domainNameInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyDefinitionVersions gets the supported versions for the forward proxy definition API.",
                "operationId": "forwardProxyDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-instances/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyInstanceVersions gets the supported versions for the forward proxy instance API.",
                "operationId": "forwardProxyInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-backends/versions": {
            "get": {
                "description": "Get the supported API versions for log backends.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogBackendVersions gets the supported versions for the log backend API.",
                "operationId": "logBackend-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for log storage definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageDefinitionVersions gets the supported versions for the log storage definition API.",
                "operationId": "logStorageDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-instances/versions": {
            "get": {
                "description": "Get the supported API versions for log storage instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageInstanceVersions gets the supported versions for the log storage instance API.",
                "operationId": "logStorageInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/network-ingress-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for network ingress definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworkIngressDefinitionVersions gets the supported versions for the network ingress definition API.",
                "operationId": "networkIngressDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/network-ingress-instances/versions": {
            "get": {
                "description": "Get the supported API versions for network ingress instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworkIngressInstanceVersions gets the supported versions for the network ingress instance API.",
                "operationId": "networkIngressInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/profiles/versions": {
            "get": {
                "description": "Get the supported API versions for profiles.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetProfileVersions gets the supported versions for the profile API.",
                "operationId": "profile-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/tiers/versions": {
            "get": {
                "description": "Get the supported API versions for tiers.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTierVersions gets the supported versions for the tier API.",
                "operationId": "tier-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/users/versions": {
            "get": {
                "description": "Get the supported API versions for users.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetUserVersions gets the supported versions for the user API.",
                "operationId": "user-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts": {
            "get": {
                "description": "Get all aws accounts from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws accounts.",
                "operationId": "get-awsAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws account search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws account to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws account.",
                "operationId": "add-awsAccount",
                "parameters": [
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts/{id}": {
            "get": {
                "description": "Get a particular aws account from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws account.",
                "operationId": "get-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws account in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws account by replacing the entire object.",
                "operationId": "replace-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws account by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws account.",
                "operationId": "delete-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws account in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws account.",
                "operationId": "update-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-definitions": {
            "get": {
                "description": "Get all aws eks cluster definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks cluster definitions.",
                "operationId": "get-awsEksClusterDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks cluster definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks cluster definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks cluster definition.",
                "operationId": "add-awsEksClusterDefinition",
                "parameters": [
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-definitions/{id}": {
            "get": {
                "description": "Get a particular aws eks cluster definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks cluster definition.",
                "operationId": "get-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks cluster definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks cluster definition by replacing the entire object.",
                "operationId": "replace-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks cluster definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks cluster definition.",
                "operationId": "delete-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks cluster definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks cluster definition.",
                "operationId": "update-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-instances": {
            "get": {
                "description": "Get all aws eks cluster instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks cluster instances.",
                "operationId": "get-awsEksClusterInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks cluster instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks cluster instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks cluster instance.",
                "operationId": "add-awsEksClusterInstance",
                "parameters": [
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-instances/{id}": {
            "get": {
                "description": "Get a particular aws eks cluster instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks cluster instance.",
                "operationId": "get-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks cluster instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks cluster instance by replacing the entire object.",
                "operationId": "replace-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks cluster instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks cluster instance.",
                "operationId": "delete-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks cluster instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks cluster instance.",
                "operationId": "update-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions": {
            "get": {
                "description": "Get all aws relational database definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database definitions.",
                "operationId": "get-awsRelationalDatabaseDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database definition.",
                "operationId": "add-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions/{id}": {
            "get": {
                "description": "Get a particular aws relational database definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database definition.",
                "operationId": "get-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database definition by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database definition.",
                "operationId": "delete-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database definition.",
                "operationId": "update-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances": {
            "get": {
                "description": "Get all aws relational database instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database instances.",
                "operationId": "get-awsRelationalDatabaseInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database instance.",
                "operationId": "add-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances/{id}": {
            "get": {
                "description": "Get a particular aws relational database instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database instance.",
                "operationId": "get-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database instance by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database instance.",
                "operationId": "delete-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database instance.",
                "operationId": "update-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-definitions": {
            "get": {
                "description": "Get all cluster definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all cluster definitions.",
                "operationId": "get-clusterDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new cluster definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new cluster definition.",
                "operationId": "add-clusterDefinition",
                "parameters": [
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-definitions/{id}": {
            "get": {
                "description": "Get a particular cluster definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a cluster definition.",
                "operationId": "get-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a cluster definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing cluster definition by replacing the entire object.",
                "operationId": "replace-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a cluster definition.",
                "operationId": "delete-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing cluster definition.",
                "operationId": "update-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-instances": {
            "get": {
                "description": "Get all cluster instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all cluster instances.",
                "operationId": "get-clusterInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new cluster instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new cluster instance.",
                "operationId": "add-clusterInstance",
                "parameters": [
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-instances/{id}": {
            "get": {
                "description": "Get a particular cluster instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a cluster instance.",
                "operationId": "get-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a cluster instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing cluster instance by replacing the entire object.",
                "operationId": "replace-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a cluster instance.",
                "operationId": "delete-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing cluster instance.",
                "operationId": "update-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies": {
            "get": {
                "description": "Get all companies from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all companies.",
                "operationId": "get-companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new company to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new company.",
                "operationId": "add-company",
                "parameters": [
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies/{id}": {
            "get": {
                "description": "Get a particular company from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a company.",
                "operationId": "get-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a company in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating company objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing company by replacing the entire object.",
                "operationId": "replace-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a company by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a company.",
                "operationId": "delete-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a company in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating company objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing company.",
                "operationId": "update-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions": {
            "get": {
                "description": "Get all domain name definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name definitions.",
                "operationId": "get-domainNameDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name definition.",
                "operationId": "add-domainNameDefinition",
                "parameters": [
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-definitions/{id}": {
            "get": {
                "description": "Get a particular domain name definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name definition.",
                "operationId": "get-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name definition by replacing the entire object.",
                "operationId": "replace-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name definition.",
                "operationId": "delete-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name definition.",
                "operationId": "update-domainNameDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameDefinition object",
                        "name": "domainNameDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances": {
            "get": {
                "description": "Get all domain name instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all domain name instances.",
                "operationId": "get-domainNameInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "domain name instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new domain name instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new domain name instance.",
                "operationId": "add-domainNameInstance",
                "parameters": [
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/domain-name-instances/{id}": {
            "get": {
                "description": "Get a particular domain name instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a domain name instance.",
                "operationId": "get-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a domain name instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing domain name instance by replacing the entire object.",
                "operationId": "replace-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a domain name instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a domain name instance.",
                "operationId": "delete-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a domain name instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating domain name instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing domain name instance.",
                "operationId": "update-domainNameInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DomainNameInstance object",
                        "name": "domainNameInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.DomainNameInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-definitions": {
            "get": {
                "description": "Get all forward proxy definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all forward proxy definitions.",
                "operationId": "get-forwardProxyDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "forward proxy definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new forward proxy definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new forward proxy definition.",
                "operationId": "add-forwardProxyDefinition",
                "parameters": [
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-definitions/{id}": {
            "get": {
                "description": "Get a particular forward proxy definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a forward proxy definition.",
                "operationId": "get-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a forward proxy definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating forward proxy definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing forward proxy definition by replacing the entire object.",
                "operationId": "replace-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a forward proxy definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a forward proxy definition.",
                "operationId": "delete-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a forward proxy definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating forward proxy definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing forward proxy definition.",
                "operationId": "update-forwardProxyDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyDefinition object",
                        "name": "forwardProxyDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-instances": {
            "get": {
                "description": "Get all forward proxy instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all forward proxy instances.",
                "operationId": "get-forwardProxyInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "forward proxy instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new forward proxy instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new forward proxy instance.",
                "operationId": "add-forwardProxyInstance",
                "parameters": [
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/forward-proxy-instances/{id}": {
            "get": {
                "description": "Get a particular forward proxy instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a forward proxy instance.",
                "operationId": "get-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a forward proxy instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating forward proxy instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing forward proxy instance by replacing the entire object.",
                "operationId": "replace-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a forward proxy instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a forward proxy instance.",
                "operationId": "delete-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a forward proxy instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating forward proxy instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing forward proxy instance.",
                "operationId": "update-forwardProxyInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ForwardProxyInstance object",
                        "name": "forwardProxyInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ForwardProxyInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends": {
            "get": {
                "description": "Get all log backends from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log backends.",
                "operationId": "get-logBackends",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log backend search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log backend to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log backend.",
                "operationId": "add-logBackend",
                "parameters": [
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-backends/{id}": {
            "get": {
                "description": "Get a particular log backend from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log backend.",
                "operationId": "get-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log backend in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log backend by replacing the entire object.",
                "operationId": "replace-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log backend by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log backend.",
                "operationId": "delete-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log backend in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log backend objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log backend.",
                "operationId": "update-logBackend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogBackend object",
                        "name": "logBackend",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogBackend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions": {
            "get": {
                "description": "Get all log storage definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage definitions.",
                "operationId": "get-logStorageDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage definition.",
                "operationId": "add-logStorageDefinition",
                "parameters": [
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-definitions/{id}": {
            "get": {
                "description": "Get a particular log storage definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage definition.",
                "operationId": "get-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage definition by replacing the entire object.",
                "operationId": "replace-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage definition.",
                "operationId": "delete-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage definition.",
                "operationId": "update-logStorageDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageDefinition object",
                        "name": "logStorageDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances": {
            "get": {
                "description": "Get all log storage instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all log storage instances.",
                "operationId": "get-logStorageInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log storage instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new log storage instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new log storage instance.",
                "operationId": "add-logStorageInstance",
                "parameters": [
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/log-storage-instances/{id}": {
            "get": {
                "description": "Get a particular log storage instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a log storage instance.",
                "operationId": "get-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a log storage instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing log storage instance by replacing the entire object.",
                "operationId": "replace-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a log storage instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a log storage instance.",
                "operationId": "delete-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a log storage instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating log storage instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing log storage instance.",
                "operationId": "update-logStorageInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "LogStorageInstance object",
                        "name": "logStorageInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.LogStorageInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/network-ingress-definitions": {
            "get": {
                "description": "Get all network ingress definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all network ingress definitions.",
                "operationId": "get-networkIngressDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network ingress definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new network ingress definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new network ingress definition.",
                "operationId": "add-networkIngressDefinition",
                "parameters": [
                    {
                        "description": "NetworkIngressDefinition object",
                        "name": "networkIngressDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/network-ingress-definitions/{id}": {
            "get": {
                "description": "Get a particular network ingress definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a network ingress definition.",
                "operationId": "get-networkIngressDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a network ingress definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating network ingress definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing network ingress definition by replacing the entire object.",
                "operationId": "replace-networkIngressDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NetworkIngressDefinition object",
                        "name": "networkIngressDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a network ingress definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a network ingress definition.",
                "operationId": "delete-networkIngressDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a network ingress definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating network ingress definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing network ingress definition.",
                "operationId": "update-networkIngressDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NetworkIngressDefinition object",
                        "name": "networkIngressDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/network-ingress-instances": {
            "get": {
                "description": "Get all network ingress instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all network ingress instances.",
                "operationId": "get-networkIngressInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "network ingress instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new network ingress instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new network ingress instance.",
                "operationId": "add-networkIngressInstance",
                "parameters": [
                    {
                        "description": "NetworkIngressInstance object",
                        "name": "networkIngressInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/network-ingress-instances/{id}": {
            "get": {
                "description": "Get a particular network ingress instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a network ingress instance.",
                "operationId": "get-networkIngressInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a network ingress instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating network ingress instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing network ingress instance by replacing the entire object.",
                "operationId": "replace-networkIngressInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NetworkIngressInstance object",
                        "name": "networkIngressInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a network ingress instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a network ingress instance.",
                "operationId": "delete-networkIngressInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a network ingress instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating network ingress instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing network ingress instance.",
                "operationId": "update-networkIngressInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NetworkIngressInstance object",
                        "name": "networkIngressInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.NetworkIngressInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles": {
            "get": {
                "description": "Get all profiles from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all profiles.",
                "operationId": "get-profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new profile to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new profile.",
                "operationId": "add-profile",
                "parameters": [
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/profiles/{id}": {
            "get": {
                "description": "Get a particular profile from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a profile.",
                "operationId": "get-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a profile in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing profile by replacing the entire object.",
                "operationId": "replace-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a profile by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a profile.",
                "operationId": "delete-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a profile in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating profile objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing profile.",
                "operationId": "update-profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile object",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers": {
            "get": {
                "description": "Get all tiers from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all tiers.",
                "operationId": "get-tiers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tier search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tier to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new tier.",
                "operationId": "add-tier",
                "parameters": [
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/tiers/{id}": {
            "get": {
                "description": "Get a particular tier from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a tier.",
                "operationId": "get-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a tier in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing tier by replacing the entire object.",
                "operationId": "replace-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tier by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a tier.",
                "operationId": "delete-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a tier in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating tier objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing tier.",
                "operationId": "update-tier",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tier object",
                        "name": "tier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Tier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/users": {
            "get": {
                "description": "Get all users from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all users.",
                "operationId": "get-users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new user to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new user.",
                "operationId": "add-user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/users/{id}": {
            "get": {
                "description": "Get a particular user from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a user.",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a user in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating user objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing user by replacing the entire object.",
                "operationId": "replace-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a user.",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a user in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating user objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing user.",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions": {
            "get": {
                "description": "Get all workload definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload definitions.",
                "operationId": "get-workloadDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload definition.",
                "operationId": "add-workloadDefinition",
                "parameters": [
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-definitions/{id}": {
            "get": {
                "description": "Get a particular workload definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload definition.",
                "operationId": "get-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload definition by replacing the entire object.",
                "operationId": "replace-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload definition.",
                "operationId": "delete-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload definition.",
                "operationId": "update-workloadDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadDefinition object",
                        "name": "workloadDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances": {
            "get": {
                "description": "Get all workload instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload instances.",
                "operationId": "get-workloadInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload instance.",
                "operationId": "add-workloadInstance",
                "parameters": [
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-instances/{id}": {
            "get": {
                "description": "Get a particular workload instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload instance.",
                "operationId": "get-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload instance by replacing the entire object.",
                "operationId": "replace-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload instance.",
                "operationId": "delete-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload instance.",
                "operationId": "update-workloadInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadInstance object",
                        "name": "workloadInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definition-sets": {
            "post": {
                "description": "Add a set of new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new set of workload resource definitions.",
                "operationId": "add-workloadResourceDefinitions",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object array",
                        "name": "workloadResourceDefinitions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions": {
            "get": {
                "description": "Get all workload resource definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource definitions.",
                "operationId": "get-workloadResourceDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource definition.",
                "operationId": "add-workloadResourceDefinition",
                "parameters": [
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-definitions/{id}": {
            "get": {
                "description": "Get a particular workload resource definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource definition.",
                "operationId": "get-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource definition by replacing the entire object.",
                "operationId": "replace-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource definition.",
                "operationId": "delete-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource definition.",
                "operationId": "update-workloadResourceDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceDefinition object",
                        "name": "workloadResourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances": {
            "get": {
                "description": "Get all workload resource instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all workload resource instances.",
                "operationId": "get-workloadResourceInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "workload resource instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new workload resource instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new workload resource instance.",
                "operationId": "add-workloadResourceInstance",
                "parameters": [
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/workload-resource-instances/{id}": {
            "get": {
                "description": "Get a particular workload resource instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a workload resource instance.",
                "operationId": "get-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a workload resource instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing workload resource instance by replacing the entire object.",
                "operationId": "replace-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workload resource instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a workload resource instance.",
                "operationId": "delete-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a workload resource instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating workload resource instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing workload resource instance.",
                "operationId": "update-workloadResourceInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "WorkloadResourceInstance object",
                        "name": "workloadResourceInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.WorkloadResourceInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get a version of REST API.",
                "produces": [
                    "application/json"
                ],
                "summary": "gets an REST API version.",
                "operationId": "get-api-version",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/version.RESTAPIVersion"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/version.RESTAPIVersion"
                        }
                    }
                }
            }
        },
        "/workload-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadDefinitionVersions gets the supported versions for the workload definition API.",
                "operationId": "workloadDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadInstanceVersions gets the supported versions for the workload instance API.",
                "operationId": "workloadInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceDefinitionVersions gets the supported versions for the workload resource definition API.",
                "operationId": "workloadResourceDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/workload-resource-instances/versions": {
            "get": {
                "description": "Get the supported API versions for workload resource instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetWorkloadResourceInstanceVersions gets the supported versions for the workload resource instance API.",
                "operationId": "workloadResourceInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.RESTAPIVersions": {
            "type": "object",
            "required": [
                "API",
                "Versions"
            ],
            "properties": {
                "API": {
                    "description": "Required.  REST API resource name.",
                    "type": "string"
                },
                "Versions": {
                    "description": "Required.  REST API resource versions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v0.AwsAccount": {
            "type": "object",
            "required": [
                "AccessKeyID",
                "DefaultRegion",
                "Name",
                "SecretAccessKey"
            ],
            "properties": {
                "AccessKeyID": {
                    "description": "The key ID credentials for the AWS account.",
                    "type": "string"
                },
                "DefaultRegion": {
                    "description": "The region to use for AWS managed services if not specified.",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SecretAccessKey": {
                    "description": "The secret key credentials for the AWS account.",
                    "type": "string"
                }
            }
        },
        "v0.AwsEksClusterDefinition": {
            "type": "object",
            "required": [
                "AWSAccountID",
                "Name"
            ],
            "properties": {
                "AWSAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "ClusterDefinitionID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsEksClusterInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterInstanceID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsRelationalDatabaseDefinition": {
            "type": "object",
            "required": [
                "AWSAccountID",
                "Engine",
                "Name",
                "Storage"
            ],
            "properties": {
                "AWSAccountID": {
                    "description": "The AWS account in which the RDS instance will be provisioned.",
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Engine": {
                    "description": "The database engine for the instance.  One of:\n* mysql\n* postgres",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Storage": {
                    "description": "The amount of storage to allocate for the database.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.AwsRelationalDatabaseInstance": {
            "type": "object",
            "required": [
                "Name",
                "Status"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "awsRelationalDatabaseDefinitionID": {
                    "type": "integer"
                }
            }
        },
        "v0.ClusterDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "DefaultNodeGroupInitialSize": {
                    "type": "integer"
                },
                "DefaultNodeGroupInstanceType": {
                    "type": "string"
                },
                "DefaultNodeGroupMaximumSize": {
                    "type": "integer"
                },
                "DefaultNodeGroupMinimumSize": {
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Region": {
                    "description": "The geographical region for the cluster roughly corresponding to cloud\nprovider regions.\nTODO: determine whether to make this attribute immutable b/c cluster\ninstances will not be moved once deployed.",
                    "type": "string"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "ZoneCount": {
                    "description": "The number of zones the cluster should span for availability.",
                    "type": "integer"
                }
            }
        },
        "v0.ClusterInstance": {
            "type": "object",
            "required": [
                "APIEndpoint",
                "Certificate",
                "ClusterDefinitionID",
                "Key",
                "Name"
            ],
            "properties": {
                "APIEndpoint": {
                    "description": "The network endpoint at which to reach the kube-api.",
                    "type": "string"
                },
                "CACertificate": {
                    "description": "The CA certificate used to generate the cert and key if\nself-signed.",
                    "type": "string"
                },
                "Certificate": {
                    "description": "The client certificate to use for auth to the kube-api.",
                    "type": "string"
                },
                "ClusterDefinitionID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "DefaultCluster": {
                    "description": "If true the cluster instance to use for deployments if not otherwise\nspecified.  Can only have one per account.",
                    "type": "boolean"
                },
                "Key": {
                    "description": "The client key to use for auth to the kube-api.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Region": {
                    "description": "The geographical region for the cluster roughly corresponding to cloud\nprovider regions.  Stored in the instance (as well as definition) since a\nchange to the definition will not move a cluster.",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "ThreeportControlPlaneCluster": {
                    "description": "If true, controllers will connect to the kube API using internal DNS\nrather than the APIEndpoint.",
                    "type": "boolean"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "WorkloadInstance": {
                    "description": "The associated workload instances running on this cluster.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                }
            }
        },
        "v0.Company": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "Name": {
                    "description": "Company's legal name.",
                    "type": "string"
                },
                "Users": {
                    "description": "Users that represent the company.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.User"
                    }
                }
            }
        },
        "v0.DomainNameDefinition": {
            "type": "object",
            "required": [
                "Domain",
                "Name",
                "Zone"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Domain": {
                    "description": "The base domain upon which the subdomain will be added to give a workload\na unique domain name.",
                    "type": "string"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "Zone": {
                    "description": "The name of the zone in which the domain is managed.",
                    "type": "string"
                }
            }
        },
        "v0.DomainNameInstance": {
            "type": "object",
            "required": [
                "ClusterInstanceID",
                "DomainNameDefinitionID",
                "Name"
            ],
            "properties": {
                "ClusterInstanceID": {
                    "description": "The cluster where the workload that is using the domain name is running.",
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "DomainNameDefinitionID": {
                    "description": "The definition used to define the instance.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.ForwardProxyDefinition": {
            "type": "object",
            "required": [
                "Name",
                "UpstreamHost",
                "UpstreamPath"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UpstreamHost": {
                    "description": "The hostname of the upstream service.",
                    "type": "string"
                },
                "UpstreamPath": {
                    "description": "The path for the upstream service.",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.ForwardProxyInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterInstanceID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "ForwardProxyDefinitionID": {
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.LogBackend": {
            "type": "object",
            "required": [
                "Destination"
            ],
            "properties": {
                "Destination": {
                    "description": "The network address to connect to for storing log messages.",
                    "type": "string"
                }
            }
        },
        "v0.LogStorageDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.LogStorageInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "LogStorageDefinitionID": {
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.Meta": {
            "type": "object",
            "properties": {
                "Page": {
                    "description": "current Page",
                    "type": "integer",
                    "example": 1
                },
                "Size": {
                    "description": "Size of the current page (number of returned Object elements)",
                    "type": "integer",
                    "example": 1
                },
                "TotalCount": {
                    "description": "TotalCount of returned Object elements",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v0.NetworkIngressDefinition": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "DomainNameID": {
                    "description": "The domain name to serve requests for.",
                    "type": "integer"
                },
                "HTTPPort": {
                    "description": "Expose port 80.",
                    "type": "boolean"
                },
                "HTTPSPort": {
                    "description": "Expose port 443 with TLS termination.",
                    "type": "boolean"
                },
                "HTTPSRedirect": {
                    "description": "Redirect all requests to HTTP port to HTTPS.",
                    "type": "boolean"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "Private": {
                    "description": "Allow requests from the private network outside the workload cluster but\nnot from the public internet.",
                    "type": "boolean"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Public": {
                    "description": "Allow requests from the public internet.",
                    "type": "boolean"
                },
                "TCPPort": {
                    "description": "TCP Port to expose to outside network.",
                    "type": "integer"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.NetworkIngressInstance": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "ClusterInstanceID": {
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "NetworkIngressDefinitionID": {
                    "type": "integer"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.ObjectType": {
            "type": "string",
            "enum": [
                "WorkloadDefinition",
                "WorkloadResourceDefinition",
                "WorkloadInstance",
                "WorkloadResourceInstance",
                "DomainNameDefinition",
                "DomainNameInstance",
                "ForwardProxyDefinition",
                "ForwardProxyInstance",
                "Profile",
                "Tier",
                "User",
                "Company",
                "ClusterDefinition",
                "ClusterInstance",
                "AwsAccount",
                "AwsEksClusterDefinition",
                "AwsEksClusterInstance",
                "AwsRelationalDatabaseDefinition",
                "AwsRelationalDatabaseInstance",
                "LogBackend",
                "LogStorageDefinition",
                "LogStorageInstance",
                "NetworkIngressDefinition",
                "NetworkIngressInstance"
            ],
            "x-enum-varnames": [
                "ObjectTypeWorkloadDefinition",
                "ObjectTypeWorkloadResourceDefinition",
                "ObjectTypeWorkloadInstance",
                "ObjectTypeWorkloadResourceInstance",
                "ObjectTypeDomainNameDefinition",
                "ObjectTypeDomainNameInstance",
                "ObjectTypeForwardProxyDefinition",
                "ObjectTypeForwardProxyInstance",
                "ObjectTypeProfile",
                "ObjectTypeTier",
                "ObjectTypeUser",
                "ObjectTypeCompany",
                "ObjectTypeClusterDefinition",
                "ObjectTypeClusterInstance",
                "ObjectTypeAwsAccount",
                "ObjectTypeAwsEksClusterDefinition",
                "ObjectTypeAwsEksClusterInstance",
                "ObjectTypeAwsRelationalDatabaseDefinition",
                "ObjectTypeAwsRelationalDatabaseInstance",
                "ObjectTypeLogBackend",
                "ObjectTypeLogStorageDefinition",
                "ObjectTypeLogStorageInstance",
                "ObjectTypeNetworkIngressDefinition",
                "ObjectTypeNetworkIngressInstance"
            ]
        },
        "v0.Profile": {
            "type": "object",
            "required": [
                "Name"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "The name of a profile",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.Response": {
            "description": "Meta info with ObjectType array of Data of Object",
            "type": "object",
            "properties": {
                "Data": {
                    "description": "Data contains array of returned Object elements",
                    "type": "array",
                    "items": {}
                },
                "Meta": {
                    "description": "Meta contains PageRequestParams (current page and size of current page) and TotalCount (number of returned Object elements)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Meta"
                        }
                    ]
                },
                "Status": {
                    "description": "Status represents an error that occurred while handling a request",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.Status"
                        }
                    ]
                },
                "Type": {
                    "description": "Type contains ObjectType of returned Data elements",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v0.ObjectType"
                        }
                    ],
                    "example": "Transfer"
                }
            }
        },
        "v0.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "The HTTP response status code, e.g. 200 | 201 | 500",
                    "type": "integer",
                    "example": 200
                },
                "error": {
                    "description": "The response error message if applicable, defaults to \"\"",
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "description": "The HTTP response status code message, e.g. OK | Created | Internal Server Error",
                    "type": "string",
                    "example": "OK"
                }
            }
        },
        "v0.Tier": {
            "type": "object",
            "required": [
                "Criticality",
                "Name"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Criticality": {
                    "description": "The relative rank of criticality between tiers.  The higher the number,\nthe greater the criticality.  For example, a development tier could have\na criticality value of 10 while production could be 100.  Access control\ncan then use this criticality value to determine user access.",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                }
            }
        },
        "v0.User": {
            "type": "object",
            "required": [
                "CountryOfResidence",
                "DateOfBirth",
                "Email",
                "FirstName",
                "LastName",
                "Nationality",
                "Password"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Company that the user represents.",
                    "type": "integer"
                },
                "CountryOfResidence": {
                    "description": "Country where user resides.",
                    "type": "string"
                },
                "DateOfBirth": {
                    "description": "User's date of birth.  Format: `2006-01-02T00:00:00Z`",
                    "type": "string"
                },
                "Email": {
                    "description": "User's email address.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "User's first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "User's last name.",
                    "type": "string"
                },
                "Nationality": {
                    "description": "Country of which user is a citizen.",
                    "type": "string"
                },
                "Password": {
                    "description": "User's account password.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadDefinition": {
            "type": "object",
            "required": [
                "Name",
                "YAMLDocument"
            ],
            "properties": {
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name for the definition.",
                    "type": "string"
                },
                "ProfileID": {
                    "description": "The profile to associate with the definition.  Profile is a named\nstandard configuration for a definition object.",
                    "type": "integer"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by workload controller.",
                    "type": "boolean"
                },
                "TierID": {
                    "description": "The tier to associate with the definition.  Tier is a level of\ncriticality for access control.",
                    "type": "integer"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "WorkloadInstances": {
                    "description": "The associated workload instances that are deployed from this definition.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadInstance"
                    }
                },
                "WorkloadResourceDefinitions": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceDefinition"
                    }
                },
                "YAMLDocument": {
                    "description": "The yaml manifests that define the workload configuration.",
                    "type": "string"
                }
            }
        },
        "v0.WorkloadInstance": {
            "type": "object",
            "required": [
                "ClusterInstanceID",
                "Name",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "ClusterInstanceID": {
                    "description": "ClusterID is the cluster to which the workload is deployed.",
                    "type": "integer"
                },
                "CompanyID": {
                    "description": "Required if no UserID.  The company that owns the object.",
                    "type": "integer"
                },
                "Name": {
                    "description": "An arbitrary name the instance",
                    "type": "string"
                },
                "Reconciled": {
                    "description": "Indicates if object is considered to be reconciled by workload controller.",
                    "type": "boolean"
                },
                "Status": {
                    "description": "The status of the instance.\nTODO: use a custom type",
                    "type": "string"
                },
                "UserID": {
                    "description": "Required if no CompanyID.  The user that owns the object.",
                    "type": "integer"
                },
                "WorkloadDefinitionID": {
                    "description": "WorkloadDefinitionID is the definition used to configure the workload\ninstance.",
                    "type": "integer"
                },
                "WorkloadResourceInstances": {
                    "description": "The associated workload resource definitions that are derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v0.WorkloadResourceInstance"
                    }
                }
            }
        },
        "v0.WorkloadResourceDefinition": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadDefinitionID"
            ],
            "properties": {
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "WorkloadDefinitionID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "v0.WorkloadResourceInstance": {
            "type": "object",
            "required": [
                "JSONDefinition",
                "WorkloadInstanceID"
            ],
            "properties": {
                "JSONDefinition": {
                    "description": "The individual manifest in JSON format.  This field is a superset of\nWorkloadResourceDefinition.JSONDefinition in that it has namespace\nmanagement and other configuration - such as resource allocation\nmanagement - added.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Status": {
                    "description": "The Kubernetes status of the deployed resource.\nOne of:\n* Pending\n* Running\n* Succeeded\n* Failed\n* Unknown",
                    "type": "string"
                },
                "WorkloadInstanceID": {
                    "description": "The workload definition this resource belongs to.",
                    "type": "integer"
                }
            }
        },
        "version.RESTAPIVersion": {
            "type": "object",
            "required": [
                "Version"
            ],
            "properties": {
                "Version": {
                    "type": "string"
                }
            }
        }
    }
}