// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://threeport.io/api-tos/",
        "contact": {
            "name": "Threeport Admin",
            "url": "https://threeport.io/support",
            "email": "support@threeport.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/aws-accounts/versions": {
            "get": {
                "description": "Get the supported API versions for aws accounts.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsAccountVersions gets the supported versions for the aws account API.",
                "operationId": "awsAccount-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-cluster-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks cluster definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksClusterDefinitionVersions gets the supported versions for the aws eks cluster definition API.",
                "operationId": "awsEksClusterDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-eks-cluster-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws eks cluster instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsEksClusterInstanceVersions gets the supported versions for the aws eks cluster instance API.",
                "operationId": "awsEksClusterInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseDefinitionVersions gets the supported versions for the aws relational database definition API.",
                "operationId": "awsRelationalDatabaseDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/aws-relational-database-instances/versions": {
            "get": {
                "description": "Get the supported API versions for aws relational database instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAwsRelationalDatabaseInstanceVersions gets the supported versions for the aws relational database instance API.",
                "operationId": "awsRelationalDatabaseInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/cluster-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for cluster definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetClusterDefinitionVersions gets the supported versions for the cluster definition API.",
                "operationId": "clusterDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/cluster-instances/versions": {
            "get": {
                "description": "Get the supported API versions for cluster instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetClusterInstanceVersions gets the supported versions for the cluster instance API.",
                "operationId": "clusterInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/companies/versions": {
            "get": {
                "description": "Get the supported API versions for companies.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetCompanyVersions gets the supported versions for the company API.",
                "operationId": "company-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for domain name definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameDefinitionVersions gets the supported versions for the domain name definition API.",
                "operationId": "domainNameDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/domain-name-instances/versions": {
            "get": {
                "description": "Get the supported API versions for domain name instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetDomainNameInstanceVersions gets the supported versions for the domain name instance API.",
                "operationId": "domainNameInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyDefinitionVersions gets the supported versions for the forward proxy definition API.",
                "operationId": "forwardProxyDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/forward-proxy-instances/versions": {
            "get": {
                "description": "Get the supported API versions for forward proxy instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetForwardProxyInstanceVersions gets the supported versions for the forward proxy instance API.",
                "operationId": "forwardProxyInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-backends/versions": {
            "get": {
                "description": "Get the supported API versions for log backends.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogBackendVersions gets the supported versions for the log backend API.",
                "operationId": "logBackend-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for log storage definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageDefinitionVersions gets the supported versions for the log storage definition API.",
                "operationId": "logStorageDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/log-storage-instances/versions": {
            "get": {
                "description": "Get the supported API versions for log storage instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetLogStorageInstanceVersions gets the supported versions for the log storage instance API.",
                "operationId": "logStorageInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/network-ingress-definitions/versions": {
            "get": {
                "description": "Get the supported API versions for network ingress definitions.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworkIngressDefinitionVersions gets the supported versions for the network ingress definition API.",
                "operationId": "networkIngressDefinition-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/network-ingress-instances/versions": {
            "get": {
                "description": "Get the supported API versions for network ingress instances.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetNetworkIngressInstanceVersions gets the supported versions for the network ingress instance API.",
                "operationId": "networkIngressInstance-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/profiles/versions": {
            "get": {
                "description": "Get the supported API versions for profiles.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetProfileVersions gets the supported versions for the profile API.",
                "operationId": "profile-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/tiers/versions": {
            "get": {
                "description": "Get the supported API versions for tiers.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetTierVersions gets the supported versions for the tier API.",
                "operationId": "tier-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/users/versions": {
            "get": {
                "description": "Get the supported API versions for users.",
                "produces": [
                    "application/json"
                ],
                "summary": "GetUserVersions gets the supported versions for the user API.",
                "operationId": "user-get-versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RESTAPIVersions"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts": {
            "get": {
                "description": "Get all aws accounts from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws accounts.",
                "operationId": "get-awsAccounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws account search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws account to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws account.",
                "operationId": "add-awsAccount",
                "parameters": [
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-accounts/{id}": {
            "get": {
                "description": "Get a particular aws account from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws account.",
                "operationId": "get-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws account in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws account by replacing the entire object.",
                "operationId": "replace-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws account by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws account.",
                "operationId": "delete-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws account in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws account objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws account.",
                "operationId": "update-awsAccount",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsAccount object",
                        "name": "awsAccount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-definitions": {
            "get": {
                "description": "Get all aws eks cluster definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks cluster definitions.",
                "operationId": "get-awsEksClusterDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks cluster definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks cluster definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks cluster definition.",
                "operationId": "add-awsEksClusterDefinition",
                "parameters": [
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-definitions/{id}": {
            "get": {
                "description": "Get a particular aws eks cluster definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks cluster definition.",
                "operationId": "get-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks cluster definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks cluster definition by replacing the entire object.",
                "operationId": "replace-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks cluster definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks cluster definition.",
                "operationId": "delete-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks cluster definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks cluster definition.",
                "operationId": "update-awsEksClusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterDefinition object",
                        "name": "awsEksClusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-instances": {
            "get": {
                "description": "Get all aws eks cluster instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws eks cluster instances.",
                "operationId": "get-awsEksClusterInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws eks cluster instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws eks cluster instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws eks cluster instance.",
                "operationId": "add-awsEksClusterInstance",
                "parameters": [
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-eks-cluster-instances/{id}": {
            "get": {
                "description": "Get a particular aws eks cluster instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws eks cluster instance.",
                "operationId": "get-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws eks cluster instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws eks cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws eks cluster instance by replacing the entire object.",
                "operationId": "replace-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws eks cluster instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws eks cluster instance.",
                "operationId": "delete-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws eks cluster instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws eks cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws eks cluster instance.",
                "operationId": "update-awsEksClusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsEksClusterInstance object",
                        "name": "awsEksClusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsEksClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions": {
            "get": {
                "description": "Get all aws relational database definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database definitions.",
                "operationId": "get-awsRelationalDatabaseDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database definition.",
                "operationId": "add-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-definitions/{id}": {
            "get": {
                "description": "Get a particular aws relational database definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database definition.",
                "operationId": "get-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database definition by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database definition.",
                "operationId": "delete-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database definition.",
                "operationId": "update-awsRelationalDatabaseDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseDefinition object",
                        "name": "awsRelationalDatabaseDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances": {
            "get": {
                "description": "Get all aws relational database instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all aws relational database instances.",
                "operationId": "get-awsRelationalDatabaseInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "aws relational database instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new aws relational database instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new aws relational database instance.",
                "operationId": "add-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/aws-relational-database-instances/{id}": {
            "get": {
                "description": "Get a particular aws relational database instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a aws relational database instance.",
                "operationId": "get-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a aws relational database instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing aws relational database instance by replacing the entire object.",
                "operationId": "replace-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a aws relational database instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a aws relational database instance.",
                "operationId": "delete-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a aws relational database instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating aws relational database instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing aws relational database instance.",
                "operationId": "update-awsRelationalDatabaseInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AwsRelationalDatabaseInstance object",
                        "name": "awsRelationalDatabaseInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.AwsRelationalDatabaseInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-definitions": {
            "get": {
                "description": "Get all cluster definitions from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all cluster definitions.",
                "operationId": "get-clusterDefinitions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster definition search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new cluster definition to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new cluster definition.",
                "operationId": "add-clusterDefinition",
                "parameters": [
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-definitions/{id}": {
            "get": {
                "description": "Get a particular cluster definition from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a cluster definition.",
                "operationId": "get-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a cluster definition in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing cluster definition by replacing the entire object.",
                "operationId": "replace-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster definition by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a cluster definition.",
                "operationId": "delete-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster definition in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating cluster definition objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing cluster definition.",
                "operationId": "update-clusterDefinition",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterDefinition object",
                        "name": "clusterDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-instances": {
            "get": {
                "description": "Get all cluster instances from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all cluster instances.",
                "operationId": "get-clusterInstances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cluster instance search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new cluster instance to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new cluster instance.",
                "operationId": "add-clusterInstance",
                "parameters": [
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/cluster-instances/{id}": {
            "get": {
                "description": "Get a particular cluster instance from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a cluster instance.",
                "operationId": "get-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a cluster instance in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing cluster instance by replacing the entire object.",
                "operationId": "replace-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster instance by from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "deletes a cluster instance.",
                "operationId": "delete-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a cluster instance in the database.  Provide one or more fields to update.\nNote: This API endpint is for updating cluster instance objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates specific fields for an existing cluster instance.",
                "operationId": "update-clusterInstance",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClusterInstance object",
                        "name": "clusterInstance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.ClusterInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies": {
            "get": {
                "description": "Get all companies from the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all companies.",
                "operationId": "get-companies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company search by name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new company to the Threeport database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "adds a new company.",
                "operationId": "add-company",
                "parameters": [
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            }
        },
        "/v0/companies/{id}": {
            "get": {
                "description": "Get a particular company from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets a company.",
                "operationId": "get-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Replace a company in the database.  All required fields must be provided.\nIf any optional fields are not provided, they will be null post-update.\nNote: This API endpint is for updating company objects only.\nRequest bodies that include related objects will be accepted, however\nthe related objects will not be changed.  Call the patch or put method for\neach particular existing object to change them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "updates an existing company by replacing the entire object.",
                "operationId": "replace-company",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company object",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v0.Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v0.Response"